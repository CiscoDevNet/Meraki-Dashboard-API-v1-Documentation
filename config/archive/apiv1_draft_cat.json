{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0-streaming",
        "title": "Meraki Dashboard API",
        "description": "The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.\n\n> Date: 13 March, 2020\n>\n> [What's New](https://meraki.io/whats-new/)\n\n---\n\n[API Documentation](https://meraki.io/api)\n\n[Community Support](https://meraki.io/community)\n\n[Meraki Homepage](https://www.meraki.com)\n",
        "x-codegen-settings": {
            "appendContentHeaders": true,
            "brandLabel": "meraki",
            "collectParameters": true,
            "doNotSplitWords": [
                "ACLs",
                "NetFlow",
                "SSIDs",
                "VLANs"
            ],
            "generateAdvancedDocs": true,
            "generateAsyncCode": true,
            "projectName": "meraki",
            "sortResources": true,
            "useEnumPostfix": true,
            "useMethodPrefix": false,
            "useModelPostfix": true,
            "validateRequiredParameters": true
        }
    },
    "host": "api.meraki.com",
    "basePath": "/api/v1",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "bearer": []
        }
    ],
    "paths": {
        "/devices/{serial}": {
            "get": {
                "description": "Return a single device",
                "operationId": "getDevice",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "name": "My AP",
                                "lat": 37.4180951010362,
                                "lng": -122.098531723022,
                                "serial": "Q234-ABCD-5678",
                                "mac": "00:11:22:33:44:55",
                                "model": "MR34",
                                "address": "1600 Pennsylvania Ave",
                                "notes": "My AP's note",
                                "lanIp": "1.2.3.4",
                                "tags": " recently-added ",
                                "networkId": "N_24329156",
                                "beaconIdParams": {
                                    "uuid": "00000000-0000-0000-0000-000000000000",
                                    "major": 5,
                                    "minor": 3
                                },
                                "firmware": "wireless-25-14",
                                "floorPlanId": "g_1234567"
                            }
                        }
                    }
                },
                "summary": "Return a single device",
                "tags": [
                    "devices",
                    "configure"
                ]
            },
            "put": {
                "description": "Update the attributes of a device",
                "operationId": "updateDevice",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateDevice",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of a device"
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "The tags of a device"
                                },
                                "lat": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "The latitude of a device"
                                },
                                "lng": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "The longitude of a device"
                                },
                                "address": {
                                    "type": "string",
                                    "description": "The address of a device"
                                },
                                "notes": {
                                    "type": "string",
                                    "description": "The notes for the device. String. Limited to 255 characters."
                                },
                                "moveMapMarker": {
                                    "type": "boolean",
                                    "description": "Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified."
                                },
                                "switchProfileId": {
                                    "type": "string",
                                    "description": "The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' operation). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template."
                                },
                                "floorPlanId": {
                                    "type": "string",
                                    "description": "The floor plan to associate to this device. null disassociates the device from the floorplan."
                                }
                            },
                            "example": {
                                "name": "My AP",
                                "lat": 37.4180951010362,
                                "lng": -122.098531723022,
                                "serial": "Q234-ABCD-5678",
                                "mac": "00:11:22:33:44:55",
                                "tags": " recently-added "
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "name": "My AP",
                                "lat": 37.4180951010362,
                                "lng": -122.098531723022,
                                "serial": "Q234-ABCD-5678",
                                "mac": "00:11:22:33:44:55",
                                "model": "MR34",
                                "address": "1600 Pennsylvania Ave",
                                "notes": "My AP's note",
                                "lanIp": "1.2.3.4",
                                "tags": " recently-added ",
                                "networkId": "N_24329156",
                                "beaconIdParams": {
                                    "uuid": "00000000-0000-0000-0000-000000000000",
                                    "major": 5,
                                    "minor": 3
                                },
                                "firmware": "wireless-25-14",
                                "floorPlanId": "g_1234567"
                            }
                        }
                    }
                },
                "summary": "Update the attributes of a device",
                "tags": [
                    "devices",
                    "configure"
                ]
            }
        },
        "/devices/{serial}/appliance/performance": {
            "get": {
                "description": "Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.",
                "operationId": "getDeviceAppliancePerformance",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "perfScore": 10
                            }
                        }
                    }
                },
                "summary": "Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.",
                "tags": [
                    "appliance",
                    "monitor",
                    "performance"
                ]
            }
        },
        "/devices/{serial}/blinkLeds": {
            "post": {
                "description": "Blink the LEDs on a device",
                "operationId": "blinkDeviceLeds",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "blinkDeviceLeds",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "duration": {
                                    "type": "integer",
                                    "description": "The duration in seconds. Must be between 5 and 120. Default is 20 seconds"
                                },
                                "period": {
                                    "type": "integer",
                                    "description": "The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds"
                                },
                                "duty": {
                                    "type": "integer",
                                    "description": "The duty cycle as the percent active. Must be between 10 and 90. Default is 50."
                                }
                            },
                            "example": {
                                "duration": 20,
                                "period": 160,
                                "duty": 50
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "duration": 20,
                                "period": 160,
                                "duty": 50
                            }
                        }
                    }
                },
                "summary": "Blink the LEDs on a device",
                "tags": [
                    "devices",
                    "configure",
                    "blinkLeds"
                ]
            }
        },
        "/devices/{serial}/camera/analytics/live": {
            "get": {
                "description": "Returns live state from camera of analytics zones",
                "operationId": "getDeviceCameraAnalyticsLive",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ts": "2018-08-15T18:32:38.123Z",
                                "zones": {
                                    "0": {
                                        "person": 0
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Returns live state from camera of analytics zones",
                "tags": [
                    "camera",
                    "monitor",
                    "analytics",
                    "live"
                ]
            }
        },
        "/devices/{serial}/camera/analytics/overview": {
            "get": {
                "description": "Returns an overview of aggregate analytics data for a timespan",
                "operationId": "getDeviceCameraAnalyticsOverview",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "person",
                            "vehicle"
                        ],
                        "name": "objectType",
                        "in": "query",
                        "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "startTs": "2018-08-15T18:32:38.123Z",
                                    "endTs": "2018-08-15T18:33:38.123Z",
                                    "zoneId": 0,
                                    "entrances": 254,
                                    "averageCount": 5
                                }
                            ]
                        }
                    }
                },
                "summary": "Returns an overview of aggregate analytics data for a timespan",
                "tags": [
                    "camera",
                    "monitor",
                    "analytics",
                    "overview"
                ]
            }
        },
        "/devices/{serial}/camera/analytics/recent": {
            "get": {
                "description": "Returns most recent record for analytics zones",
                "operationId": "getDeviceCameraAnalyticsRecent",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "enum": [
                            "person",
                            "vehicle"
                        ],
                        "name": "objectType",
                        "in": "query",
                        "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "startTs": "2018-08-15T18:32:38.123Z",
                                    "endTs": "2018-08-15T18:33:38.123Z",
                                    "zoneId": 0,
                                    "entrances": 10,
                                    "averageCount": 2.54
                                }
                            ]
                        }
                    }
                },
                "summary": "Returns most recent record for analytics zones",
                "tags": [
                    "camera",
                    "monitor",
                    "analytics",
                    "recent"
                ]
            }
        },
        "/devices/{serial}/camera/analytics/zones": {
            "get": {
                "description": "Returns all configured analytic zones for this camera",
                "operationId": "getDeviceCameraAnalyticsZones",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "0",
                                    "type": "occupancy",
                                    "label": "Full Frame",
                                    "regionOfInterest": {
                                        "x0": "0.00",
                                        "y0": "0.00",
                                        "x1": "1.00",
                                        "y1": "1.00"
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "Returns all configured analytic zones for this camera",
                "tags": [
                    "camera",
                    "monitor",
                    "analytics",
                    "zones"
                ]
            }
        },
        "/devices/{serial}/camera/analytics/zones/{zoneId}/history": {
            "get": {
                "description": "Return historical records for analytic zones",
                "operationId": "getDeviceCameraAnalyticsZoneHistory",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "zoneId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour."
                    },
                    {
                        "type": "integer",
                        "name": "resolution",
                        "in": "query",
                        "description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "person",
                            "vehicle"
                        ],
                        "name": "objectType",
                        "in": "query",
                        "description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "startTs": "2018-08-15T18:32:38.123Z",
                                    "endTs": "2018-08-15T18:33:38.123Z",
                                    "entrances": 5,
                                    "averageCount": 1.5
                                }
                            ]
                        }
                    }
                },
                "summary": "Return historical records for analytic zones",
                "tags": [
                    "camera",
                    "monitor",
                    "analytics",
                    "zones",
                    "history"
                ]
            }
        },
        "/devices/{serial}/camera/generateSnapshot": {
            "post": {
                "description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
                "operationId": "generateDeviceCameraSnapshot",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "generateDeviceCameraSnapshot",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "timestamp": {
                                    "type": "string",
                                    "description": "[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time."
                                },
                                "fullframe": {
                                    "type": "boolean",
                                    "description": "[optional] If set to \"true\" the snapshot will be taken at full sensor resolution. This will error if used with timestamp."
                                }
                            },
                            "example": {}
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "url": "https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2",
                                "expiry": "Access to the image will expire at 2018-12-11T03:12:39Z."
                            }
                        }
                    }
                },
                "summary": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
                "tags": [
                    "camera",
                    "monitor",
                    "generateSnapshot"
                ]
            }
        },
        "/devices/{serial}/camera/qualityAndRetentionSettings": {
            "get": {
                "description": "Returns quality and retention settings for the given camera",
                "operationId": "getDeviceCameraQualityAndRetentionSettings",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "motionBasedRetentionEnabled": false,
                                "audioRecordingEnabled": false,
                                "restrictedBandwidthModeEnabled": false,
                                "profileId": null,
                                "quality": "Standard",
                                "motionDetectorVersion": 2,
                                "resolution": 720
                            }
                        }
                    }
                },
                "summary": "Returns quality and retention settings for the given camera",
                "tags": [
                    "camera",
                    "configure",
                    "qualityAndRetentionSettings"
                ]
            },
            "put": {
                "description": "Update quality and retention settings for the given camera",
                "operationId": "updateDeviceCameraQualityAndRetentionSettings",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateDeviceCameraQualityAndRetentionSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "profileId": {
                                    "type": "string",
                                    "description": "The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera."
                                },
                                "motionBasedRetentionEnabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera"
                                },
                                "audioRecordingEnabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera"
                                },
                                "restrictedBandwidthModeEnabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera"
                                },
                                "quality": {
                                    "type": "string",
                                    "enum": [
                                        "Standard",
                                        "High",
                                        "Enhanced"
                                    ],
                                    "description": "Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model."
                                },
                                "resolution": {
                                    "type": "string",
                                    "enum": [
                                        "1280x720",
                                        "1920x1080",
                                        "1080x1080",
                                        "2058x2058"
                                    ],
                                    "description": "Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080' or '2058x2058'. Not all resolutions are supported by every camera model."
                                },
                                "motionDetectorVersion": {
                                    "type": "integer",
                                    "enum": [
                                        1,
                                        2
                                    ],
                                    "description": "The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."
                                }
                            },
                            "example": {
                                "motionBasedRetentionEnabled": false,
                                "audioRecordingEnabled": false,
                                "restrictedBandwidthModeEnabled": false,
                                "profileId": null,
                                "quality": "Standard",
                                "motionDetectorVersion": 2,
                                "resolution": 720
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "motionBasedRetentionEnabled": false,
                                "audioRecordingEnabled": false,
                                "restrictedBandwidthModeEnabled": false,
                                "profileId": null,
                                "quality": "Standard",
                                "motionDetectorVersion": 2,
                                "resolution": 720
                            }
                        }
                    }
                },
                "summary": "Update quality and retention settings for the given camera",
                "tags": [
                    "camera",
                    "configure",
                    "qualityAndRetentionSettings"
                ]
            }
        },
        "/devices/{serial}/camera/videoLink": {
            "get": {
                "description": "Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp.",
                "operationId": "getDeviceCameraVideoLink",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "timestamp",
                        "in": "query",
                        "description": "[optional] The video link will start at this time. The timestamp should be a string in ISO8601 format. If no timestamp is specified, we will assume current time."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"
                            }
                        }
                    }
                },
                "summary": "Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp.",
                "tags": [
                    "camera",
                    "monitor",
                    "videoLink"
                ]
            }
        },
        "/devices/{serial}/cellularGateway/settings": {
            "get": {
                "description": "Show the LAN Settings of a MG",
                "operationId": "getDeviceCellularGatewaySettings",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "deviceName": "name of the MG",
                                "deviceLanIp": "192.168.0.33",
                                "deviceSubnet": "192.168.0.32/27",
                                "fixedIpAssignments": [
                                    {
                                        "mac": "0b:00:00:00:00:ac",
                                        "name": "server 1",
                                        "ip": "192.168.0.10"
                                    },
                                    {
                                        "mac": "0b:00:00:00:00:ab",
                                        "name": "server 2",
                                        "ip": "192.168.0.20"
                                    }
                                ],
                                "reservedIpRanges": [
                                    {
                                        "start": "192.168.1.0",
                                        "end": "192.168.1.1",
                                        "comment": "A reserved IP range"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Show the LAN Settings of a MG",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "settings"
                ]
            },
            "put": {
                "description": "Update the LAN Settings for a single MG.",
                "operationId": "updateDeviceCellularGatewaySettings",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateDeviceCellularGatewaySettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "reservedIpRanges": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "type": "string",
                                                "description": "Starting IP included in the reserved range of IPs"
                                            },
                                            "end": {
                                                "type": "string",
                                                "description": "Ending IP included in the reserved range of IPs"
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment explaining the reserved IP range"
                                            }
                                        },
                                        "required": [
                                            "start",
                                            "end",
                                            "comment"
                                        ]
                                    },
                                    "description": "list of all reserved IP ranges for a single MG"
                                },
                                "fixedIpAssignments": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "A descriptive name of the assignment"
                                            },
                                            "ip": {
                                                "type": "string",
                                                "description": "The IP address you want to assign to a specific server or device"
                                            },
                                            "mac": {
                                                "type": "string",
                                                "description": "The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address"
                                            }
                                        },
                                        "required": [
                                            "ip",
                                            "mac"
                                        ]
                                    },
                                    "description": "list of all fixed IP assignments for a single MG"
                                }
                            },
                            "example": {
                                "deviceName": "name of the MG",
                                "deviceLanIp": "192.168.0.33",
                                "deviceSubnet": "192.168.0.32/27",
                                "fixedIpAssignments": [
                                    {
                                        "mac": "0b:00:00:00:00:ac",
                                        "name": "server 1",
                                        "ip": "192.168.0.10"
                                    },
                                    {
                                        "mac": "0b:00:00:00:00:ab",
                                        "name": "server 2",
                                        "ip": "192.168.0.20"
                                    }
                                ],
                                "reservedIpRanges": [
                                    {
                                        "start": "192.168.1.0",
                                        "end": "192.168.1.1",
                                        "comment": "A reserved IP range"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "deviceName": "name of the MG",
                                "deviceLanIp": "192.168.0.33",
                                "deviceSubnet": "192.168.0.32/27",
                                "fixedIpAssignments": [
                                    {
                                        "mac": "0b:00:00:00:00:ac",
                                        "name": "server 1",
                                        "ip": "192.168.0.10"
                                    },
                                    {
                                        "mac": "0b:00:00:00:00:ab",
                                        "name": "server 2",
                                        "ip": "192.168.0.20"
                                    }
                                ],
                                "reservedIpRanges": [
                                    {
                                        "start": "192.168.1.0",
                                        "end": "192.168.1.1",
                                        "comment": "A reserved IP range"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the LAN Settings for a single MG.",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "settings"
                ]
            }
        },
        "/devices/{serial}/cellularGateway/settings/portForwardingRules": {
            "get": {
                "description": "Returns the port forwarding rules for a single MG.",
                "operationId": "getDeviceCellularGatewaySettingsPortForwardingRules",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "lanIp": "172.31.128.5",
                                        "name": "test",
                                        "access": "any",
                                        "publicPort": "11-12",
                                        "localPort": "4",
                                        "uplink": "both",
                                        "protocol": "tcp"
                                    },
                                    {
                                        "lanIp": "172.31.128.5",
                                        "name": "test 2",
                                        "access": "restricted",
                                        "allowedIps": [
                                            "10.10.10.10",
                                            "10.10.10.11"
                                        ],
                                        "publicPort": "99",
                                        "localPort": "5",
                                        "uplink": "both",
                                        "protocol": "tcp"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Returns the port forwarding rules for a single MG.",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "settings",
                    "portForwardingRules"
                ]
            },
            "put": {
                "description": "Updates the port forwarding rules for a single MG.",
                "operationId": "updateDeviceCellularGatewaySettingsPortForwardingRules",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateDeviceCellularGatewaySettingsPortForwardingRules",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "A descriptive name for the rule"
                                            },
                                            "lanIp": {
                                                "type": "string",
                                                "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN"
                                            },
                                            "publicPort": {
                                                "type": "string",
                                                "description": "A port or port ranges that will be forwarded to the host on the LAN"
                                            },
                                            "localPort": {
                                                "type": "string",
                                                "description": "A port or port ranges that will receive the forwarded traffic from the WAN"
                                            },
                                            "allowedIps": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges."
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "TCP or UDP"
                                            },
                                            "access": {
                                                "type": "string",
                                                "description": "`any` or `restricted`. Specify the right to make inbound connections on the specified ports or port ranges. If `restricted`, a list of allowed IPs is mandatory."
                                            }
                                        },
                                        "required": [
                                            "lanIp",
                                            "publicPort",
                                            "localPort",
                                            "protocol",
                                            "access"
                                        ]
                                    },
                                    "description": "An array of port forwarding params"
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "lanIp": "172.31.128.5",
                                        "name": "test",
                                        "access": "any",
                                        "publicPort": "11-12",
                                        "localPort": "4",
                                        "uplink": "both",
                                        "protocol": "tcp"
                                    },
                                    {
                                        "lanIp": "172.31.128.5",
                                        "name": "test 2",
                                        "access": "restricted",
                                        "allowedIps": [
                                            "10.10.10.10",
                                            "10.10.10.11"
                                        ],
                                        "publicPort": "99",
                                        "localPort": "5",
                                        "uplink": "both",
                                        "protocol": "tcp"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "lanIp": "172.31.128.5",
                                        "name": "test",
                                        "access": "any",
                                        "publicPort": "11-12",
                                        "localPort": "4",
                                        "uplink": "both",
                                        "protocol": "tcp"
                                    },
                                    {
                                        "lanIp": "172.31.128.5",
                                        "name": "test 2",
                                        "access": "restricted",
                                        "allowedIps": [
                                            "10.10.10.10",
                                            "10.10.10.11"
                                        ],
                                        "publicPort": "99",
                                        "localPort": "5",
                                        "uplink": "both",
                                        "protocol": "tcp"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Updates the port forwarding rules for a single MG.",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "settings",
                    "portForwardingRules"
                ]
            }
        },
        "/devices/{serial}/clients": {
            "get": {
                "description": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.",
                "operationId": "getDeviceClients",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "usage": {
                                        "sent": 138,
                                        "recv": 61
                                    },
                                    "id": "k74272e",
                                    "description": "Miles's phone",
                                    "mac": "22:33:44:55:66:77",
                                    "ip": "1.2.3.4",
                                    "user": "milesmeraki",
                                    "vlan": 255,
                                    "switchport": null,
                                    "mdnsName": "Miles's phone",
                                    "dhcpHostname": "MilesPhone"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.",
                "tags": [
                    "devices",
                    "monitor",
                    "clients"
                ]
            }
        },
        "/devices/{serial}/lldpCdp": {
            "get": {
                "description": "List LLDP and CDP information for a device",
                "operationId": "getDeviceLldpCdp",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "sourceMac": "00:11:22:33:44:55",
                                "ports": {
                                    "8": {
                                        "cdp": {
                                            "deviceId": "e0553d8cdf53",
                                            "portId": "Port 10",
                                            "address": "00:11:22:33:44:55",
                                            "sourcePort": "8"
                                        }
                                    },
                                    "12": {
                                        "cdp": {
                                            "deviceId": "e0553d8cdf53",
                                            "portId": "Port 11",
                                            "address": "00:11:22:33:44:55",
                                            "sourcePort": "12"
                                        },
                                        "lldp": {
                                            "systemName": "Meraki MS350-24X - Phineas",
                                            "portId": "11",
                                            "managementAddress": "00:11:22:33:44:55",
                                            "sourcePort": "12"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "List LLDP and CDP information for a device",
                "tags": [
                    "devices",
                    "monitor",
                    "lldpCdp"
                ]
            }
        },
        "/devices/{serial}/lossAndLatencyHistory": {
            "get": {
                "description": "Get the uplink loss percentage and latency in milliseconds for a wired network device.",
                "operationId": "getDeviceLossAndLatencyHistory",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
                        "x-example": 7200
                    },
                    {
                        "type": "integer",
                        "name": "resolution",
                        "in": "query",
                        "description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "wan1",
                            "wan2",
                            "cellular"
                        ],
                        "name": "uplink",
                        "in": "query",
                        "description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1.",
                        "x-example": "wan1"
                    },
                    {
                        "type": "string",
                        "name": "ip",
                        "in": "query",
                        "required": true,
                        "description": "The destination IP used to obtain the requested stats. This is required.",
                        "x-example": "1.2.3.4"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "startTime": "2018-10-09T22:18:27Z",
                                    "endTime": "2018-10-09T22:19:27Z",
                                    "lossPercent": 5,
                                    "latencyMs": 324
                                },
                                {
                                    "startTime": "2018-10-09T22:19:27Z",
                                    "endTime": "2018-10-09T22:20:27Z",
                                    "lossPercent": 1,
                                    "latencyMs": 43
                                },
                                {
                                    "startTime": "2018-10-09T22:20:27Z",
                                    "endTime": "2018-10-09T22:21:27Z",
                                    "lossPercent": 0,
                                    "latencyMs": 44
                                }
                            ]
                        }
                    }
                },
                "summary": "Get the uplink loss percentage and latency in milliseconds for a wired network device.",
                "tags": [
                    "devices",
                    "monitor",
                    "lossAndLatencyHistory"
                ]
            }
        },
        "/devices/{serial}/managementInterfaceSettings": {
            "get": {
                "description": "Return the management interface settings for a device",
                "operationId": "getDeviceManagementInterfaceSettings",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ddnsHostnames": {
                                    "activeDdnsHostname": "mx1-sample.dynamic-m.com",
                                    "ddnsHostnameWan1": "mx1-sample-1.dynamic-m.com",
                                    "ddnsHostnameWan2": "mx1-sample-2.dynamic-m.com"
                                },
                                "wan1": {
                                    "wanEnabled": "not configured",
                                    "usingStaticIp": true,
                                    "staticIp": "1.2.3.4",
                                    "staticSubnetMask": "255.255.255.0",
                                    "staticGatewayIp": "1.2.3.1",
                                    "staticDns": [
                                        "1.2.3.2",
                                        "1.2.3.3"
                                    ],
                                    "vlan": 7
                                },
                                "wan2": {
                                    "wanEnabled": "enabled",
                                    "usingStaticIp": false,
                                    "vlan": 2
                                }
                            }
                        }
                    }
                },
                "summary": "Return the management interface settings for a device",
                "tags": [
                    "devices",
                    "configure",
                    "managementInterfaceSettings"
                ]
            },
            "put": {
                "description": "Update the management interface settings for a device",
                "operationId": "updateDeviceManagementInterfaceSettings",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateDeviceManagementInterfaceSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "wan1": {
                                    "type": "object",
                                    "properties": {
                                        "wanEnabled": {
                                            "type": "string",
                                            "enum": [
                                                "enabled",
                                                "disabled",
                                                "not configured"
                                            ],
                                            "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'."
                                        },
                                        "usingStaticIp": {
                                            "type": "boolean",
                                            "description": "Configue the interface to have static IP settings or use DHCP."
                                        },
                                        "staticIp": {
                                            "type": "string",
                                            "description": "The IP the device should use on the WAN."
                                        },
                                        "staticGatewayIp": {
                                            "type": "string",
                                            "description": "The IP of the gateway on the WAN."
                                        },
                                        "staticSubnetMask": {
                                            "type": "string",
                                            "description": "The subnet mask for the WAN."
                                        },
                                        "staticDns": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "Up to two DNS IPs."
                                        },
                                        "vlan": {
                                            "type": "integer",
                                            "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false."
                                        }
                                    },
                                    "description": "WAN 1 settings"
                                },
                                "wan2": {
                                    "type": "object",
                                    "properties": {
                                        "wanEnabled": {
                                            "type": "string",
                                            "enum": [
                                                "enabled",
                                                "disabled",
                                                "not configured"
                                            ],
                                            "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'."
                                        },
                                        "usingStaticIp": {
                                            "type": "boolean",
                                            "description": "Configue the interface to have static IP settings or use DHCP."
                                        },
                                        "staticIp": {
                                            "type": "string",
                                            "description": "The IP the device should use on the WAN."
                                        },
                                        "staticGatewayIp": {
                                            "type": "string",
                                            "description": "The IP of the gateway on the WAN."
                                        },
                                        "staticSubnetMask": {
                                            "type": "string",
                                            "description": "The subnet mask for the WAN."
                                        },
                                        "staticDns": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "Up to two DNS IPs."
                                        },
                                        "vlan": {
                                            "type": "integer",
                                            "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false."
                                        }
                                    },
                                    "description": "WAN 2 settings (only for MX devices)"
                                }
                            },
                            "example": {
                                "wan1": {
                                    "wanEnabled": "not configured",
                                    "usingStaticIp": true,
                                    "staticIp": "1.2.3.4",
                                    "staticSubnetMask": "255.255.255.0",
                                    "staticGatewayIp": "1.2.3.1",
                                    "staticDns": [
                                        "1.2.3.2",
                                        "1.2.3.3"
                                    ],
                                    "vlan": 7
                                },
                                "wan2": {
                                    "wanEnabled": "enabled",
                                    "usingStaticIp": false,
                                    "vlan": 2
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "wan1": {
                                    "wanEnabled": "not configured",
                                    "usingStaticIp": true,
                                    "staticIp": "1.2.3.4",
                                    "staticSubnetMask": "255.255.255.0",
                                    "staticGatewayIp": "1.2.3.1",
                                    "staticDns": [
                                        "1.2.3.2",
                                        "1.2.3.3"
                                    ],
                                    "vlan": 7
                                },
                                "wan2": {
                                    "wanEnabled": "enabled",
                                    "usingStaticIp": false,
                                    "vlan": 2
                                }
                            }
                        }
                    }
                },
                "summary": "Update the management interface settings for a device",
                "tags": [
                    "devices",
                    "configure",
                    "managementInterfaceSettings"
                ]
            }
        },
        "/devices/{serial}/reboot": {
            "post": {
                "description": "Reboot a device",
                "operationId": "rebootDevice",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "success": true
                            }
                        }
                    }
                },
                "summary": "Reboot a device",
                "tags": [
                    "devices",
                    "configure",
                    "reboot"
                ]
            }
        },
        "/devices/{serial}/switch/ports": {
            "get": {
                "description": "List the switch ports for a switch",
                "operationId": "getDeviceSwitchPorts",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "portId": "1",
                                    "accessPolicyType": "Sticky MAC whitelist",
                                    "name": "My switch port",
                                    "tags": "tag1 tag2",
                                    "enabled": true,
                                    "poeEnabled": true,
                                    "type": "access",
                                    "vlan": 10,
                                    "voiceVlan": 20,
                                    "isolationEnabled": false,
                                    "rstpEnabled": true,
                                    "stpGuard": "disabled",
                                    "linkNegotiation": "Auto negotiate",
                                    "portScheduleId": "1234",
                                    "udld": "Alert only",
                                    "stickyMacWhitelist": [
                                        "34:56:fe:ce:8e:b0",
                                        "34:56:fe:ce:8e:b1"
                                    ],
                                    "stickyMacWhitelistLimit": 5,
                                    "stormControlEnabled": true
                                }
                            ]
                        }
                    }
                },
                "summary": "List the switch ports for a switch",
                "tags": [
                    "switch",
                    "monitor",
                    "ports"
                ]
            }
        },
        "/devices/{serial}/switch/ports/cycle": {
            "post": {
                "description": "Cycle a set of switch ports",
                "operationId": "cycleDeviceSwitchPorts",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "cycleDeviceSwitchPorts",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ports": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1, 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]"
                                }
                            },
                            "example": {
                                "ports": [
                                    "1",
                                    "2-5",
                                    "1_MA-MOD-8X10G_1",
                                    "1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8"
                                ]
                            },
                            "required": [
                                "ports"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ports": [
                                    "1",
                                    "2-5",
                                    "1_MA-MOD-8X10G_1",
                                    "1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8"
                                ]
                            }
                        }
                    }
                },
                "summary": "Cycle a set of switch ports",
                "tags": [
                    "switch",
                    "configure",
                    "ports",
                    "cycle"
                ]
            }
        },
        "/devices/{serial}/switch/ports/statuses": {
            "get": {
                "description": "Return the status for all the ports of a switch",
                "operationId": "getDeviceSwitchPortsStatuses",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "portId": "1",
                                    "enabled": true,
                                    "status": "Connected",
                                    "errors": [
                                        "PoE overload",
                                        "Very high proportion of CRC errors"
                                    ],
                                    "warnings": [
                                        "PoE port was denied power",
                                        "High proportion of CRC errors"
                                    ],
                                    "speed": "10 Gbps",
                                    "duplex": "full",
                                    "usageInKb": {
                                        "total": 40867,
                                        "sent": 23008,
                                        "recv": 17859
                                    },
                                    "cdp": {
                                        "systemName": "",
                                        "platform": "MS350-24X",
                                        "deviceId": "0c8ddbddee:ff",
                                        "portId": "Port 20",
                                        "nativeVlan": 1,
                                        "address": "10.0,0.1",
                                        "managementAddress": "10.0.0.100",
                                        "version": "1",
                                        "vtpManagementDomain": "",
                                        "capabilities": "Switch"
                                    },
                                    "lldp": {
                                        "systemName": "MS350-24X - Test",
                                        "systemDescription": "MS350-24X Cloud Managed PoE Switch",
                                        "portId": "20",
                                        "portDescription": "Port 20",
                                        "chassisId": "0c:8d:db:dd:ee:ff",
                                        "managementVlan": 1,
                                        "portVlan": 1,
                                        "managementAddress": "10.0.0.100",
                                        "systemCapabilities": "switch"
                                    },
                                    "clientCount": 10,
                                    "powerUsageInWh": 55.9,
                                    "trafficInKbps": {
                                        "total": 2.2,
                                        "sent": 1.2,
                                        "recv": 1
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the status for all the ports of a switch",
                "tags": [
                    "switch",
                    "monitor",
                    "ports",
                    "statuses"
                ]
            }
        },
        "/devices/{serial}/switch/ports/statuses/packets": {
            "get": {
                "description": "Return the packet counters for all the ports of a switch",
                "operationId": "getDeviceSwitchPortsStatusesPackets",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 1 day from today."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "portId": "1",
                                    "packets": [
                                        {
                                            "desc": "Total",
                                            "total": 112081,
                                            "sent": 104135,
                                            "recv": 7946,
                                            "ratePerSec": {
                                                "total": 1,
                                                "sent": 1,
                                                "recv": 0
                                            }
                                        },
                                        {
                                            "desc": "Broadcast",
                                            "total": 30884,
                                            "sent": 30370,
                                            "recv": 514,
                                            "ratePerSec": {
                                                "total": 0,
                                                "sent": 0,
                                                "recv": 0
                                            }
                                        },
                                        {
                                            "desc": "Multicast",
                                            "total": 67620,
                                            "sent": 66849,
                                            "recv": 771,
                                            "ratePerSec": {
                                                "total": 0,
                                                "sent": 0,
                                                "recv": 0
                                            }
                                        },
                                        {
                                            "desc": "CRC align errors",
                                            "total": 0,
                                            "sent": 0,
                                            "recv": 0,
                                            "ratePerSec": {
                                                "total": 0,
                                                "sent": 0,
                                                "recv": 0
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the packet counters for all the ports of a switch",
                "tags": [
                    "switch",
                    "monitor",
                    "ports",
                    "statuses",
                    "packets"
                ]
            }
        },
        "/devices/{serial}/switch/ports/{portId}": {
            "get": {
                "description": "Return a switch port",
                "operationId": "getDeviceSwitchPort",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "portId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "portId": "1",
                                "accessPolicyType": "Sticky MAC whitelist",
                                "name": "My switch port",
                                "tags": "tag1 tag2",
                                "enabled": true,
                                "poeEnabled": true,
                                "type": "access",
                                "vlan": 10,
                                "voiceVlan": 20,
                                "isolationEnabled": false,
                                "rstpEnabled": true,
                                "stpGuard": "disabled",
                                "linkNegotiation": "Auto negotiate",
                                "portScheduleId": "1234",
                                "udld": "Alert only",
                                "stickyMacWhitelist": [
                                    "34:56:fe:ce:8e:b0",
                                    "34:56:fe:ce:8e:b1"
                                ],
                                "stickyMacWhitelistLimit": 5,
                                "stormControlEnabled": true
                            }
                        }
                    }
                },
                "summary": "Return a switch port",
                "tags": [
                    "switch",
                    "configure",
                    "ports"
                ]
            },
            "put": {
                "description": "Update a switch port",
                "operationId": "updateDeviceSwitchPort",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "portId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateDeviceSwitchPort",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the switch port"
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "The tags of the switch port"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "The status of the switch port"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "trunk",
                                        "access"
                                    ],
                                    "description": "The type of the switch port ('trunk' or 'access')"
                                },
                                "vlan": {
                                    "type": "integer",
                                    "description": "The VLAN of the switch port. A null value will clear the value set for trunk ports."
                                },
                                "voiceVlan": {
                                    "type": "integer",
                                    "description": "The voice VLAN of the switch port. Only applicable to access ports."
                                },
                                "allowedVlans": {
                                    "type": "string",
                                    "description": "The VLANs allowed on the switch port. Only applicable to trunk ports."
                                },
                                "poeEnabled": {
                                    "type": "boolean",
                                    "description": "The PoE status of the switch port"
                                },
                                "isolationEnabled": {
                                    "type": "boolean",
                                    "description": "The isolation status of the switch port"
                                },
                                "rstpEnabled": {
                                    "type": "boolean",
                                    "description": "The rapid spanning tree protocol status"
                                },
                                "stpGuard": {
                                    "type": "string",
                                    "enum": [
                                        "disabled",
                                        "root guard",
                                        "bpdu guard",
                                        "loop guard"
                                    ],
                                    "description": "The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard')"
                                },
                                "linkNegotiation": {
                                    "type": "string",
                                    "description": "The link speed for the switch port"
                                },
                                "portScheduleId": {
                                    "type": "string",
                                    "description": "The ID of the port schedule. A value of null will clear the port schedule."
                                },
                                "udld": {
                                    "type": "string",
                                    "enum": [
                                        "Alert only",
                                        "Enforce"
                                    ],
                                    "description": "The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only."
                                },
                                "accessPolicyType": {
                                    "type": "string",
                                    "enum": [
                                        "Open",
                                        "Custom access policy",
                                        "MAC whitelist",
                                        "Sticky MAC whitelist"
                                    ],
                                    "description": "The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC whitelist' or 'Sticky MAC whitelist'"
                                },
                                "accessPolicyNumber": {
                                    "type": "integer",
                                    "description": "The number of a custom access policy to configure on the switch port. Only applicable when 'accessPolicyType' is 'Custom access policy'"
                                },
                                "macWhitelist": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC whitelist'"
                                },
                                "stickyMacWhitelist": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "The initial list of MAC addresses for sticky Mac whitelist. Only applicable when 'accessPolicyType' is 'Sticky MAC whitelist'"
                                },
                                "stickyMacWhitelistLimit": {
                                    "type": "integer",
                                    "description": "The maximum number of MAC addresses for sticky MAC whitelist. Only applicable when 'accessPolicyType' is 'Sticky MAC whitelist'"
                                },
                                "stormControlEnabled": {
                                    "type": "boolean",
                                    "description": "The storm control status of the switch port"
                                }
                            },
                            "example": {
                                "accessPolicyType": "Sticky MAC whitelist",
                                "name": "My switch port",
                                "tags": "tag1 tag2",
                                "enabled": true,
                                "poeEnabled": true,
                                "type": "access",
                                "vlan": 10,
                                "voiceVlan": 20,
                                "isolationEnabled": false,
                                "rstpEnabled": true,
                                "stpGuard": "disabled",
                                "linkNegotiation": "Auto negotiate",
                                "portScheduleId": "1234",
                                "udld": "Alert only",
                                "stickyMacWhitelist": [
                                    "34:56:fe:ce:8e:b0",
                                    "34:56:fe:ce:8e:b1"
                                ],
                                "stickyMacWhitelistLimit": 5,
                                "stormControlEnabled": true
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "portId": "1",
                                "accessPolicyType": "Sticky MAC whitelist",
                                "name": "My switch port",
                                "tags": "tag1 tag2",
                                "enabled": true,
                                "poeEnabled": true,
                                "type": "access",
                                "vlan": 10,
                                "voiceVlan": 20,
                                "isolationEnabled": false,
                                "rstpEnabled": true,
                                "stpGuard": "disabled",
                                "linkNegotiation": "Auto negotiate",
                                "portScheduleId": "1234",
                                "udld": "Alert only",
                                "stickyMacWhitelist": [
                                    "34:56:fe:ce:8e:b0",
                                    "34:56:fe:ce:8e:b1"
                                ],
                                "stickyMacWhitelistLimit": 5,
                                "stormControlEnabled": true
                            }
                        }
                    }
                },
                "summary": "Update a switch port",
                "tags": [
                    "switch",
                    "configure",
                    "ports"
                ]
            }
        },
        "/devices/{serial}/uplink": {
            "get": {
                "description": "Return the uplink information for a device.",
                "operationId": "getDeviceUplink",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "interface": "WAN 1",
                                    "status": "Active",
                                    "ip": "1.2.3.4",
                                    "gateway": "1.2.3.5",
                                    "publicIp": "123.123.123.1",
                                    "dns": "8.8.8.8, 8.8.4.4",
                                    "usingStaticIp": false
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the uplink information for a device.",
                "tags": [
                    "devices",
                    "monitor",
                    "uplink"
                ]
            }
        },
        "/devices/{serial}/wireless/bluetooth/settings": {
            "get": {
                "description": "Return the bluetooth settings for a wireless device",
                "operationId": "getDeviceWirelessBluetoothSettings",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "uuid": "00000000-0000-0000-000-000000000000",
                                "major": 13,
                                "minor": 125
                            }
                        }
                    }
                },
                "summary": "Return the bluetooth settings for a wireless device",
                "tags": [
                    "wireless",
                    "configure",
                    "bluetooth",
                    "settings"
                ]
            },
            "put": {
                "description": "Update the bluetooth settings for a wireless device",
                "operationId": "updateDeviceWirelessBluetoothSettings",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateDeviceWirelessBluetoothSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": {
                                    "type": "string",
                                    "description": "Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."
                                },
                                "major": {
                                    "type": "integer",
                                    "description": "Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."
                                },
                                "minor": {
                                    "type": "integer",
                                    "description": "Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."
                                }
                            },
                            "example": {
                                "uuid": "00000000-0000-0000-000-000000000000",
                                "major": 13,
                                "minor": 125
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "uuid": "00000000-0000-0000-000-000000000000",
                                "major": 13,
                                "minor": 125
                            }
                        }
                    }
                },
                "summary": "Update the bluetooth settings for a wireless device",
                "tags": [
                    "wireless",
                    "configure",
                    "bluetooth",
                    "settings"
                ]
            }
        },
        "/devices/{serial}/wireless/connectionStats": {
            "get": {
                "description": "Aggregated connectivity info for a given AP on this network",
                "operationId": "getDeviceWirelessConnectionStats",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "serial": "Q2JC-2MJM-FHRD",
                                "connectionStats": {
                                    "assoc": 0,
                                    "auth": 1,
                                    "dhcp": 0,
                                    "dns": 0,
                                    "success": 43
                                }
                            }
                        }
                    }
                },
                "summary": "Aggregated connectivity info for a given AP on this network",
                "tags": [
                    "wireless",
                    "monitor",
                    "connectionStats"
                ]
            }
        },
        "/devices/{serial}/wireless/latencyStats": {
            "get": {
                "description": "Aggregated latency info for a given AP on this network",
                "operationId": "getDeviceWirelessLatencyStats",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    },
                    {
                        "type": "string",
                        "name": "fields",
                        "in": "query",
                        "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "serial": "Q2JC-2MJM-FHRD",
                                "latencyStats": {
                                    "backgroundTraffic": {
                                        "rawDistribution": {
                                            "0": 1234,
                                            "1": 2345,
                                            "2": 3456,
                                            "4": 4567,
                                            "8": 5678,
                                            "16": 6789,
                                            "32": 7890,
                                            "64": 8901,
                                            "128": 9012,
                                            "256": 83,
                                            "512": 1234,
                                            "1024": 2345,
                                            "2048": 9999
                                        },
                                        "avg": 606.52
                                    },
                                    "bestEffortTraffic": "same shape as backgroundTraffic",
                                    "videoTraffic": "same shape as backgroundTraffic",
                                    "voiceTraffic": "same shape as backgroundTraffic"
                                }
                            }
                        }
                    }
                },
                "summary": "Aggregated latency info for a given AP on this network",
                "tags": [
                    "wireless",
                    "monitor",
                    "latencyStats"
                ]
            }
        },
        "/devices/{serial}/wireless/radio/settings": {
            "get": {
                "description": "Return the radio settings of a device",
                "operationId": "getDeviceWirelessRadioSettings",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "serial": "Q234-ABCD-5678",
                                "rfProfileId": "1234"
                            }
                        }
                    }
                },
                "summary": "Return the radio settings of a device",
                "tags": [
                    "wireless",
                    "configure",
                    "radio",
                    "settings"
                ]
            },
            "put": {
                "description": "Update the radio settings of a device",
                "operationId": "updateDeviceWirelessRadioSettings",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateDeviceWirelessRadioSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rfProfileId": {
                                    "type": "integer",
                                    "description": "    The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n    (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\n    on the device (channel width, channel, power).\n"
                                }
                            },
                            "example": {
                                "rfProfileId": "1234"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "serial": "Q234-ABCD-5678",
                                "rfProfileId": "1234"
                            }
                        }
                    }
                },
                "summary": "Update the radio settings of a device",
                "tags": [
                    "wireless",
                    "configure",
                    "radio",
                    "settings"
                ]
            }
        },
        "/devices/{serial}/wireless/status": {
            "get": {
                "description": "Return the SSID statuses of an access point",
                "operationId": "getDeviceWirelessStatus",
                "parameters": [
                    {
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "basicServiceSets": [
                                    {
                                        "ssidName": "My SSID",
                                        "ssidNumber": 0,
                                        "enabled": true,
                                        "band": "2.4 GHz",
                                        "bssid": "8A:15:04:00:00:00",
                                        "channel": 11,
                                        "channelWidth": "20 MHz",
                                        "power": "18 dBm",
                                        "visible": true,
                                        "broadcasting": true
                                    },
                                    {
                                        "ssidName": "My SSID",
                                        "ssidNumber": 0,
                                        "enabled": true,
                                        "band": "5 GHz",
                                        "bssid": "8A:15:14:00:00:00",
                                        "channel": 149,
                                        "channelWidth": "80 MHz",
                                        "power": "18 dBm",
                                        "visible": true,
                                        "broadcasting": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the SSID statuses of an access point",
                "tags": [
                    "wireless",
                    "monitor",
                    "status"
                ]
            }
        },
        "/networks/{networkId}": {
            "get": {
                "description": "Return a network",
                "operationId": "getNetwork",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": " tag1 tag2 ",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Return a network",
                "tags": [
                    "networks",
                    "configure"
                ]
            },
            "put": {
                "description": "Update a network",
                "operationId": "updateNetwork",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the network"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "A space-separated list of tags to be applied to the network"
                                },
                                "enrollmentString": {
                                    "type": "string",
                                    "description": "A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": " tag1 tag2 "
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": " tag1 tag2 ",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Update a network",
                "tags": [
                    "networks",
                    "configure"
                ]
            },
            "delete": {
                "description": "Delete a network",
                "operationId": "deleteNetwork",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a network",
                "tags": [
                    "networks",
                    "configure"
                ]
            }
        },
        "/networks/{networkId}/alertSettings": {
            "get": {
                "description": "Return the alert configuration for this network",
                "operationId": "getNetworkAlertSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "defaultDestinations": {
                                    "emails": [
                                        "miles@meraki.com"
                                    ],
                                    "allAdmins": true,
                                    "snmp": true
                                },
                                "alerts": [
                                    {
                                        "type": "gatewayDown",
                                        "enabled": true,
                                        "alertDestinations": {
                                            "emails": [
                                                "miles@meraki.com"
                                            ],
                                            "allAdmins": false,
                                            "snmp": false
                                        },
                                        "filters": {
                                            "timeout": 60
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the alert configuration for this network",
                "tags": [
                    "networks",
                    "configure",
                    "alertSettings"
                ]
            },
            "put": {
                "description": "Update the alert configuration for this network",
                "operationId": "updateNetworkAlertSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkAlertSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "defaultDestinations": {
                                    "type": "object",
                                    "properties": {
                                        "emails": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "A list of emails that will recieve the alert(s)."
                                        },
                                        "allAdmins": {
                                            "type": "boolean",
                                            "description": "If true, then all network admins will receive emails."
                                        },
                                        "snmp": {
                                            "type": "boolean",
                                            "description": "If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network."
                                        },
                                        "httpServerIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "A list of HTTP server IDs to send a Webhook to"
                                        }
                                    },
                                    "description": "The network-wide destinations for all alerts on the network."
                                },
                                "alerts": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "description": "The type of alert"
                                            },
                                            "enabled": {
                                                "type": "boolean",
                                                "description": "A boolean depicting if the alert is turned on or off"
                                            },
                                            "alertDestinations": {
                                                "type": "object",
                                                "properties": {
                                                    "emails": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "A list of emails that will receive information about the alert"
                                                    },
                                                    "allAdmins": {
                                                        "type": "boolean",
                                                        "description": "If true, then all network admins will receive emails for this alert"
                                                    },
                                                    "snmp": {
                                                        "type": "boolean",
                                                        "description": "If true, then an SNMP trap will be sent for this alert if there is an SNMP trap server configured for this network"
                                                    },
                                                    "httpServerIds": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "A list of HTTP server IDs to send a Webhook to for this alert"
                                                    }
                                                },
                                                "description": "A hash of destinations for this specific alert"
                                            },
                                            "filters": {
                                                "type": "object",
                                                "properties": {},
                                                "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated."
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    },
                                    "description": "Alert-specific configuration for each type. Only alerts that pertain to the network can be updated."
                                }
                            },
                            "example": {
                                "defaultDestinations": {
                                    "emails": [
                                        "miles@meraki.com"
                                    ],
                                    "allAdmins": true,
                                    "snmp": true
                                },
                                "alerts": [
                                    {
                                        "type": "gatewayDown",
                                        "enabled": true,
                                        "alertDestinations": {
                                            "emails": [
                                                "miles@meraki.com"
                                            ],
                                            "allAdmins": false,
                                            "snmp": false
                                        },
                                        "filters": {
                                            "timeout": 60
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "defaultDestinations": {
                                    "emails": [
                                        "miles@meraki.com"
                                    ],
                                    "allAdmins": true,
                                    "snmp": true
                                },
                                "alerts": [
                                    {
                                        "type": "gatewayDown",
                                        "enabled": true,
                                        "alertDestinations": {
                                            "emails": [
                                                "miles@meraki.com"
                                            ],
                                            "allAdmins": false,
                                            "snmp": false
                                        },
                                        "filters": {
                                            "timeout": 60
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the alert configuration for this network",
                "tags": [
                    "networks",
                    "configure",
                    "alertSettings"
                ]
            }
        },
        "/networks/{networkId}/appliance/connectivityMonitoringDestinations": {
            "get": {
                "description": "Return the connectivity testing destinations for an MX network",
                "operationId": "getNetworkApplianceConnectivityMonitoringDestinations",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "destinations": [
                                    {
                                        "ip": "8.8.8.8",
                                        "description": "Google",
                                        "default": false
                                    },
                                    {
                                        "ip": "1.23.45.67",
                                        "description": "test description",
                                        "default": true
                                    },
                                    {
                                        "ip": "9.8.7.6",
                                        "description": null,
                                        "default": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the connectivity testing destinations for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "connectivityMonitoringDestinations"
                ]
            },
            "put": {
                "description": "Update the connectivity testing destinations for an MX network",
                "operationId": "updateNetworkApplianceConnectivityMonitoringDestinations",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceConnectivityMonitoringDestinations",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "destinations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip": {
                                                "type": "string",
                                                "description": "The IP address to test connectivity with"
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description of the testing destination. Optional, defaults to null"
                                            },
                                            "default": {
                                                "type": "boolean",
                                                "description": "Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed"
                                            }
                                        },
                                        "required": [
                                            "ip"
                                        ]
                                    },
                                    "description": "The list of connectivity monitoring destinations"
                                }
                            },
                            "example": {
                                "destinations": [
                                    {
                                        "ip": "8.8.8.8",
                                        "description": "Google",
                                        "default": false
                                    },
                                    {
                                        "ip": "1.23.45.67",
                                        "description": "test description",
                                        "default": true
                                    },
                                    {
                                        "ip": "9.8.7.6"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "destinations": [
                                    {
                                        "ip": "8.8.8.8",
                                        "description": "Google",
                                        "default": false
                                    },
                                    {
                                        "ip": "1.23.45.67",
                                        "description": "test description",
                                        "default": true
                                    },
                                    {
                                        "ip": "9.8.7.6",
                                        "description": null,
                                        "default": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the connectivity testing destinations for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "connectivityMonitoringDestinations"
                ]
            }
        },
        "/networks/{networkId}/appliance/contentFiltering/categories": {
            "get": {
                "description": "List all available content filtering categories for an MX network",
                "operationId": "getNetworkApplianceContentFilteringCategories",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "categories": [
                                    {
                                        "id": "meraki:contentFiltering/category/1",
                                        "name": "Real Estate"
                                    },
                                    {
                                        "id": "meraki:contentFiltering/category/3",
                                        "name": "Financial Services"
                                    },
                                    "...",
                                    {
                                        "id": "meraki:contentFiltering/category/11",
                                        "name": "Adult and Pornography"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "List all available content filtering categories for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "contentFiltering",
                    "categories"
                ]
            }
        },
        "/networks/{networkId}/appliance/firewall/cellularFirewallRules": {
            "get": {
                "description": "Return the cellular firewall rules for an MX network",
                "operationId": "getNetworkApplianceFirewallCellularFirewallRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the cellular firewall rules for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "cellularFirewallRules"
                ]
            },
            "put": {
                "description": "Update the cellular firewall rules of an MX network",
                "operationId": "updateNetworkApplianceFirewallCellularFirewallRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceFirewallCellularFirewallRules",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "comment": {
                                                "type": "string",
                                                "description": "Description of the rule (optional)"
                                            },
                                            "policy": {
                                                "type": "string",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ],
                                                "description": "'allow' or 'deny' traffic specified by this rule"
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "enum": [
                                                    "tcp",
                                                    "udp",
                                                    "icmp",
                                                    "any"
                                                ],
                                                "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                            },
                                            "srcPort": {
                                                "type": "string",
                                                "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                                            },
                                            "srcCidr": {
                                                "type": "string",
                                                "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                                            },
                                            "destPort": {
                                                "type": "string",
                                                "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                                            },
                                            "destCidr": {
                                                "type": "string",
                                                "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                                            },
                                            "syslogEnabled": {
                                                "type": "boolean",
                                                "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                                            }
                                        },
                                        "required": [
                                            "policy",
                                            "protocol",
                                            "srcCidr",
                                            "destCidr"
                                        ]
                                    },
                                    "description": "An ordered array of the firewall rules (not including the default rule)"
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the cellular firewall rules of an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "cellularFirewallRules"
                ]
            }
        },
        "/networks/{networkId}/appliance/firewall/firewalledServices": {
            "get": {
                "description": "List the appliance services and their accessibility rules",
                "operationId": "getNetworkApplianceFirewallFirewalledServices",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "service": "web",
                                    "access": "restricted",
                                    "allowedIps": [
                                        "123.123.123.1"
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "List the appliance services and their accessibility rules",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "firewalledServices"
                ]
            }
        },
        "/networks/{networkId}/appliance/firewall/firewalledServices/{service}": {
            "get": {
                "description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
                "operationId": "getNetworkApplianceFirewallFirewalledService",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "service": "web",
                                "access": "restricted",
                                "allowedIps": [
                                    "123.123.123.1"
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "firewalledServices"
                ]
            }
        },
        "/networks/{networkId}/appliance/firewall/inboundFirewallRules": {
            "get": {
                "description": "Return the inbound firewall rules for an MX network",
                "operationId": "getNetworkApplianceFirewallInboundFirewallRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ],
                                "syslogDefaultRule": true
                            }
                        }
                    }
                },
                "summary": "Return the inbound firewall rules for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "inboundFirewallRules"
                ]
            },
            "put": {
                "description": "Update the inbound firewall rules of an MX network",
                "operationId": "updateNetworkApplianceFirewallInboundFirewallRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceFirewallInboundFirewallRules",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "comment": {
                                                "type": "string",
                                                "description": "Description of the rule (optional)"
                                            },
                                            "policy": {
                                                "type": "string",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ],
                                                "description": "'allow' or 'deny' traffic specified by this rule"
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "enum": [
                                                    "tcp",
                                                    "udp",
                                                    "icmp",
                                                    "any"
                                                ],
                                                "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                            },
                                            "srcPort": {
                                                "type": "string",
                                                "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                                            },
                                            "srcCidr": {
                                                "type": "string",
                                                "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                                            },
                                            "destPort": {
                                                "type": "string",
                                                "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                                            },
                                            "destCidr": {
                                                "type": "string",
                                                "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                                            },
                                            "syslogEnabled": {
                                                "type": "boolean",
                                                "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                                            }
                                        },
                                        "required": [
                                            "policy",
                                            "protocol",
                                            "srcCidr",
                                            "destCidr"
                                        ]
                                    },
                                    "description": "An ordered array of the firewall rules (not including the default rule)"
                                },
                                "syslogDefaultRule": {
                                    "type": "boolean",
                                    "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ],
                                "syslogDefaultRule": true
                            }
                        }
                    }
                },
                "summary": "Update the inbound firewall rules of an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "inboundFirewallRules"
                ]
            }
        },
        "/networks/{networkId}/appliance/firewall/l3FirewallRules": {
            "get": {
                "description": "Return the L3 firewall rules for an MX network",
                "operationId": "getNetworkApplianceFirewallL3FirewallRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the L3 firewall rules for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "l3FirewallRules"
                ]
            },
            "put": {
                "description": "Update the L3 firewall rules of an MX network",
                "operationId": "updateNetworkApplianceFirewallL3FirewallRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceFirewallL3FirewallRules",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "comment": {
                                                "type": "string",
                                                "description": "Description of the rule (optional)"
                                            },
                                            "policy": {
                                                "type": "string",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ],
                                                "description": "'allow' or 'deny' traffic specified by this rule"
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "enum": [
                                                    "tcp",
                                                    "udp",
                                                    "icmp",
                                                    "any"
                                                ],
                                                "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                            },
                                            "srcPort": {
                                                "type": "string",
                                                "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                                            },
                                            "srcCidr": {
                                                "type": "string",
                                                "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                                            },
                                            "destPort": {
                                                "type": "string",
                                                "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                                            },
                                            "destCidr": {
                                                "type": "string",
                                                "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                                            },
                                            "syslogEnabled": {
                                                "type": "boolean",
                                                "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                                            }
                                        },
                                        "required": [
                                            "policy",
                                            "protocol",
                                            "srcCidr",
                                            "destCidr"
                                        ]
                                    },
                                    "description": "An ordered array of the firewall rules (not including the default rule)"
                                },
                                "syslogDefaultRule": {
                                    "type": "boolean",
                                    "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the L3 firewall rules of an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "l3FirewallRules"
                ]
            }
        },
        "/networks/{networkId}/appliance/firewall/oneToManyNatRules": {
            "get": {
                "description": "Return the 1:Many NAT mapping rules for an MX network",
                "operationId": "getNetworkApplianceFirewallOneToManyNatRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Return the 1:Many NAT mapping rules for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "oneToManyNatRules"
                ]
            },
            "put": {
                "description": "Set the 1:Many NAT mapping rules for an MX network",
                "operationId": "updateNetworkApplianceFirewallOneToManyNatRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceFirewallOneToManyNatRules",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "publicIp": {
                                                "type": "string",
                                                "description": "The IP address that will be used to access the internal resource from the WAN"
                                            },
                                            "uplink": {
                                                "type": "string",
                                                "enum": [
                                                    "internet1",
                                                    "internet2"
                                                ],
                                                "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')"
                                            },
                                            "portRules": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "A description of the rule"
                                                        },
                                                        "protocol": {
                                                            "type": "string",
                                                            "enum": [
                                                                "tcp",
                                                                "udp"
                                                            ],
                                                            "description": "'tcp' or 'udp'"
                                                        },
                                                        "publicPort": {
                                                            "type": "string",
                                                            "description": "Destination port of the traffic that is arriving on the WAN"
                                                        },
                                                        "localIp": {
                                                            "type": "string",
                                                            "description": "Local IP address to which traffic will be forwarded"
                                                        },
                                                        "localPort": {
                                                            "type": "string",
                                                            "description": "Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port"
                                                        },
                                                        "allowedIps": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "description": "Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'"
                                                        }
                                                    }
                                                },
                                                "description": "An array of associated forwarding rules"
                                            }
                                        },
                                        "required": [
                                            "publicIp",
                                            "uplink",
                                            "portRules"
                                        ]
                                    },
                                    "description": "An array of 1:Many nat rules"
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "publicIp": "146.11.11.13",
                                        "uplink": "internet1",
                                        "portRules": [
                                            {
                                                "name": "Rule 1",
                                                "protocol": "tcp",
                                                "publicPort": "9443",
                                                "localIp": "192.168.128.1",
                                                "localPort": "443",
                                                "allowedIps": [
                                                    "any"
                                                ]
                                            },
                                            {
                                                "name": "Rule 2",
                                                "protocol": "tcp",
                                                "publicPort": "8080",
                                                "localIp": "192.168.128.1",
                                                "localPort": "80",
                                                "allowedIps": [
                                                    "10.82.110.0/24",
                                                    "10.82.111.0/24"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            "required": [
                                "rules"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Set the 1:Many NAT mapping rules for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "oneToManyNatRules"
                ]
            }
        },
        "/networks/{networkId}/appliance/firewall/oneToOneNatRules": {
            "get": {
                "description": "Return the 1:1 NAT mapping rules for an MX network",
                "operationId": "getNetworkApplianceFirewallOneToOneNatRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Return the 1:1 NAT mapping rules for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "oneToOneNatRules"
                ]
            },
            "put": {
                "description": "Set the 1:1 NAT mapping rules for an MX network",
                "operationId": "updateNetworkApplianceFirewallOneToOneNatRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceFirewallOneToOneNatRules",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "A descriptive name for the rule"
                                            },
                                            "publicIp": {
                                                "type": "string",
                                                "description": "The IP address that will be used to access the internal resource from the WAN"
                                            },
                                            "lanIp": {
                                                "type": "string",
                                                "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN"
                                            },
                                            "uplink": {
                                                "type": "string",
                                                "enum": [
                                                    "internet1",
                                                    "internet2"
                                                ],
                                                "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')"
                                            },
                                            "allowedInbound": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "protocol": {
                                                            "type": "string",
                                                            "enum": [
                                                                "tcp",
                                                                "udp",
                                                                "icmp-ping",
                                                                "any"
                                                            ],
                                                            "description": "Either of the following: 'tcp', 'udp', 'icmp-ping' or 'any'"
                                                        },
                                                        "destinationPorts": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "description": "An array of ports or port ranges that will be forwarded to the host on the LAN"
                                                        },
                                                        "allowedIps": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges, or 'any'"
                                                        }
                                                    }
                                                },
                                                "description": "The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource"
                                            }
                                        },
                                        "required": [
                                            "lanIp"
                                        ]
                                    },
                                    "description": "An array of 1:1 nat rules"
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "name": "Service behind NAT",
                                        "lanIp": "192.168.128.22",
                                        "publicIp": "146.12.3.33",
                                        "uplink": "internet1",
                                        "allowedInbound": [
                                            {
                                                "protocol": "tcp",
                                                "destinationPorts": [
                                                    "80"
                                                ],
                                                "allowedIps": [
                                                    "10.82.112.0/24",
                                                    "10.82.0.0/16"
                                                ]
                                            },
                                            {
                                                "protocol": "udp",
                                                "destinationPorts": [
                                                    "8080"
                                                ],
                                                "allowedIps": [
                                                    "10.81.110.5",
                                                    "10.81.0.0/16"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            "required": [
                                "rules"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Set the 1:1 NAT mapping rules for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "oneToOneNatRules"
                ]
            }
        },
        "/networks/{networkId}/appliance/firewall/portForwardingRules": {
            "get": {
                "description": "Return the port forwarding rules for an MX network",
                "operationId": "getNetworkApplianceFirewallPortForwardingRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Return the port forwarding rules for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "portForwardingRules"
                ]
            },
            "put": {
                "description": "Update the port forwarding rules for an MX network",
                "operationId": "updateNetworkApplianceFirewallPortForwardingRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceFirewallPortForwardingRules",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "A descriptive name for the rule"
                                            },
                                            "lanIp": {
                                                "type": "string",
                                                "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN"
                                            },
                                            "uplink": {
                                                "type": "string",
                                                "enum": [
                                                    "internet1",
                                                    "internet2",
                                                    "both"
                                                ],
                                                "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2' or 'both')"
                                            },
                                            "publicPort": {
                                                "type": "string",
                                                "description": "A port or port ranges that will be forwarded to the host on the LAN"
                                            },
                                            "localPort": {
                                                "type": "string",
                                                "description": "A port or port ranges that will receive the forwarded traffic from the WAN"
                                            },
                                            "allowedIps": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)"
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "enum": [
                                                    "tcp",
                                                    "udp"
                                                ],
                                                "description": "TCP or UDP"
                                            }
                                        },
                                        "required": [
                                            "lanIp",
                                            "publicPort",
                                            "localPort",
                                            "allowedIps",
                                            "protocol"
                                        ]
                                    },
                                    "description": "An array of port forwarding params"
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "lanIp": "192.168.128.1",
                                        "allowedIps": [
                                            "any"
                                        ],
                                        "name": "Description of Port Forwarding Rule",
                                        "protocol": "tcp",
                                        "publicPort": "8100-8101",
                                        "localPort": "442-443",
                                        "uplink": "both"
                                    }
                                ]
                            },
                            "required": [
                                "rules"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Update the port forwarding rules for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "firewall",
                    "portForwardingRules"
                ]
            }
        },
        "/networks/{networkId}/appliance/ports": {
            "get": {
                "description": "List per-port VLAN settings for all ports of a MX.",
                "operationId": "getNetworkAppliancePorts",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "List per-port VLAN settings for all ports of a MX.",
                "tags": [
                    "appliance",
                    "configure",
                    "ports"
                ]
            }
        },
        "/networks/{networkId}/appliance/ports/{portId}": {
            "get": {
                "description": "Return per-port VLAN settings for a single MX port.",
                "operationId": "getNetworkAppliancePort",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "portId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Return per-port VLAN settings for a single MX port.",
                "tags": [
                    "appliance",
                    "configure",
                    "ports"
                ]
            },
            "put": {
                "description": "Update the per-port VLAN settings for a single MX port.",
                "operationId": "updateNetworkAppliancePort",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "portId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkAppliancePort",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "The status of the port"
                                },
                                "dropUntaggedTraffic": {
                                    "type": "boolean",
                                    "description": "Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true."
                                },
                                "type": {
                                    "type": "string",
                                    "description": "The type of the port: 'access' or 'trunk'."
                                },
                                "vlan": {
                                    "type": "integer",
                                    "description": "Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode."
                                },
                                "allowedVlans": {
                                    "type": "string",
                                    "description": "Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port."
                                },
                                "accessPolicy": {
                                    "type": "string",
                                    "description": "The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing."
                                }
                            },
                            "example": {
                                "enabled": true,
                                "type": "access",
                                "dropUntaggedTraffic": false,
                                "vlan": 3,
                                "accessPolicy": "open"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Update the per-port VLAN settings for a single MX port.",
                "tags": [
                    "appliance",
                    "configure",
                    "ports"
                ]
            }
        },
        "/networks/{networkId}/appliance/security/events": {
            "get": {
                "description": "List the security events for a network",
                "operationId": "getNetworkApplianceSecurityEvents",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "ts": "2018-02-11T00:00:00.090210Z",
                                    "deviceMac": "00:18:0a:01:02:03",
                                    "clientMac": "A1:B2:C3:D4:E5:F6",
                                    "srcIp": "1.2.3.4:34195",
                                    "destIp": "10.20.30.40:80",
                                    "protocol": "tcp/ip",
                                    "priority": "2",
                                    "classification": "4",
                                    "blocked": true,
                                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",
                                    "signature": "1:21516:9",
                                    "sigSource": ""
                                },
                                {
                                    "ts": "2018-02-11T00:00:00.090210Z",
                                    "deviceMac": "00:18:0a:01:02:03",
                                    "clientMac": "A1:B2:C3:D4:E5:F6",
                                    "srcIp": "1.2.3.4:56023",
                                    "destIp": "10.20.30.40:80",
                                    "protocol": "tcp/ip",
                                    "priority": "1",
                                    "classification": "33",
                                    "blocked": true,
                                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
                                    "signature": "1:25975:2",
                                    "sigSource": ""
                                }
                            ]
                        }
                    }
                },
                "summary": "List the security events for a network",
                "tags": [
                    "appliance",
                    "monitor",
                    "security",
                    "events"
                ]
            }
        },
        "/networks/{networkId}/appliance/security/intrusion": {
            "get": {
                "description": "Returns all supported intrusion settings for an MX network",
                "operationId": "getNetworkApplianceSecurityIntrusion",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mode": "prevention",
                                "idsRulesets": "balanced",
                                "protectedNetworks": {
                                    "useDefault": false,
                                    "includedCidr": [
                                        "10.0.0.0/8",
                                        "127.0.0.0/8",
                                        "169.254.0.0/16",
                                        "172.16.0.0/12"
                                    ],
                                    "excludedCidr": [
                                        "10.0.0.0/8",
                                        "127.0.0.0/8"
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all supported intrusion settings for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "security",
                    "intrusion"
                ]
            },
            "put": {
                "description": "Set the supported intrusion settings for an MX network",
                "operationId": "updateNetworkApplianceSecurityIntrusion",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceSecurityIntrusion",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mode": {
                                    "type": "string",
                                    "enum": [
                                        "prevention",
                                        "detection",
                                        "disabled"
                                    ],
                                    "description": "Set mode to 'disabled'/'detection'/'prevention' (optional - omitting will leave current config unchanged)"
                                },
                                "idsRulesets": {
                                    "type": "string",
                                    "enum": [
                                        "connectivity",
                                        "balanced",
                                        "security"
                                    ],
                                    "description": "Set the detection ruleset 'connectivity'/'balanced'/'security' (optional - omitting will leave current config unchanged). Default value is 'balanced' if none currently saved"
                                },
                                "protectedNetworks": {
                                    "type": "object",
                                    "properties": {
                                        "useDefault": {
                                            "type": "boolean",
                                            "description": "true/false whether to use special IPv4 addresses: https://tools.ietf.org/html/rfc5735 (required). Default value is true if none currently saved"
                                        },
                                        "includedCidr": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "list of IP addresses or subnets being protected (required if 'useDefault' is false)"
                                        },
                                        "excludedCidr": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "list of IP addresses or subnets being excluded from protection (required if 'useDefault' is false)"
                                        }
                                    },
                                    "description": "Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged). This is available only in 'passthrough' mode"
                                }
                            },
                            "example": {
                                "mode": "prevention",
                                "idsRulesets": "balanced",
                                "protectedNetworks": {
                                    "useDefault": false,
                                    "includedCidr": [
                                        "10.0.0.0/8",
                                        "127.0.0.0/8",
                                        "169.254.0.0/16",
                                        "172.16.0.0/12"
                                    ],
                                    "excludedCidr": [
                                        "10.0.0.0/8",
                                        "127.0.0.0/8"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mode": "prevention",
                                "idsRulesets": "balanced",
                                "protectedNetworks": {
                                    "useDefault": false,
                                    "includedCidr": [
                                        "10.0.0.0/8",
                                        "127.0.0.0/8",
                                        "169.254.0.0/16",
                                        "172.16.0.0/12"
                                    ],
                                    "excludedCidr": [
                                        "10.0.0.0/8",
                                        "127.0.0.0/8"
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Set the supported intrusion settings for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "security",
                    "intrusion"
                ]
            }
        },
        "/networks/{networkId}/appliance/security/malware": {
            "get": {
                "description": "Returns all supported malware settings for an MX network",
                "operationId": "getNetworkApplianceSecurityMalware",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Returns all supported malware settings for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "security",
                    "malware"
                ]
            },
            "put": {
                "description": "Set the supported malware settings for an MX network",
                "operationId": "updateNetworkApplianceSecurityMalware",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceSecurityMalware",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mode": {
                                    "type": "string",
                                    "enum": [
                                        "enabled",
                                        "disabled"
                                    ],
                                    "description": "Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'"
                                },
                                "allowedUrls": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "description": "The url to whitelist"
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment about the whitelisted entity"
                                            }
                                        },
                                        "required": [
                                            "url",
                                            "comment"
                                        ]
                                    },
                                    "description": "The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting"
                                },
                                "allowedFiles": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "sha256": {
                                                "type": "string",
                                                "description": "The file sha256 hash to whitelist"
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment about the whitelisted entity"
                                            }
                                        },
                                        "required": [
                                            "sha256",
                                            "comment"
                                        ]
                                    },
                                    "description": "The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting"
                                }
                            },
                            "example": {
                                "mode": "enabled",
                                "allowedUrls": [
                                    {
                                        "url": "example.org",
                                        "comment": "allow example.org"
                                    },
                                    {
                                        "url": "help.com.au",
                                        "comment": "allow help.com.au"
                                    }
                                ],
                                "allowedFiles": [
                                    {
                                        "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
                                        "comment": "allow ZIP file"
                                    }
                                ]
                            },
                            "required": [
                                "mode"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Set the supported malware settings for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "security",
                    "malware"
                ]
            }
        },
        "/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth": {
            "get": {
                "description": "Returns the uplink bandwidth settings for your MX network.",
                "operationId": "getNetworkApplianceTrafficShapingUplinkBandwidth",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Returns the uplink bandwidth settings for your MX network.",
                "tags": [
                    "appliance",
                    "configure",
                    "trafficShaping",
                    "uplinkBandwidth"
                ]
            },
            "put": {
                "description": "Updates the uplink bandwidth settings for your MX network.",
                "operationId": "updateNetworkApplianceTrafficShapingUplinkBandwidth",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceTrafficShapingUplinkBandwidth",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "bandwidthLimits": {
                                    "type": "object",
                                    "properties": {
                                        "wan1": {
                                            "type": "object",
                                            "properties": {
                                                "limitUp": {
                                                    "type": "integer",
                                                    "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                },
                                                "limitDown": {
                                                    "type": "integer",
                                                    "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                }
                                            },
                                            "description": "The bandwidth settings for the 'wan1' uplink"
                                        },
                                        "wan2": {
                                            "type": "object",
                                            "properties": {
                                                "limitUp": {
                                                    "type": "integer",
                                                    "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                },
                                                "limitDown": {
                                                    "type": "integer",
                                                    "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                }
                                            },
                                            "description": "The bandwidth settings for the 'wan2' uplink"
                                        },
                                        "cellular": {
                                            "type": "object",
                                            "properties": {
                                                "limitUp": {
                                                    "type": "integer",
                                                    "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                },
                                                "limitDown": {
                                                    "type": "integer",
                                                    "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                }
                                            },
                                            "description": "The bandwidth settings for the 'cellular' uplink"
                                        }
                                    },
                                    "description": "A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)"
                                }
                            },
                            "example": {
                                "bandwidthLimits": {
                                    "wan1": {
                                        "limitUp": 1000000,
                                        "limitDown": 1000000
                                    },
                                    "wan2": {
                                        "limitUp": 1000000,
                                        "limitDown": 1000000
                                    },
                                    "cellular": {
                                        "limitUp": 51200,
                                        "limitDown": 51200
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Updates the uplink bandwidth settings for your MX network.",
                "tags": [
                    "appliance",
                    "configure",
                    "trafficShaping",
                    "uplinkBandwidth"
                ]
            }
        },
        "/networks/{networkId}/appliance/vlans": {
            "get": {
                "description": "List the VLANs for an MX network",
                "operationId": "getNetworkApplianceVlans",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "List the VLANs for an MX network",
                "tags": [
                    "appliance",
                    "configure",
                    "vlans"
                ]
            },
            "post": {
                "description": "Add a VLAN",
                "operationId": "createNetworkApplianceVlan",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkApplianceVlan",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The VLAN ID of the new VLAN (must be between 1 and 4094)"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new VLAN"
                                },
                                "subnet": {
                                    "type": "string",
                                    "description": "The subnet of the VLAN"
                                },
                                "applianceIp": {
                                    "type": "string",
                                    "description": "The local IP of the appliance on the VLAN"
                                }
                            },
                            "example": {
                                "id": "1234",
                                "name": "My VLAN",
                                "subnet": "192.168.1.0/24",
                                "applianceIp": "1.2.3.4"
                            },
                            "required": [
                                "id",
                                "name",
                                "subnet",
                                "applianceIp"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "My VLAN",
                                "applianceIp": "1.2.3.4",
                                "subnet": "192.168.1.0/24",
                                "fixedIpAssignments": {},
                                "reservedIpRanges": [],
                                "dnsNameservers": "google_dns",
                                "dhcpHandling": "Run a DHCP server",
                                "dhcpLeaseTime": "1 day",
                                "dhcpBootOptionsEnabled": false,
                                "dhcpBootNextServer": null,
                                "dhcpBootFilename": null,
                                "dhcpOptions": []
                            }
                        }
                    }
                },
                "summary": "Add a VLAN",
                "tags": [
                    "appliance",
                    "configure",
                    "vlans"
                ]
            }
        },
        "/networks/{networkId}/appliance/vlans/settings": {
            "get": {
                "description": "Returns the enabled status of VLANs for the network",
                "operationId": "getNetworkApplianceVlansSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "vlansEnabled": true
                            }
                        }
                    }
                },
                "summary": "Returns the enabled status of VLANs for the network",
                "tags": [
                    "appliance",
                    "configure",
                    "vlans",
                    "settings"
                ]
            },
            "put": {
                "description": "Enable/Disable VLANs for the given network",
                "operationId": "updateNetworkApplianceVlansSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceVlansSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "vlansEnabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether to enable (true) or disable (false) VLANs for the network"
                                }
                            },
                            "example": {
                                "vlansEnabled": true
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "vlansEnabled": true
                            }
                        }
                    }
                },
                "summary": "Enable/Disable VLANs for the given network",
                "tags": [
                    "appliance",
                    "configure",
                    "vlans",
                    "settings"
                ]
            }
        },
        "/networks/{networkId}/appliance/vlans/{vlanId}": {
            "get": {
                "description": "Return a VLAN",
                "operationId": "getNetworkApplianceVlan",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "vlanId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Return a VLAN",
                "tags": [
                    "appliance",
                    "configure",
                    "vlans"
                ]
            },
            "put": {
                "description": "Update a VLAN",
                "operationId": "updateNetworkApplianceVlan",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "vlanId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkApplianceVlan",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the VLAN"
                                },
                                "subnet": {
                                    "type": "string",
                                    "description": "The subnet of the VLAN"
                                },
                                "applianceIp": {
                                    "type": "string",
                                    "description": "The local IP of the appliance on the VLAN"
                                },
                                "vpnNatSubnet": {
                                    "type": "string",
                                    "description": "The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN"
                                },
                                "dhcpHandling": {
                                    "type": "string",
                                    "enum": [
                                        "Run a DHCP server",
                                        "Relay DHCP to another server",
                                        "Do not respond to DHCP requests"
                                    ],
                                    "description": "The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'"
                                },
                                "dhcpRelayServerIps": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "The IPs of the DHCP servers that DHCP requests should be relayed to"
                                },
                                "dhcpLeaseTime": {
                                    "type": "string",
                                    "enum": [
                                        "30 minutes",
                                        "1 hour",
                                        "4 hours",
                                        "12 hours",
                                        "1 day",
                                        "1 week"
                                    ],
                                    "description": "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'"
                                },
                                "dhcpBootOptionsEnabled": {
                                    "type": "boolean",
                                    "description": "Use DHCP boot options specified in other properties"
                                },
                                "dhcpBootNextServer": {
                                    "type": "string",
                                    "description": "DHCP boot option to direct boot clients to the server to load the boot file from"
                                },
                                "dhcpBootFilename": {
                                    "type": "string",
                                    "description": "DHCP boot option for boot filename"
                                },
                                "fixedIpAssignments": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details."
                                },
                                "reservedIpRanges": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "type": "string",
                                                "description": "The first IP in the reserved range"
                                            },
                                            "end": {
                                                "type": "string",
                                                "description": "The last IP in the reserved range"
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "A text comment for the reserved range"
                                            }
                                        },
                                        "required": [
                                            "start",
                                            "end",
                                            "comment"
                                        ]
                                    },
                                    "description": "The DHCP reserved IP ranges on the VLAN"
                                },
                                "dnsNameservers": {
                                    "type": "string",
                                    "description": "The DNS nameservers used for DHCP responses, either \"upstream_dns\", \"google_dns\", \"opendns\", or a newline seperated string of IP addresses or domain names"
                                },
                                "dhcpOptions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "description": "The code for the DHCP option. This should be an integer between 2 and 254."
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "text",
                                                    "ip",
                                                    "hex",
                                                    "integer"
                                                ],
                                                "description": "The type for the DHCP option. One of: 'text', 'ip', 'hex' or 'integer'"
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "The value for the DHCP option"
                                            }
                                        },
                                        "required": [
                                            "code",
                                            "type",
                                            "value"
                                        ]
                                    },
                                    "description": "The list of DHCP options that will be included in DHCP responses. Each object in the list should have \"code\", \"type\", and \"value\" properties."
                                }
                            },
                            "example": {
                                "name": "My VLAN",
                                "applianceIp": "1.2.3.4",
                                "subnet": "192.168.1.0/24",
                                "fixedIpAssignments": {
                                    "22:33:44:55:66:77": {
                                        "ip": "1.2.3.4",
                                        "name": "Some client name"
                                    }
                                },
                                "reservedIpRanges": [
                                    {
                                        "start": "192.168.1.0",
                                        "end": "192.168.1.1",
                                        "comment": "A reserved IP range"
                                    }
                                ],
                                "dnsNameservers": "google_dns",
                                "dhcpHandling": "Run a DHCP server",
                                "dhcpLeaseTime": "1 day",
                                "dhcpBootOptionsEnabled": false,
                                "dhcpBootNextServer": null,
                                "dhcpBootFilename": null,
                                "dhcpOptions": [
                                    {
                                        "code": 5,
                                        "type": "text",
                                        "value": "five"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Update a VLAN",
                "tags": [
                    "appliance",
                    "configure",
                    "vlans"
                ]
            },
            "delete": {
                "description": "Delete a VLAN from a network",
                "operationId": "deleteNetworkApplianceVlan",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "vlanId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a VLAN from a network",
                "tags": [
                    "appliance",
                    "configure",
                    "vlans"
                ]
            }
        },
        "/networks/{networkId}/bind": {
            "post": {
                "description": "Bind a network to a template.",
                "operationId": "bindNetwork",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "bindNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "configTemplateId": {
                                    "type": "string",
                                    "description": "The ID of the template to which the network should be bound."
                                },
                                "autoBind": {
                                    "type": "boolean",
                                    "description": "Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model."
                                }
                            },
                            "example": {
                                "configTemplateId": "N_23952905",
                                "autoBind": false
                            },
                            "required": [
                                "configTemplateId"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": " tag1 tag2 ",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office",
                                "configTemplateId": "N_23952905"
                            }
                        }
                    }
                },
                "summary": "Bind a network to a template.",
                "tags": [
                    "networks",
                    "configure",
                    "bind"
                ]
            }
        },
        "/networks/{networkId}/bluetoothClients": {
            "get": {
                "description": "List the Bluetooth clients seen by APs in this network",
                "operationId": "getNetworkBluetoothClients",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "boolean",
                        "name": "includeConnectivityHistory",
                        "in": "query",
                        "description": "Include the connectivity history for this client"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        }
                    }
                },
                "summary": "List the Bluetooth clients seen by APs in this network",
                "tags": [
                    "networks",
                    "monitor",
                    "bluetoothClients"
                ]
            }
        },
        "/networks/{networkId}/bluetoothClients/{bluetoothClientId}": {
            "get": {
                "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
                "operationId": "getNetworkBluetoothClient",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "bluetoothClientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "includeConnectivityHistory",
                        "in": "query",
                        "description": "Include the connectivity history for this client"
                    },
                    {
                        "type": "integer",
                        "name": "connectivityHistoryTimespan",
                        "in": "query",
                        "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "mac": "22:33:44:55:66:77",
                                "networkId": "N_24329156",
                                "name": "Miles's phone",
                                "deviceName": "Bose QuietComfort 35",
                                "manufacturer": "Bose",
                                "lastSeen": 1526087474,
                                "seenByDeviceMac": "00:11:22:33:44:55",
                                "inSightAlert": false,
                                "outOfSightAlert": false,
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ]
                            }
                        }
                    }
                },
                "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
                "tags": [
                    "networks",
                    "monitor",
                    "bluetoothClients"
                ]
            }
        },
        "/networks/{networkId}/camera/qualityRetentionProfiles": {
            "get": {
                "description": "List the quality retention profiles for this network",
                "operationId": "getNetworkCameraQualityRetentionProfiles",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1234",
                                    "networkId": "N_24329156",
                                    "name": "Sample quality retention profile",
                                    "restrictedBandwidthModeEnabled": true,
                                    "motionBasedRetentionEnabled": false,
                                    "audioRecordingEnabled": false,
                                    "cloudArchiveEnabled": false,
                                    "maxRetentionDays": 7,
                                    "scheduleId": null,
                                    "motionDetectorVersion": 2,
                                    "videoSettings": {
                                        "MV32": {
                                            "quality": "Enhanced",
                                            "resolution": "1080x1080"
                                        },
                                        "MV21/MV71": {
                                            "quality": "High",
                                            "resolution": "1280x720"
                                        },
                                        "MV12/MV22/MV72": {
                                            "quality": "High",
                                            "resolution": "1920x1080"
                                        },
                                        "MV12WE": {
                                            "quality": "High",
                                            "resolution": "1920x1080"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "List the quality retention profiles for this network",
                "tags": [
                    "camera",
                    "configure",
                    "qualityRetentionProfiles"
                ]
            },
            "post": {
                "description": "Creates new quality retention profile for this network.",
                "operationId": "createNetworkCameraQualityRetentionProfile",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkCameraQualityRetentionProfile",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new profile. Must be unique. This parameter is required."
                                },
                                "motionBasedRetentionEnabled": {
                                    "type": "boolean",
                                    "description": "Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false."
                                },
                                "restrictedBandwidthModeEnabled": {
                                    "type": "boolean",
                                    "description": "Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false."
                                },
                                "audioRecordingEnabled": {
                                    "type": "boolean",
                                    "description": "Whether or not to record audio. Can be either true or false. Defaults to false."
                                },
                                "cloudArchiveEnabled": {
                                    "type": "boolean",
                                    "description": "Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false."
                                },
                                "motionDetectorVersion": {
                                    "type": "integer",
                                    "description": "The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."
                                },
                                "scheduleId": {
                                    "type": "string",
                                    "description": "Schedule for which this camera will record video, or 'null' to always record."
                                },
                                "maxRetentionDays": {
                                    "type": "integer",
                                    "description": "The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days"
                                },
                                "videoSettings": {
                                    "type": "object",
                                    "properties": {
                                        "MV21/MV71": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV21/MV71 camera models."
                                        },
                                        "MV12/MV22/MV72": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV12/MV22/MV72 camera models."
                                        },
                                        "MV32": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard' or 'Enhanced'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1080x1080",
                                                        "2058x2058"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1080x1080' or '2058x2058'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV32 camera models."
                                        },
                                        "MV12WE": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV12WE camera models."
                                        },
                                        "MV22X/MV72X": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080",
                                                        "2688x1512"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV22X/MV72X camera models."
                                        },
                                        "MV02": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV02 camera models."
                                        }
                                    },
                                    "description": "Video quality and resolution settings for all the camera models."
                                }
                            },
                            "example": {},
                            "required": [
                                "name"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "Sample quality retention profile",
                                "restrictedBandwidthModeEnabled": true,
                                "motionBasedRetentionEnabled": false,
                                "audioRecordingEnabled": false,
                                "cloudArchiveEnabled": false,
                                "maxRetentionDays": 7,
                                "scheduleId": null,
                                "motionDetectorVersion": 2,
                                "videoSettings": {
                                    "MV32": {
                                        "quality": "Enhanced",
                                        "resolution": "1080x1080"
                                    },
                                    "MV21/MV71": {
                                        "quality": "High",
                                        "resolution": "1280x720"
                                    },
                                    "MV12/MV22/MV72": {
                                        "quality": "High",
                                        "resolution": "1920x1080"
                                    },
                                    "MV12WE": {
                                        "quality": "High",
                                        "resolution": "1920x1080"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Creates new quality retention profile for this network.",
                "tags": [
                    "camera",
                    "configure",
                    "qualityRetentionProfiles"
                ]
            }
        },
        "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}": {
            "get": {
                "description": "Retrieve a single quality retention profile",
                "operationId": "getNetworkCameraQualityRetentionProfile",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "qualityRetentionProfileId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "Sample quality retention profile",
                                "restrictedBandwidthModeEnabled": true,
                                "motionBasedRetentionEnabled": false,
                                "audioRecordingEnabled": false,
                                "cloudArchiveEnabled": false,
                                "maxRetentionDays": 7,
                                "scheduleId": null,
                                "motionDetectorVersion": 2,
                                "videoSettings": {
                                    "MV32": {
                                        "quality": "Enhanced",
                                        "resolution": "1080x1080"
                                    },
                                    "MV21/MV71": {
                                        "quality": "High",
                                        "resolution": "1280x720"
                                    },
                                    "MV12/MV22/MV72": {
                                        "quality": "High",
                                        "resolution": "1920x1080"
                                    },
                                    "MV12WE": {
                                        "quality": "High",
                                        "resolution": "1920x1080"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieve a single quality retention profile",
                "tags": [
                    "camera",
                    "configure",
                    "qualityRetentionProfiles"
                ]
            },
            "put": {
                "description": "Update an existing quality retention profile for this network.",
                "operationId": "updateNetworkCameraQualityRetentionProfile",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "qualityRetentionProfileId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkCameraQualityRetentionProfile",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new profile. Must be unique."
                                },
                                "motionBasedRetentionEnabled": {
                                    "type": "boolean",
                                    "description": "Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false."
                                },
                                "restrictedBandwidthModeEnabled": {
                                    "type": "boolean",
                                    "description": "Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false."
                                },
                                "audioRecordingEnabled": {
                                    "type": "boolean",
                                    "description": "Whether or not to record audio. Can be either true or false. Defaults to false."
                                },
                                "cloudArchiveEnabled": {
                                    "type": "boolean",
                                    "description": "Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false."
                                },
                                "motionDetectorVersion": {
                                    "type": "integer",
                                    "description": "The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."
                                },
                                "scheduleId": {
                                    "type": "string",
                                    "description": "Schedule for which this camera will record video, or 'null' to always record."
                                },
                                "maxRetentionDays": {
                                    "type": "integer",
                                    "description": "The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days"
                                },
                                "videoSettings": {
                                    "type": "object",
                                    "properties": {
                                        "MV21/MV71": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV21/MV71 camera models."
                                        },
                                        "MV12/MV22/MV72": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV12/MV22/MV72 camera models."
                                        },
                                        "MV32": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard' or 'Enhanced'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1080x1080",
                                                        "2058x2058"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1080x1080' or '2058x2058'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV32 camera models."
                                        },
                                        "MV12WE": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV12WE camera models."
                                        },
                                        "MV22X/MV72X": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080",
                                                        "2688x1512"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV22X/MV72X camera models."
                                        },
                                        "MV02": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'."
                                                }
                                            },
                                            "required": [
                                                "quality",
                                                "resolution"
                                            ],
                                            "description": "Quality and resolution for MV02 camera models."
                                        }
                                    },
                                    "description": "Video quality and resolution settings for all the camera models."
                                }
                            },
                            "example": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "Sample quality retention profile",
                                "restrictedBandwidthModeEnabled": true,
                                "motionBasedRetentionEnabled": false,
                                "audioRecordingEnabled": false,
                                "cloudArchiveEnabled": false,
                                "maxRetentionDays": 7,
                                "scheduleId": null,
                                "motionDetectorVersion": 2,
                                "videoSettings": {
                                    "MV32": {
                                        "quality": "Enhanced",
                                        "resolution": "1080x1080"
                                    },
                                    "MV21/MV71": {
                                        "quality": "High",
                                        "resolution": "1280x720"
                                    },
                                    "MV12/MV22/MV72": {
                                        "quality": "High",
                                        "resolution": "1920x1080"
                                    },
                                    "MV12WE": {
                                        "quality": "High",
                                        "resolution": "1920x1080"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Update an existing quality retention profile for this network.",
                "tags": [
                    "camera",
                    "configure",
                    "qualityRetentionProfiles"
                ]
            },
            "delete": {
                "description": "Delete an existing quality retention profile for this network.",
                "operationId": "deleteNetworkCameraQualityRetentionProfile",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "qualityRetentionProfileId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete an existing quality retention profile for this network.",
                "tags": [
                    "camera",
                    "configure",
                    "qualityRetentionProfiles"
                ]
            }
        },
        "/networks/{networkId}/camera/schedules": {
            "get": {
                "description": "Returns a list of all camera recording schedules.",
                "operationId": "getNetworkCameraSchedules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "123",
                                    "name": "Weekday schedule"
                                },
                                {
                                    "id": "124",
                                    "name": "Office hours"
                                }
                            ]
                        }
                    }
                },
                "summary": "Returns a list of all camera recording schedules.",
                "tags": [
                    "camera",
                    "configure",
                    "schedules"
                ]
            }
        },
        "/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations": {
            "get": {
                "description": "Return the connectivity testing destinations for an MG network",
                "operationId": "getNetworkCellularGatewayConnectivityMonitoringDestinations",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "destinations": [
                                    {
                                        "ip": "8.8.8.8",
                                        "description": "Google",
                                        "default": false
                                    },
                                    {
                                        "ip": "1.23.45.67",
                                        "description": "test description",
                                        "default": true
                                    },
                                    {
                                        "ip": "9.8.7.6",
                                        "description": null,
                                        "default": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the connectivity testing destinations for an MG network",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "connectivityMonitoringDestinations"
                ]
            },
            "put": {
                "description": "Update the connectivity testing destinations for an MG network",
                "operationId": "updateNetworkCellularGatewayConnectivityMonitoringDestinations",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkCellularGatewayConnectivityMonitoringDestinations",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "destinations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip": {
                                                "type": "string",
                                                "description": "The IP address to test connectivity with"
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description of the testing destination. Optional, defaults to null",
                                                "default": null
                                            },
                                            "default": {
                                                "type": "boolean",
                                                "description": "Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed",
                                                "default": false
                                            }
                                        },
                                        "required": [
                                            "ip"
                                        ]
                                    },
                                    "description": "The list of connectivity monitoring destinations"
                                }
                            },
                            "example": {
                                "destinations": [
                                    {
                                        "ip": "8.8.8.8",
                                        "description": "Google",
                                        "default": false
                                    },
                                    {
                                        "ip": "1.23.45.67",
                                        "description": "test description",
                                        "default": true
                                    },
                                    {
                                        "ip": "9.8.7.6"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "destinations": [
                                    {
                                        "ip": "8.8.8.8",
                                        "description": "Google",
                                        "default": false
                                    },
                                    {
                                        "ip": "1.23.45.67",
                                        "description": "test description",
                                        "default": true
                                    },
                                    {
                                        "ip": "9.8.7.6",
                                        "description": null,
                                        "default": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the connectivity testing destinations for an MG network",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "connectivityMonitoringDestinations"
                ]
            }
        },
        "/networks/{networkId}/cellularGateway/settings/dhcp": {
            "get": {
                "description": "List common DHCP settings of MGs",
                "operationId": "getNetworkCellularGatewaySettingsDhcp",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "dhcpLeaseTime": "1 hour",
                                "dnsNameservers": "custom",
                                "dnsCustomNameservers": [
                                    "172.16.2.111",
                                    "172.16.2.30"
                                ]
                            }
                        }
                    }
                },
                "summary": "List common DHCP settings of MGs",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "settings",
                    "dhcp"
                ]
            },
            "put": {
                "description": "Update common DHCP settings of MGs",
                "operationId": "updateNetworkCellularGatewaySettingsDhcp",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkCellularGatewaySettingsDhcp",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dhcpLeaseTime": {
                                    "type": "string",
                                    "description": "DHCP Lease time for all MG of the network. It can be '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'."
                                },
                                "dnsNameservers": {
                                    "type": "string",
                                    "description": "DNS name servers mode for all MG of the network. It can take 4 different values: 'upstream_dns', 'google_dns', 'opendns', 'custom'."
                                },
                                "dnsCustomNameservers": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "list of fixed IP representing the the DNS Name servers when the mode is 'custom'"
                                }
                            },
                            "example": {
                                "dhcpLeaseTime": "1 hour",
                                "dnsNameservers": "custom",
                                "dnsCustomNameservers": [
                                    "172.16.2.111",
                                    "172.16.2.30"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "dhcpLeaseTime": "1 hour",
                                "dnsNameservers": "custom",
                                "dnsCustomNameservers": [
                                    "172.16.2.111",
                                    "172.16.2.30"
                                ]
                            }
                        }
                    }
                },
                "summary": "Update common DHCP settings of MGs",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "settings",
                    "dhcp"
                ]
            }
        },
        "/networks/{networkId}/cellularGateway/settings/subnetPool": {
            "get": {
                "description": "Return the subnet pool and mask configured for MGs in the network.",
                "operationId": "getNetworkCellularGatewaySettingsSubnetPool",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "cidr": "192.168.0.0/16",
                                "mask": "24",
                                "subnets": [
                                    {
                                        "serial": "AAAA-AAAA-AAAA",
                                        "name": "my first MG",
                                        "applianceIp": "192.168.0.1",
                                        "subnet": "192.168.0.0/24"
                                    },
                                    {
                                        "serial": "BBBB-BBBB-BBBB",
                                        "name": "my second MG",
                                        "applianceIp": "192.168.0.33",
                                        "subnet": "192.168.0.32/24"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the subnet pool and mask configured for MGs in the network.",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "settings",
                    "subnetPool"
                ]
            },
            "put": {
                "description": "Update the subnet pool and mask configuration for MGs in the network.",
                "operationId": "updateNetworkCellularGatewaySettingsSubnetPool",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkCellularGatewaySettingsSubnetPool",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mask": {
                                    "type": "integer",
                                    "description": "Mask used for the subnet of all MGs in  this network."
                                },
                                "cidr": {
                                    "type": "string",
                                    "description": "CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool."
                                }
                            },
                            "example": {
                                "cidr": "192.168.0.0/16",
                                "mask": "24"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "cidr": "192.168.0.0/16",
                                "mask": "24",
                                "subnets": [
                                    {
                                        "serial": "AAAA-AAAA-AAAA",
                                        "name": "my first MG",
                                        "applianceIp": "192.168.0.1",
                                        "subnet": "192.168.0.0/24"
                                    },
                                    {
                                        "serial": "BBBB-BBBB-BBBB",
                                        "name": "my second MG",
                                        "applianceIp": "192.168.0.33",
                                        "subnet": "192.168.0.32/24"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the subnet pool and mask configuration for MGs in the network.",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "settings",
                    "subnetPool"
                ]
            }
        },
        "/networks/{networkId}/cellularGateway/settings/uplink": {
            "get": {
                "description": "Returns the uplink settings for your MG network.",
                "operationId": "getNetworkCellularGatewaySettingsUplink",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "bandwidthLimits": {
                                    "limitUp": 51200,
                                    "limitDown": 51200
                                }
                            }
                        }
                    }
                },
                "summary": "Returns the uplink settings for your MG network.",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "settings",
                    "uplink"
                ]
            },
            "put": {
                "description": "Updates the uplink settings for your MG network.",
                "operationId": "updateNetworkCellularGatewaySettingsUplink",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkCellularGatewaySettingsUplink",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "bandwidthLimits": {
                                    "type": "object",
                                    "properties": {
                                        "limitUp": {
                                            "type": "integer",
                                            "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                        },
                                        "limitDown": {
                                            "type": "integer",
                                            "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                        }
                                    },
                                    "description": "The bandwidth settings for the 'cellular' uplink"
                                }
                            },
                            "example": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "bandwidthLimits": {
                                    "limitUp": 51200,
                                    "limitDown": 51200
                                }
                            }
                        }
                    }
                },
                "summary": "Updates the uplink settings for your MG network.",
                "tags": [
                    "cellularGateway",
                    "configure",
                    "settings",
                    "uplink"
                ]
            }
        },
        "/networks/{networkId}/clients": {
            "get": {
                "description": "List the clients that have used this network in the timespan",
                "operationId": "getNetworkClients",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "usage": {
                                        "sent": 138,
                                        "recv": 61
                                    },
                                    "id": "k74272e",
                                    "description": "Miles's phone",
                                    "mac": "22:33:44:55:66:77",
                                    "ip": "1.2.3.4",
                                    "user": "milesmeraki",
                                    "vlan": 255,
                                    "switchport": null,
                                    "ip6": "",
                                    "firstSeen": 1518365681,
                                    "lastSeen": 1526087474,
                                    "manufacturer": "Apple",
                                    "os": "iOS",
                                    "recentDeviceSerial": "Q234-ABCD-5678",
                                    "recentDeviceName": "My AP",
                                    "recentDeviceMac": "00:11:22:33:44:55",
                                    "ssid": "My SSID",
                                    "status": "Online",
                                    "notes": "My client note",
                                    "ip6Local": "fe80:0:0:0:1430:aac1:6826:75ab",
                                    "smInstalled": true,
                                    "groupPolicy8021x": "Student_Access"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the clients that have used this network in the timespan",
                "tags": [
                    "networks",
                    "monitor",
                    "clients"
                ]
            }
        },
        "/networks/{networkId}/clients/provision": {
            "post": {
                "description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
                "operationId": "provisionNetworkClients",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "provisionNetworkClients",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clients": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "mac": {
                                                "type": "string",
                                                "description": "The MAC address of the client. Required."
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "The display name for the client. Optional. Limited to 255 bytes."
                                            }
                                        },
                                        "required": [
                                            "mac"
                                        ]
                                    },
                                    "description": "The array of clients to provision"
                                },
                                "devicePolicy": {
                                    "type": "string",
                                    "enum": [
                                        "Group policy",
                                        "Whitelisted",
                                        "Blocked",
                                        "Per connection",
                                        "Normal"
                                    ],
                                    "description": "The policy to apply to the specified client. Can be 'Group policy', 'Whitelisted', 'Blocked', 'Per connection' or 'Normal'. Required."
                                },
                                "groupPolicyId": {
                                    "type": "string",
                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                },
                                "policiesBySecurityAppliance": {
                                    "type": "object",
                                    "properties": {
                                        "devicePolicy": {
                                            "type": "string",
                                            "enum": [
                                                "Whitelisted",
                                                "Blocked",
                                                "Normal"
                                            ],
                                            "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked' or 'Normal'. Required."
                                        }
                                    },
                                    "description": "An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)"
                                },
                                "policiesBySsid": {
                                    "type": "object",
                                    "properties": {
                                        "0": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "1": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "2": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "3": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "4": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "5": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "6": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "7": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "8": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "9": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "10": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "11": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "12": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "13": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        },
                                        "14": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Whitelisted",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "required": [
                                                "devicePolicy"
                                            ],
                                            "description": "The number for the SSID"
                                        }
                                    },
                                    "description": "An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy"
                                }
                            },
                            "example": {
                                "clients": [
                                    {
                                        "mac": "00:11:22:33:44:55",
                                        "clientId": "k74272e",
                                        "name": "Miles's phone"
                                    }
                                ],
                                "devicePolicy": "Group policy",
                                "groupPolicyId": "101"
                            },
                            "required": [
                                "clients",
                                "devicePolicy"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "clients": [
                                    {
                                        "mac": "00:11:22:33:44:55",
                                        "clientId": "k74272e",
                                        "name": "Miles's phone"
                                    }
                                ],
                                "devicePolicy": "Group policy",
                                "groupPolicyId": "101"
                            }
                        }
                    }
                },
                "summary": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
                "tags": [
                    "networks",
                    "configure",
                    "clients",
                    "provision"
                ]
            }
        },
        "/networks/{networkId}/clients/{clientId}": {
            "get": {
                "description": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "operationId": "getNetworkClient",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "k74272e",
                                "description": "Miles's phone",
                                "mac": "22:33:44:55:66:77",
                                "ip": "1.2.3.4",
                                "user": "null",
                                "vlan": "255",
                                "switchport": null,
                                "ip6": "",
                                "firstSeen": 1518365681,
                                "lastSeen": 1526087474,
                                "manufacturer": "Apple",
                                "os": "iOS",
                                "ssid": "My SSID",
                                "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",
                                "smInstalled": true,
                                "recentDeviceMac": "00:11:22:33:44:55",
                                "clientVpnConnections": [
                                    {
                                        "remoteIp": "1.2.3.4",
                                        "connectedAt": 1522613355,
                                        "disconnectedAt": 1522613360
                                    }
                                ],
                                "lldp": [
                                    [
                                        "System name",
                                        "Some system name"
                                    ],
                                    [
                                        "System description",
                                        "Some system description"
                                    ],
                                    [
                                        "Port ID",
                                        "1"
                                    ],
                                    [
                                        "Chassis ID",
                                        "00:18:0a:00:00:00"
                                    ],
                                    [
                                        "Port description",
                                        "eth0"
                                    ],
                                    [
                                        "System capabilities",
                                        "Two-port MAC Relay"
                                    ]
                                ],
                                "cdp": null,
                                "status": "Online"
                            }
                        }
                    }
                },
                "summary": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "tags": [
                    "networks",
                    "monitor",
                    "clients"
                ]
            }
        },
        "/networks/{networkId}/clients/{clientId}/events": {
            "get": {
                "description": "Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "operationId": "getNetworkClientEvents",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 100."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "deviceSerial": "Q234-ABCD-5678",
                                    "occurredAt": "2018-02-11T00:00:00Z",
                                    "type": "l3roaming_assoc_start",
                                    "details": {
                                        "vap": "1",
                                        "on_packet": "true"
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "tags": [
                    "networks",
                    "monitor",
                    "clients",
                    "events"
                ]
            }
        },
        "/networks/{networkId}/clients/{clientId}/policy": {
            "get": {
                "description": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "operationId": "getNetworkClientPolicy",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mac": "00:11:22:33:44:55",
                                "type": "Group policy",
                                "groupPolicyId": "101"
                            }
                        }
                    }
                },
                "summary": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "tags": [
                    "networks",
                    "configure",
                    "clients",
                    "policy"
                ]
            },
            "put": {
                "description": "Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "operationId": "updateNetworkClientPolicy",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkClientPolicy",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "devicePolicy": {
                                    "type": "string",
                                    "description": "The policy to assign. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."
                                },
                                "groupPolicyId": {
                                    "type": "string",
                                    "description": "[optional] If 'devicePolicy' is set to 'Group policy' this param is used to specify the group policy ID."
                                }
                            },
                            "example": {
                                "mac": "00:11:22:33:44:55",
                                "type": "Group policy",
                                "groupPolicyId": "101"
                            },
                            "required": [
                                "devicePolicy"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mac": "00:11:22:33:44:55",
                                "type": "Group policy",
                                "groupPolicyId": "101"
                            }
                        }
                    }
                },
                "summary": "Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "tags": [
                    "networks",
                    "configure",
                    "clients",
                    "policy"
                ]
            }
        },
        "/networks/{networkId}/clients/{clientId}/securityEvents": {
            "get": {
                "description": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "operationId": "getNetworkClientSecurityEvents",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "ts": "2018-02-11T00:00:00.090210Z",
                                    "deviceMac": "00:18:0a:01:02:03",
                                    "clientMac": "A1:B2:C3:D4:E5:F6",
                                    "srcIp": "1.2.3.4:34195",
                                    "destIp": "10.20.30.40:80",
                                    "protocol": "tcp/ip",
                                    "priority": "2",
                                    "classification": "4",
                                    "blocked": true,
                                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",
                                    "signature": "1:21516:9",
                                    "sigSource": ""
                                },
                                {
                                    "ts": "2018-02-11T00:00:00.090210Z",
                                    "deviceMac": "00:18:0a:01:02:03",
                                    "clientMac": "A1:B2:C3:D4:E5:F6",
                                    "srcIp": "1.2.3.4:56023",
                                    "destIp": "10.20.30.40:80",
                                    "protocol": "tcp/ip",
                                    "priority": "1",
                                    "classification": "33",
                                    "blocked": true,
                                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
                                    "signature": "1:25975:2",
                                    "sigSource": ""
                                }
                            ]
                        }
                    }
                },
                "summary": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "tags": [
                    "networks",
                    "monitor",
                    "clients",
                    "securityEvents"
                ]
            }
        },
        "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus": {
            "get": {
                "description": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "operationId": "getNetworkClientSplashAuthorizationStatus",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ssids": {
                                    "0": {
                                        "isAuthorized": true,
                                        "authorizedAt": "2017-07-19 16:24:13 UTC",
                                        "expiresAt": "2017-07-20 16:24:13 UTC"
                                    },
                                    "2": {
                                        "isAuthorized": false
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "tags": [
                    "networks",
                    "monitor",
                    "clients",
                    "splashAuthorizationStatus"
                ]
            },
            "put": {
                "description": "Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "operationId": "updateNetworkClientSplashAuthorizationStatus",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkClientSplashAuthorizationStatus",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ssids": {
                                    "type": "object",
                                    "properties": {
                                        "0": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 0"
                                        },
                                        "1": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 1"
                                        },
                                        "2": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 2"
                                        },
                                        "3": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 3"
                                        },
                                        "4": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 4"
                                        },
                                        "5": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 5"
                                        },
                                        "6": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 6"
                                        },
                                        "7": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 7"
                                        },
                                        "8": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 8"
                                        },
                                        "9": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 9"
                                        },
                                        "10": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 10"
                                        },
                                        "11": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 11"
                                        },
                                        "12": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 12"
                                        },
                                        "13": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 13"
                                        },
                                        "14": {
                                            "type": "object",
                                            "properties": {
                                                "isAuthorized": {
                                                    "type": "boolean",
                                                    "description": "New authorization status for the SSID (true, false)."
                                                }
                                            },
                                            "description": "Splash authorization for SSID 14"
                                        }
                                    },
                                    "description": "The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency. Not all networks support configuring all SSIDs"
                                }
                            },
                            "example": {
                                "ssids": {
                                    "0": {
                                        "isAuthorized": true
                                    },
                                    "2": {
                                        "isAuthorized": false
                                    }
                                }
                            },
                            "required": [
                                "ssids"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ssids": {
                                    "0": {
                                        "isAuthorized": true,
                                        "authorizedAt": "2017-07-19 16:24:13 UTC",
                                        "expiresAt": "2017-07-20 16:24:13 UTC"
                                    },
                                    "2": {
                                        "isAuthorized": false
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "tags": [
                    "networks",
                    "monitor",
                    "clients",
                    "splashAuthorizationStatus"
                ]
            }
        },
        "/networks/{networkId}/clients/{clientId}/trafficHistory": {
            "get": {
                "description": "Return the client's network traffic data over time. Usage data is in kilobytes. This operation requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "operationId": "getNetworkClientTrafficHistory",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "ts": "2018-02-11T00:00:00.090210Z",
                                    "application": "Google",
                                    "destination": "www.google.com",
                                    "protocol": "UDP",
                                    "port": 443,
                                    "recv": 383,
                                    "sent": 56,
                                    "numFlows": 5,
                                    "activeSeconds": 240
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the client's network traffic data over time. Usage data is in kilobytes. This operation requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "tags": [
                    "networks",
                    "monitor",
                    "clients",
                    "trafficHistory"
                ]
            }
        },
        "/networks/{networkId}/clients/{clientId}/usageHistory": {
            "get": {
                "description": "Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "operationId": "getNetworkClientUsageHistory",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "sent": 500,
                                    "received": 680,
                                    "ts": "2018-02-11T00:00:00.090210Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "tags": [
                    "networks",
                    "monitor",
                    "clients",
                    "usageHistory"
                ]
            }
        },
        "/networks/{networkId}/contentFiltering": {
            "get": {
                "description": "Return the content filtering settings for an MX network",
                "operationId": "getNetworkContentFiltering",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "allowedUrlPatterns": [
                                    "http://www.example.org",
                                    "http://help.com.au"
                                ],
                                "blockedUrlPatterns": [
                                    "http://www.example.com",
                                    "http://www.betting.com"
                                ],
                                "blockedUrlCategories": [
                                    {
                                        "id": "meraki:contentFiltering/category/1",
                                        "name": "Real Estate"
                                    },
                                    {
                                        "id": "meraki:contentFiltering/category/7",
                                        "name": "Shopping"
                                    }
                                ],
                                "urlCategoryListSize": "topSites"
                            }
                        }
                    }
                },
                "summary": "Return the content filtering settings for an MX network",
                "tags": [
                    "networks",
                    "configure",
                    "contentFiltering"
                ]
            },
            "put": {
                "description": "Update the content filtering settings for an MX network",
                "operationId": "updateNetworkContentFiltering",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkContentFiltering",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "allowedUrlPatterns": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A whitelist of URL patterns to allow"
                                },
                                "blockedUrlPatterns": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A blacklist of URL patterns to block"
                                },
                                "blockedUrlCategories": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of URL categories to block"
                                },
                                "urlCategoryListSize": {
                                    "type": "string",
                                    "enum": [
                                        "topSites",
                                        "fullList"
                                    ],
                                    "description": "URL category list size which is either 'topSites' or 'fullList'"
                                }
                            },
                            "example": {
                                "allowedUrlPatterns": [
                                    "http://www.example.org",
                                    "http://help.com.au"
                                ],
                                "blockedUrlPatterns": [
                                    "http://www.example.com",
                                    "http://www.betting.com"
                                ],
                                "blockedUrlCategories": [
                                    "meraki:contentFiltering/category/1",
                                    "meraki:contentFiltering/category/7"
                                ],
                                "urlCategoryListSize": "topSites"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "allowedUrlPatterns": [
                                    "http://www.example.org",
                                    "http://help.com.au"
                                ],
                                "blockedUrlPatterns": [
                                    "http://www.example.com",
                                    "http://www.betting.com"
                                ],
                                "blockedUrlCategories": [
                                    {
                                        "id": "meraki:contentFiltering/category/1",
                                        "name": "Real Estate"
                                    },
                                    {
                                        "id": "meraki:contentFiltering/category/7",
                                        "name": "Shopping"
                                    }
                                ],
                                "urlCategoryListSize": "topSites"
                            }
                        }
                    }
                },
                "summary": "Update the content filtering settings for an MX network",
                "tags": [
                    "networks",
                    "configure",
                    "contentFiltering"
                ]
            }
        },
        "/networks/{networkId}/devices": {
            "get": {
                "description": "List the devices in a network",
                "operationId": "getNetworkDevices",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "My AP",
                                    "lat": 37.4180951010362,
                                    "lng": -122.098531723022,
                                    "serial": "Q234-ABCD-5678",
                                    "mac": "00:11:22:33:44:55",
                                    "model": "MR34",
                                    "address": "1600 Pennsylvania Ave",
                                    "notes": "My AP's note",
                                    "lanIp": "1.2.3.4",
                                    "tags": " recently-added ",
                                    "networkId": "N_24329156",
                                    "beaconIdParams": {
                                        "uuid": "00000000-0000-0000-0000-000000000000",
                                        "major": 5,
                                        "minor": 3
                                    },
                                    "firmware": "wireless-25-14",
                                    "floorPlanId": "g_1234567"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the devices in a network",
                "tags": [
                    "networks",
                    "configure",
                    "devices"
                ]
            }
        },
        "/networks/{networkId}/devices/claim": {
            "post": {
                "description": "Claim devices into a network",
                "operationId": "claimNetworkDevices",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "claimNetworkDevices",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "serials": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of serials of devices to claim"
                                }
                            },
                            "example": {
                                "serials": [
                                    "Q234-ABCD-0001",
                                    "Q234-ABCD-0002",
                                    "Q234-ABCD-0003"
                                ]
                            },
                            "required": [
                                "serials"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Claim devices into a network",
                "tags": [
                    "networks",
                    "configure",
                    "devices",
                    "claim"
                ]
            }
        },
        "/networks/{networkId}/devices/remove": {
            "post": {
                "description": "Remove a single device",
                "operationId": "removeNetworkDevices",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "removeNetworkDevices",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "serial": {
                                    "type": "string",
                                    "description": "The serial of a device"
                                }
                            },
                            "example": {
                                "serial": "Q234-ABCD-5678"
                            },
                            "required": [
                                "serial"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Remove a single device",
                "tags": [
                    "networks",
                    "configure",
                    "devices",
                    "remove"
                ]
            }
        },
        "/networks/{networkId}/events": {
            "get": {
                "description": "List the events for the network",
                "operationId": "getNetworkEvents",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "productType",
                        "in": "query",
                        "description": "The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "includedEventTypes",
                        "in": "query",
                        "description": "A list of event types. The returned events will be filtered to only include events with these types."
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "excludedEventTypes",
                        "in": "query",
                        "description": "A list of event types. The returned events will be filtered to exclude events with these types."
                    },
                    {
                        "type": "string",
                        "name": "deviceMac",
                        "in": "query",
                        "description": "The MAC address of the Meraki device which the list of events will be filtered with"
                    },
                    {
                        "type": "string",
                        "name": "deviceSerial",
                        "in": "query",
                        "description": "The serial of the Meraki device which the list of events will be filtered with"
                    },
                    {
                        "type": "string",
                        "name": "deviceName",
                        "in": "query",
                        "description": "The name of the Meraki device which the list of events will be filtered with"
                    },
                    {
                        "type": "string",
                        "name": "clientIp",
                        "in": "query",
                        "description": "The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks."
                    },
                    {
                        "type": "string",
                        "name": "clientMac",
                        "in": "query",
                        "description": "The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks."
                    },
                    {
                        "type": "string",
                        "name": "clientName",
                        "in": "query",
                        "description": "The name, or partial name, of the client which the list of events will be filtered with"
                    },
                    {
                        "type": "string",
                        "name": "smDeviceMac",
                        "in": "query",
                        "description": "The MAC address of the Systems Manager device which the list of events will be filtered with"
                    },
                    {
                        "type": "string",
                        "name": "smDeviceName",
                        "in": "query",
                        "description": "The name of the Systems Manager device which the list of events will be filtered with"
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": {
                                "message": null,
                                "pageStartAt": "2018-02-11T00:00:00.090210Z",
                                "pageEndAt": "2018-02-11T00:00:00.090210Z",
                                "events": [
                                    {
                                        "occurredAt": "2018-02-11T00:00:00.090210Z",
                                        "networkId": "N_24329156",
                                        "type": "association",
                                        "description": "802.11 association",
                                        "clientId": "k74272e",
                                        "clientDescription": "Miles's phone",
                                        "deviceSerial": "Q234-ABCD-5678",
                                        "deviceName": "My AP",
                                        "ssidNumber": 1,
                                        "ssidName": "My SSID",
                                        "eventData": {
                                            "radio": "1",
                                            "vap": "1",
                                            "client_mac": "22:33:44:55:66:77",
                                            "client_ip": "1.2.3.4",
                                            "channel": "36",
                                            "rssi": "12",
                                            "aid": "2104009183"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "List the events for the network",
                "tags": [
                    "networks",
                    "monitor",
                    "events"
                ]
            }
        },
        "/networks/{networkId}/events/eventTypes": {
            "get": {
                "description": "List the event type to human-readable description",
                "operationId": "getNetworkEventsEventTypes",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "category": "802.11",
                                    "type": "association",
                                    "description": "802.11 association"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the event type to human-readable description",
                "tags": [
                    "networks",
                    "monitor",
                    "events",
                    "eventTypes"
                ]
            }
        },
        "/networks/{networkId}/firewalledServices/{service}": {
            "put": {
                "description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
                "operationId": "updateNetworkFirewalledService",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkFirewalledService",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "access": {
                                    "type": "string",
                                    "enum": [
                                        "blocked",
                                        "restricted",
                                        "unrestricted"
                                    ],
                                    "description": "A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only whitelisted IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required"
                                },
                                "allowedIps": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "An array of whitelisted IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored"
                                }
                            },
                            "example": {
                                "access": "restricted",
                                "allowedIps": [
                                    "123.123.123.1"
                                ]
                            },
                            "required": [
                                "access"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "service": "web",
                                "access": "restricted",
                                "allowedIps": [
                                    "123.123.123.1"
                                ]
                            }
                        }
                    }
                },
                "summary": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
                "tags": [
                    "networks",
                    "configure",
                    "firewalledServices"
                ]
            }
        },
        "/networks/{networkId}/floorPlans": {
            "get": {
                "description": "List the floor plans that belong to your network",
                "operationId": "getNetworkFloorPlans",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "floorPlanId": "g_1234567",
                                    "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",
                                    "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",
                                    "imageExtension": "png",
                                    "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",
                                    "name": "HQ Floor Plan",
                                    "devices": [
                                        {
                                            "name": "My AP",
                                            "lat": 37.4180951010362,
                                            "lng": -122.098531723022,
                                            "serial": "Q234-ABCD-5678",
                                            "mac": "00:11:22:33:44:55",
                                            "model": "MR34",
                                            "address": "1600 Pennsylvania Ave",
                                            "notes": "My AP's note",
                                            "lanIp": "1.2.3.4",
                                            "tags": " recently-added ",
                                            "networkId": "N_24329156",
                                            "beaconIdParams": {
                                                "uuid": "00000000-0000-0000-0000-000000000000",
                                                "major": 5,
                                                "minor": 3
                                            },
                                            "firmware": "wireless-25-14",
                                            "floorPlanId": "g_1234567"
                                        }
                                    ],
                                    "width": 100,
                                    "height": 150,
                                    "center": {
                                        "lat": 37.770040510499996,
                                        "lng": -122.38714009525
                                    },
                                    "bottomLeftCorner": {
                                        "lat": 37.7696461495,
                                        "lng": -122.3880815506
                                    },
                                    "bottomRightCorner": {
                                        "lat": 37.771524649766654,
                                        "lng": -122.38795275055205
                                    },
                                    "topLeftCorner": {
                                        "lat": 37.769700101836364,
                                        "lng": -122.3888684251381
                                    },
                                    "topRightCorner": {
                                        "lat": 37.77157860210302,
                                        "lng": -122.38873962509012
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "List the floor plans that belong to your network",
                "tags": [
                    "networks",
                    "configure",
                    "floorPlans"
                ]
            },
            "post": {
                "description": "Upload a floor plan",
                "operationId": "createNetworkFloorPlan",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkFloorPlan",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of your floor plan."
                                },
                                "center": {
                                    "type": "object",
                                    "properties": {
                                        "lat": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Latitude"
                                        },
                                        "lng": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Longitude"
                                        }
                                    },
                                    "description": "The longitude and latitude of the center of your floor plan. The 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair."
                                },
                                "bottomLeftCorner": {
                                    "type": "object",
                                    "properties": {
                                        "lat": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Latitude"
                                        },
                                        "lng": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Longitude"
                                        }
                                    },
                                    "description": "The longitude and latitude of the bottom left corner of your floor plan."
                                },
                                "bottomRightCorner": {
                                    "type": "object",
                                    "properties": {
                                        "lat": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Latitude"
                                        },
                                        "lng": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Longitude"
                                        }
                                    },
                                    "description": "The longitude and latitude of the bottom right corner of your floor plan."
                                },
                                "topLeftCorner": {
                                    "type": "object",
                                    "properties": {
                                        "lat": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Latitude"
                                        },
                                        "lng": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Longitude"
                                        }
                                    },
                                    "description": "The longitude and latitude of the top left corner of your floor plan."
                                },
                                "topRightCorner": {
                                    "type": "object",
                                    "properties": {
                                        "lat": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Latitude"
                                        },
                                        "lng": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Longitude"
                                        }
                                    },
                                    "description": "The longitude and latitude of the top right corner of your floor plan."
                                },
                                "imageContents": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "The file contents (a base 64 encoded string) of your image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in."
                                }
                            },
                            "example": {},
                            "required": [
                                "name",
                                "imageContents"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "floorPlanId": "g_1234567",
                                "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",
                                "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",
                                "imageExtension": "png",
                                "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",
                                "name": "HQ Floor Plan",
                                "devices": [
                                    {
                                        "name": "My AP",
                                        "lat": 37.4180951010362,
                                        "lng": -122.098531723022,
                                        "serial": "Q234-ABCD-5678",
                                        "mac": "00:11:22:33:44:55",
                                        "model": "MR34",
                                        "address": "1600 Pennsylvania Ave",
                                        "notes": "My AP's note",
                                        "lanIp": "1.2.3.4",
                                        "tags": " recently-added ",
                                        "networkId": "N_24329156",
                                        "beaconIdParams": {
                                            "uuid": "00000000-0000-0000-0000-000000000000",
                                            "major": 5,
                                            "minor": 3
                                        },
                                        "firmware": "wireless-25-14",
                                        "floorPlanId": "g_1234567"
                                    }
                                ],
                                "width": 100,
                                "height": 150,
                                "center": {
                                    "lat": 37.770040510499996,
                                    "lng": -122.38714009525
                                },
                                "bottomLeftCorner": {
                                    "lat": 37.7696461495,
                                    "lng": -122.3880815506
                                },
                                "bottomRightCorner": {
                                    "lat": 37.771524649766654,
                                    "lng": -122.38795275055205
                                },
                                "topLeftCorner": {
                                    "lat": 37.769700101836364,
                                    "lng": -122.3888684251381
                                },
                                "topRightCorner": {
                                    "lat": 37.77157860210302,
                                    "lng": -122.38873962509012
                                }
                            }
                        }
                    }
                },
                "summary": "Upload a floor plan",
                "tags": [
                    "networks",
                    "configure",
                    "floorPlans"
                ]
            }
        },
        "/networks/{networkId}/floorPlans/{floorPlanId}": {
            "get": {
                "description": "Find a floor plan by ID",
                "operationId": "getNetworkFloorPlan",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "floorPlanId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "floorPlanId": "g_1234567",
                                "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",
                                "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",
                                "imageExtension": "png",
                                "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",
                                "name": "HQ Floor Plan",
                                "devices": [
                                    {
                                        "name": "My AP",
                                        "lat": 37.4180951010362,
                                        "lng": -122.098531723022,
                                        "serial": "Q234-ABCD-5678",
                                        "mac": "00:11:22:33:44:55",
                                        "model": "MR34",
                                        "address": "1600 Pennsylvania Ave",
                                        "notes": "My AP's note",
                                        "lanIp": "1.2.3.4",
                                        "tags": " recently-added ",
                                        "networkId": "N_24329156",
                                        "beaconIdParams": {
                                            "uuid": "00000000-0000-0000-0000-000000000000",
                                            "major": 5,
                                            "minor": 3
                                        },
                                        "firmware": "wireless-25-14",
                                        "floorPlanId": "g_1234567"
                                    }
                                ],
                                "width": 100,
                                "height": 150,
                                "center": {
                                    "lat": 37.770040510499996,
                                    "lng": -122.38714009525
                                },
                                "bottomLeftCorner": {
                                    "lat": 37.7696461495,
                                    "lng": -122.3880815506
                                },
                                "bottomRightCorner": {
                                    "lat": 37.771524649766654,
                                    "lng": -122.38795275055205
                                },
                                "topLeftCorner": {
                                    "lat": 37.769700101836364,
                                    "lng": -122.3888684251381
                                },
                                "topRightCorner": {
                                    "lat": 37.77157860210302,
                                    "lng": -122.38873962509012
                                }
                            }
                        }
                    }
                },
                "summary": "Find a floor plan by ID",
                "tags": [
                    "networks",
                    "configure",
                    "floorPlans"
                ]
            },
            "put": {
                "description": "Update a floor plan's geolocation and other meta data",
                "operationId": "updateNetworkFloorPlan",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "floorPlanId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkFloorPlan",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of your floor plan."
                                },
                                "center": {
                                    "type": "object",
                                    "properties": {
                                        "lat": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Latitude"
                                        },
                                        "lng": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Longitude"
                                        }
                                    },
                                    "description": "The longitude and latitude of the center of your floor plan. If you want to change the geolocation data of your floor plan, either the 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair."
                                },
                                "bottomLeftCorner": {
                                    "type": "object",
                                    "properties": {
                                        "lat": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Latitude"
                                        },
                                        "lng": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Longitude"
                                        }
                                    },
                                    "description": "The longitude and latitude of the bottom left corner of your floor plan."
                                },
                                "bottomRightCorner": {
                                    "type": "object",
                                    "properties": {
                                        "lat": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Latitude"
                                        },
                                        "lng": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Longitude"
                                        }
                                    },
                                    "description": "The longitude and latitude of the bottom right corner of your floor plan."
                                },
                                "topLeftCorner": {
                                    "type": "object",
                                    "properties": {
                                        "lat": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Latitude"
                                        },
                                        "lng": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Longitude"
                                        }
                                    },
                                    "description": "The longitude and latitude of the top left corner of your floor plan."
                                },
                                "topRightCorner": {
                                    "type": "object",
                                    "properties": {
                                        "lat": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Latitude"
                                        },
                                        "lng": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Longitude"
                                        }
                                    },
                                    "description": "The longitude and latitude of the top right corner of your floor plan."
                                },
                                "imageContents": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image."
                                }
                            },
                            "example": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "floorPlanId": "g_1234567",
                                "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",
                                "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",
                                "imageExtension": "png",
                                "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",
                                "name": "HQ Floor Plan",
                                "devices": [
                                    {
                                        "name": "My AP",
                                        "lat": 37.4180951010362,
                                        "lng": -122.098531723022,
                                        "serial": "Q234-ABCD-5678",
                                        "mac": "00:11:22:33:44:55",
                                        "model": "MR34",
                                        "address": "1600 Pennsylvania Ave",
                                        "notes": "My AP's note",
                                        "lanIp": "1.2.3.4",
                                        "tags": " recently-added ",
                                        "networkId": "N_24329156",
                                        "beaconIdParams": {
                                            "uuid": "00000000-0000-0000-0000-000000000000",
                                            "major": 5,
                                            "minor": 3
                                        },
                                        "firmware": "wireless-25-14",
                                        "floorPlanId": "g_1234567"
                                    }
                                ],
                                "width": 100,
                                "height": 150,
                                "center": {
                                    "lat": 37.770040510499996,
                                    "lng": -122.38714009525
                                },
                                "bottomLeftCorner": {
                                    "lat": 37.7696461495,
                                    "lng": -122.3880815506
                                },
                                "bottomRightCorner": {
                                    "lat": 37.771524649766654,
                                    "lng": -122.38795275055205
                                },
                                "topLeftCorner": {
                                    "lat": 37.769700101836364,
                                    "lng": -122.3888684251381
                                },
                                "topRightCorner": {
                                    "lat": 37.77157860210302,
                                    "lng": -122.38873962509012
                                }
                            }
                        }
                    }
                },
                "summary": "Update a floor plan's geolocation and other meta data",
                "tags": [
                    "networks",
                    "configure",
                    "floorPlans"
                ]
            },
            "delete": {
                "description": "Destroy a floor plan",
                "operationId": "deleteNetworkFloorPlan",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "floorPlanId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Destroy a floor plan",
                "tags": [
                    "networks",
                    "configure",
                    "floorPlans"
                ]
            }
        },
        "/networks/{networkId}/groupPolicies": {
            "get": {
                "description": "List the group policies in a network",
                "operationId": "getNetworkGroupPolicies",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "No video streaming",
                                    "groupPolicyId": "101",
                                    "scheduling": {
                                        "enabled": true,
                                        "monday": {
                                            "active": true,
                                            "from": "9:00",
                                            "to": "17:00"
                                        },
                                        "tuesday": {
                                            "active": true,
                                            "from": "9:00",
                                            "to": "17:00"
                                        },
                                        "wednesday": {
                                            "active": true,
                                            "from": "9:00",
                                            "to": "17:00"
                                        },
                                        "thursday": {
                                            "active": true,
                                            "from": "9:00",
                                            "to": "17:00"
                                        },
                                        "friday": {
                                            "active": true,
                                            "from": "9:00",
                                            "to": "17:00"
                                        },
                                        "saturday": {
                                            "active": false,
                                            "from": "0:00",
                                            "to": "24:00"
                                        },
                                        "sunday": {
                                            "active": false,
                                            "from": "0:00",
                                            "to": "24:00"
                                        }
                                    },
                                    "bandwidth": {
                                        "settings": "custom",
                                        "bandwidthLimits": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        }
                                    },
                                    "firewallAndTrafficShaping": {
                                        "settings": "custom",
                                        "trafficShapingRules": [
                                            {
                                                "definitions": [
                                                    {
                                                        "type": "host",
                                                        "value": "google.com"
                                                    },
                                                    {
                                                        "type": "port",
                                                        "value": "9090"
                                                    },
                                                    {
                                                        "type": "ipRange",
                                                        "value": "192.1.0.0"
                                                    },
                                                    {
                                                        "type": "ipRange",
                                                        "value": "192.1.0.0/16"
                                                    },
                                                    {
                                                        "type": "ipRange",
                                                        "value": "10.1.0.0/16:80"
                                                    },
                                                    {
                                                        "type": "localNet",
                                                        "value": "192.168.0.0/16"
                                                    },
                                                    {
                                                        "type": "applicationCategory",
                                                        "value": {
                                                            "id": "meraki:layer7/category/2",
                                                            "name": "Blogging"
                                                        }
                                                    },
                                                    {
                                                        "type": "application",
                                                        "value": {
                                                            "id": "meraki:layer7/application/133",
                                                            "name": "Battle.net"
                                                        }
                                                    }
                                                ],
                                                "perClientBandwidthLimits": {
                                                    "settings": "custom",
                                                    "bandwidthLimits": {
                                                        "limitUp": 1000000,
                                                        "limitDown": 1000000
                                                    }
                                                },
                                                "dscpTagValue": null,
                                                "pcpTagValue": null
                                            }
                                        ],
                                        "l3FirewallRules": [
                                            {
                                                "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                                "policy": "allow",
                                                "protocol": "tcp",
                                                "destPort": 443,
                                                "destCidr": "192.168.1.0/24"
                                            }
                                        ],
                                        "l7FirewallRules": [
                                            [
                                                {
                                                    "policy": "deny",
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/67",
                                                        "name": "Xbox LIVE"
                                                    }
                                                },
                                                {
                                                    "policy": "deny",
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/2",
                                                        "name": "Blogging"
                                                    }
                                                },
                                                {
                                                    "policy": "deny",
                                                    "type": "host",
                                                    "value": "google.com"
                                                },
                                                {
                                                    "policy": "deny",
                                                    "type": "port",
                                                    "value": "23"
                                                },
                                                {
                                                    "policy": "deny",
                                                    "type": "ipRange",
                                                    "value": "10.11.12.00/24"
                                                },
                                                {
                                                    "policy": "deny",
                                                    "type": "ipRange",
                                                    "value": "10.11.12.00/24:5555"
                                                },
                                                {
                                                    "policy": "deny",
                                                    "type": "blacklistedCountries",
                                                    "value": [
                                                        "AX",
                                                        "CA"
                                                    ]
                                                },
                                                {
                                                    "policy": "deny",
                                                    "type": "whitelistedCountries",
                                                    "value": [
                                                        "US"
                                                    ]
                                                }
                                            ]
                                        ]
                                    },
                                    "contentFiltering": {
                                        "allowedUrlPatterns": {
                                            "settings": "network default",
                                            "patterns": []
                                        },
                                        "blockedUrlPatterns": {
                                            "settings": "append",
                                            "patterns": [
                                                "http://www.example.com",
                                                "http://www.betting.com"
                                            ]
                                        },
                                        "blockedUrlCategories": {
                                            "settings": "override",
                                            "categories": [
                                                "meraki:contentFiltering/category/1",
                                                "meraki:contentFiltering/category/7"
                                            ]
                                        }
                                    },
                                    "splashAuthSettings": "bypass",
                                    "vlanTagging": {
                                        "settings": "custom",
                                        "vlanId": "1"
                                    },
                                    "bonjourForwarding": {
                                        "settings": "custom",
                                        "rules": [
                                            {
                                                "description": "A simple bonjour rule",
                                                "vlanId": "1",
                                                "services": [
                                                    "All Services"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "List the group policies in a network",
                "tags": [
                    "networks",
                    "configure",
                    "groupPolicies"
                ]
            },
            "post": {
                "description": "Create a group policy",
                "operationId": "createNetworkGroupPolicy",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkGroupPolicy",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name for your group policy. Required."
                                },
                                "scheduling": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed."
                                        },
                                        "monday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Monday."
                                        },
                                        "tuesday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Tuesday."
                                        },
                                        "wednesday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Wednesday."
                                        },
                                        "thursday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Thursday."
                                        },
                                        "friday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Friday."
                                        },
                                        "saturday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Saturday."
                                        },
                                        "sunday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Sunday."
                                        }
                                    },
                                    "description": "    The schedule for the group policy. Schedules are applied to days of the week.\n"
                                },
                                "bandwidth": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "string",
                                            "enum": [
                                                "network default",
                                                "ignore",
                                                "custom"
                                            ],
                                            "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'."
                                        },
                                        "bandwidthLimits": {
                                            "type": "object",
                                            "properties": {
                                                "limitUp": {
                                                    "type": "integer",
                                                    "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                },
                                                "limitDown": {
                                                    "type": "integer",
                                                    "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                }
                                            },
                                            "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'."
                                        }
                                    },
                                    "description": "    The bandwidth settings for clients bound to your group policy.\n"
                                },
                                "firewallAndTrafficShaping": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "string",
                                            "enum": [
                                                "network default",
                                                "ignore",
                                                "custom"
                                            ],
                                            "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'."
                                        },
                                        "trafficShapingRules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "definitions": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "application",
                                                                        "applicationCategory",
                                                                        "host",
                                                                        "port",
                                                                        "ipRange",
                                                                        "localNet"
                                                                    ],
                                                                    "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    operation).\n"
                                                                }
                                                            },
                                                            "required": [
                                                                "type",
                                                                "value"
                                                            ]
                                                        },
                                                        "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                                                    },
                                                    "perClientBandwidthLimits": {
                                                        "type": "object",
                                                        "properties": {
                                                            "settings": {
                                                                "type": "string",
                                                                "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                                                            },
                                                            "bandwidthLimits": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "limitUp": {
                                                                        "type": "integer",
                                                                        "description": "The maximum upload limit (integer, in Kbps)."
                                                                    },
                                                                    "limitDown": {
                                                                        "type": "integer",
                                                                        "description": "The maximum download limit (integer, in Kbps)."
                                                                    }
                                                                },
                                                                "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                                                            }
                                                        },
                                                        "description": "    An object describing the bandwidth settings for your rule.\n"
                                                    },
                                                    "dscpTagValue": {
                                                        "type": "integer",
                                                        "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions operation.\n"
                                                    },
                                                    "pcpTagValue": {
                                                        "type": "integer",
                                                        "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                                                    },
                                                    "priority": {
                                                        "type": "string",
                                                        "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                                                    }
                                                },
                                                "required": [
                                                    "definitions"
                                                ]
                                            },
                                            "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                                        },
                                        "l3FirewallRules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "comment": {
                                                        "type": "string",
                                                        "description": "Description of the rule (optional)"
                                                    },
                                                    "policy": {
                                                        "type": "string",
                                                        "description": "'allow' or 'deny' traffic specified by this rule"
                                                    },
                                                    "protocol": {
                                                        "type": "string",
                                                        "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                                    },
                                                    "destPort": {
                                                        "type": "string",
                                                        "description": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'"
                                                    },
                                                    "destCidr": {
                                                        "type": "string",
                                                        "description": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'."
                                                    }
                                                },
                                                "required": [
                                                    "policy",
                                                    "protocol",
                                                    "destCidr"
                                                ]
                                            },
                                            "description": "An ordered array of the L3 firewall rules"
                                        },
                                        "l7FirewallRules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "policy": {
                                                        "type": "string",
                                                        "enum": [
                                                            "deny"
                                                        ],
                                                        "description": "The policy applied to matching traffic. Must be 'deny'."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "application",
                                                            "applicationCategory",
                                                            "host",
                                                            "port",
                                                            "ipRange"
                                                        ],
                                                        "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application."
                                                    }
                                                }
                                            },
                                            "description": "An ordered array of L7 firewall rules"
                                        }
                                    },
                                    "description": "    The firewall and traffic shaping rules and settings for your policy.\n"
                                },
                                "contentFiltering": {
                                    "type": "object",
                                    "properties": {
                                        "allowedUrlPatterns": {
                                            "type": "object",
                                            "properties": {
                                                "settings": {
                                                    "type": "string",
                                                    "enum": [
                                                        "network default",
                                                        "append",
                                                        "override"
                                                    ],
                                                    "description": "How URL patterns are applied. Can be 'network default', 'append' or 'override'."
                                                },
                                                "patterns": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "A whitelist of URL patterns to allow"
                                                }
                                            },
                                            "description": "Settings for whitelisted URL patterns"
                                        },
                                        "blockedUrlPatterns": {
                                            "type": "object",
                                            "properties": {
                                                "settings": {
                                                    "type": "string",
                                                    "enum": [
                                                        "network default",
                                                        "append",
                                                        "override"
                                                    ],
                                                    "description": "How URL patterns are applied. Can be 'network default', 'append' or 'override'."
                                                },
                                                "patterns": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "A blacklist of URL patterns to block"
                                                }
                                            },
                                            "description": "Settings for blacklisted URL patterns"
                                        },
                                        "blockedUrlCategories": {
                                            "type": "object",
                                            "properties": {
                                                "settings": {
                                                    "type": "string",
                                                    "enum": [
                                                        "network default",
                                                        "append",
                                                        "override"
                                                    ],
                                                    "description": "How URL categories are applied. Can be 'network default', 'append' or 'override'."
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "A list of URL categories to block"
                                                }
                                            },
                                            "description": "Settings for blacklisted URL categories"
                                        }
                                    },
                                    "description": "The content filtering settings for your group policy"
                                },
                                "splashAuthSettings": {
                                    "type": "string",
                                    "enum": [
                                        "network default",
                                        "bypass"
                                    ],
                                    "description": "Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration."
                                },
                                "vlanTagging": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "string",
                                            "enum": [
                                                "network default",
                                                "ignore",
                                                "custom"
                                            ],
                                            "description": "How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'."
                                        },
                                        "vlanId": {
                                            "type": "string",
                                            "description": "The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'."
                                        }
                                    },
                                    "description": "The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration."
                                },
                                "bonjourForwarding": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "string",
                                            "enum": [
                                                "network default",
                                                "ignore",
                                                "custom"
                                            ],
                                            "description": "How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'."
                                        },
                                        "rules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "description": {
                                                        "type": "string",
                                                        "description": "A description for your Bonjour forwarding rule. Optional."
                                                    },
                                                    "vlanId": {
                                                        "type": "string",
                                                        "description": "The ID of the service VLAN. Required."
                                                    },
                                                    "services": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "All Services",
                                                                "AirPlay",
                                                                "AFP",
                                                                "BitTorrent",
                                                                "FTP",
                                                                "iChat",
                                                                "iTunes",
                                                                "Printers",
                                                                "Samba",
                                                                "Scanners",
                                                                "SSH"
                                                            ]
                                                        },
                                                        "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'"
                                                    }
                                                },
                                                "required": [
                                                    "vlanId",
                                                    "services"
                                                ]
                                            },
                                            "description": "A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified."
                                        }
                                    },
                                    "description": "The Bonjour settings for your group policy. Only valid if your network has a wireless configuration."
                                }
                            },
                            "example": {
                                "name": "No video streaming",
                                "scheduling": {
                                    "enabled": true,
                                    "monday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "tuesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "wednesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "thursday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "friday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "saturday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    },
                                    "sunday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    }
                                },
                                "bandwidth": {
                                    "settings": "custom",
                                    "bandwidthLimits": {
                                        "limitUp": 1000000,
                                        "limitDown": 1000000
                                    }
                                },
                                "firewallAndTrafficShaping": {
                                    "settings": "custom",
                                    "trafficShapingRules": [
                                        {
                                            "definitions": [
                                                {
                                                    "type": "host",
                                                    "value": "google.com"
                                                },
                                                {
                                                    "type": "port",
                                                    "value": "9090"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "192.1.0.0"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "192.1.0.0/16"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "10.1.0.0/16:80"
                                                },
                                                {
                                                    "type": "localNet",
                                                    "value": "192.168.0.0/16"
                                                },
                                                {
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/2",
                                                        "name": "Blogging"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/133",
                                                        "name": "Battle.net"
                                                    }
                                                }
                                            ],
                                            "perClientBandwidthLimits": {
                                                "settings": "custom",
                                                "bandwidthLimits": {
                                                    "limitUp": 1000000,
                                                    "limitDown": 1000000
                                                }
                                            },
                                            "dscpTagValue": null,
                                            "pcpTagValue": null
                                        }
                                    ],
                                    "l3FirewallRules": [
                                        {
                                            "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                            "policy": "allow",
                                            "protocol": "tcp",
                                            "destPort": 443,
                                            "destCidr": "192.168.1.0/24"
                                        }
                                    ],
                                    "l7FirewallRules": [
                                        [
                                            {
                                                "policy": "deny",
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/67",
                                                    "name": "Xbox LIVE"
                                                }
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "port",
                                                "value": "23"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "ipRange",
                                                "value": "10.11.12.00/24"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "ipRange",
                                                "value": "10.11.12.00/24:5555"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "blacklistedCountries",
                                                "value": [
                                                    "AX",
                                                    "CA"
                                                ]
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "whitelistedCountries",
                                                "value": [
                                                    "US"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "contentFiltering": {
                                    "allowedUrlPatterns": {
                                        "settings": "network default",
                                        "patterns": []
                                    },
                                    "blockedUrlPatterns": {
                                        "settings": "append",
                                        "patterns": [
                                            "http://www.example.com",
                                            "http://www.betting.com"
                                        ]
                                    },
                                    "blockedUrlCategories": {
                                        "settings": "override",
                                        "categories": [
                                            "meraki:contentFiltering/category/1",
                                            "meraki:contentFiltering/category/7"
                                        ]
                                    }
                                },
                                "splashAuthSettings": "bypass",
                                "vlanTagging": {
                                    "settings": "custom",
                                    "vlanId": "1"
                                },
                                "bonjourForwarding": {
                                    "settings": "custom",
                                    "rules": [
                                        {
                                            "description": "A simple bonjour rule",
                                            "vlanId": "1",
                                            "services": [
                                                "All Services"
                                            ]
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "name"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "name": "No video streaming",
                                "groupPolicyId": "101",
                                "scheduling": {
                                    "enabled": true,
                                    "monday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "tuesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "wednesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "thursday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "friday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "saturday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    },
                                    "sunday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    }
                                },
                                "bandwidth": {
                                    "settings": "custom",
                                    "bandwidthLimits": {
                                        "limitUp": 1000000,
                                        "limitDown": 1000000
                                    }
                                },
                                "firewallAndTrafficShaping": {
                                    "settings": "custom",
                                    "trafficShapingRules": [
                                        {
                                            "definitions": [
                                                {
                                                    "type": "host",
                                                    "value": "google.com"
                                                },
                                                {
                                                    "type": "port",
                                                    "value": "9090"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "192.1.0.0"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "192.1.0.0/16"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "10.1.0.0/16:80"
                                                },
                                                {
                                                    "type": "localNet",
                                                    "value": "192.168.0.0/16"
                                                },
                                                {
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/2",
                                                        "name": "Blogging"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/133",
                                                        "name": "Battle.net"
                                                    }
                                                }
                                            ],
                                            "perClientBandwidthLimits": {
                                                "settings": "custom",
                                                "bandwidthLimits": {
                                                    "limitUp": 1000000,
                                                    "limitDown": 1000000
                                                }
                                            },
                                            "dscpTagValue": null,
                                            "pcpTagValue": null
                                        }
                                    ],
                                    "l3FirewallRules": [
                                        {
                                            "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                            "policy": "allow",
                                            "protocol": "tcp",
                                            "destPort": 443,
                                            "destCidr": "192.168.1.0/24"
                                        }
                                    ],
                                    "l7FirewallRules": [
                                        [
                                            {
                                                "policy": "deny",
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/67",
                                                    "name": "Xbox LIVE"
                                                }
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "port",
                                                "value": "23"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "ipRange",
                                                "value": "10.11.12.00/24"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "ipRange",
                                                "value": "10.11.12.00/24:5555"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "blacklistedCountries",
                                                "value": [
                                                    "AX",
                                                    "CA"
                                                ]
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "whitelistedCountries",
                                                "value": [
                                                    "US"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "contentFiltering": {
                                    "allowedUrlPatterns": {
                                        "settings": "network default",
                                        "patterns": []
                                    },
                                    "blockedUrlPatterns": {
                                        "settings": "append",
                                        "patterns": [
                                            "http://www.example.com",
                                            "http://www.betting.com"
                                        ]
                                    },
                                    "blockedUrlCategories": {
                                        "settings": "override",
                                        "categories": [
                                            "meraki:contentFiltering/category/1",
                                            "meraki:contentFiltering/category/7"
                                        ]
                                    }
                                },
                                "splashAuthSettings": "bypass",
                                "vlanTagging": {
                                    "settings": "custom",
                                    "vlanId": "1"
                                },
                                "bonjourForwarding": {
                                    "settings": "custom",
                                    "rules": [
                                        {
                                            "description": "A simple bonjour rule",
                                            "vlanId": "1",
                                            "services": [
                                                "All Services"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Create a group policy",
                "tags": [
                    "networks",
                    "configure",
                    "groupPolicies"
                ]
            }
        },
        "/networks/{networkId}/groupPolicies/{groupPolicyId}": {
            "get": {
                "description": "Display a group policy",
                "operationId": "getNetworkGroupPolicy",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "groupPolicyId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "name": "No video streaming",
                                "groupPolicyId": "101",
                                "scheduling": {
                                    "enabled": true,
                                    "monday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "tuesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "wednesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "thursday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "friday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "saturday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    },
                                    "sunday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    }
                                },
                                "bandwidth": {
                                    "settings": "custom",
                                    "bandwidthLimits": {
                                        "limitUp": 1000000,
                                        "limitDown": 1000000
                                    }
                                },
                                "firewallAndTrafficShaping": {
                                    "settings": "custom",
                                    "trafficShapingRules": [
                                        {
                                            "definitions": [
                                                {
                                                    "type": "host",
                                                    "value": "google.com"
                                                },
                                                {
                                                    "type": "port",
                                                    "value": "9090"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "192.1.0.0"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "192.1.0.0/16"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "10.1.0.0/16:80"
                                                },
                                                {
                                                    "type": "localNet",
                                                    "value": "192.168.0.0/16"
                                                },
                                                {
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/2",
                                                        "name": "Blogging"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/133",
                                                        "name": "Battle.net"
                                                    }
                                                }
                                            ],
                                            "perClientBandwidthLimits": {
                                                "settings": "custom",
                                                "bandwidthLimits": {
                                                    "limitUp": 1000000,
                                                    "limitDown": 1000000
                                                }
                                            },
                                            "dscpTagValue": null,
                                            "pcpTagValue": null
                                        }
                                    ],
                                    "l3FirewallRules": [
                                        {
                                            "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                            "policy": "allow",
                                            "protocol": "tcp",
                                            "destPort": 443,
                                            "destCidr": "192.168.1.0/24"
                                        }
                                    ],
                                    "l7FirewallRules": [
                                        [
                                            {
                                                "policy": "deny",
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/67",
                                                    "name": "Xbox LIVE"
                                                }
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "port",
                                                "value": "23"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "ipRange",
                                                "value": "10.11.12.00/24"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "ipRange",
                                                "value": "10.11.12.00/24:5555"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "blacklistedCountries",
                                                "value": [
                                                    "AX",
                                                    "CA"
                                                ]
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "whitelistedCountries",
                                                "value": [
                                                    "US"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "contentFiltering": {
                                    "allowedUrlPatterns": {
                                        "settings": "network default",
                                        "patterns": []
                                    },
                                    "blockedUrlPatterns": {
                                        "settings": "append",
                                        "patterns": [
                                            "http://www.example.com",
                                            "http://www.betting.com"
                                        ]
                                    },
                                    "blockedUrlCategories": {
                                        "settings": "override",
                                        "categories": [
                                            "meraki:contentFiltering/category/1",
                                            "meraki:contentFiltering/category/7"
                                        ]
                                    }
                                },
                                "splashAuthSettings": "bypass",
                                "vlanTagging": {
                                    "settings": "custom",
                                    "vlanId": "1"
                                },
                                "bonjourForwarding": {
                                    "settings": "custom",
                                    "rules": [
                                        {
                                            "description": "A simple bonjour rule",
                                            "vlanId": "1",
                                            "services": [
                                                "All Services"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Display a group policy",
                "tags": [
                    "networks",
                    "configure",
                    "groupPolicies"
                ]
            },
            "put": {
                "description": "Update a group policy",
                "operationId": "updateNetworkGroupPolicy",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "groupPolicyId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkGroupPolicy",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name for your group policy."
                                },
                                "scheduling": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed."
                                        },
                                        "monday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Monday."
                                        },
                                        "tuesday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Tuesday."
                                        },
                                        "wednesday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Wednesday."
                                        },
                                        "thursday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Thursday."
                                        },
                                        "friday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Friday."
                                        },
                                        "saturday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Saturday."
                                        },
                                        "sunday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Sunday."
                                        }
                                    },
                                    "description": "    The schedule for the group policy. Schedules are applied to days of the week.\n"
                                },
                                "bandwidth": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "string",
                                            "enum": [
                                                "network default",
                                                "ignore",
                                                "custom"
                                            ],
                                            "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'."
                                        },
                                        "bandwidthLimits": {
                                            "type": "object",
                                            "properties": {
                                                "limitUp": {
                                                    "type": "integer",
                                                    "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                },
                                                "limitDown": {
                                                    "type": "integer",
                                                    "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                }
                                            },
                                            "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'."
                                        }
                                    },
                                    "description": "    The bandwidth settings for clients bound to your group policy.\n"
                                },
                                "firewallAndTrafficShaping": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "string",
                                            "enum": [
                                                "network default",
                                                "ignore",
                                                "custom"
                                            ],
                                            "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'."
                                        },
                                        "trafficShapingRules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "definitions": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "application",
                                                                        "applicationCategory",
                                                                        "host",
                                                                        "port",
                                                                        "ipRange",
                                                                        "localNet"
                                                                    ],
                                                                    "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    operation).\n"
                                                                }
                                                            },
                                                            "required": [
                                                                "type",
                                                                "value"
                                                            ]
                                                        },
                                                        "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                                                    },
                                                    "perClientBandwidthLimits": {
                                                        "type": "object",
                                                        "properties": {
                                                            "settings": {
                                                                "type": "string",
                                                                "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                                                            },
                                                            "bandwidthLimits": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "limitUp": {
                                                                        "type": "integer",
                                                                        "description": "The maximum upload limit (integer, in Kbps)."
                                                                    },
                                                                    "limitDown": {
                                                                        "type": "integer",
                                                                        "description": "The maximum download limit (integer, in Kbps)."
                                                                    }
                                                                },
                                                                "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                                                            }
                                                        },
                                                        "description": "    An object describing the bandwidth settings for your rule.\n"
                                                    },
                                                    "dscpTagValue": {
                                                        "type": "integer",
                                                        "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions operation.\n"
                                                    },
                                                    "pcpTagValue": {
                                                        "type": "integer",
                                                        "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                                                    },
                                                    "priority": {
                                                        "type": "string",
                                                        "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                                                    }
                                                },
                                                "required": [
                                                    "definitions"
                                                ]
                                            },
                                            "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                                        },
                                        "l3FirewallRules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "comment": {
                                                        "type": "string",
                                                        "description": "Description of the rule (optional)"
                                                    },
                                                    "policy": {
                                                        "type": "string",
                                                        "description": "'allow' or 'deny' traffic specified by this rule"
                                                    },
                                                    "protocol": {
                                                        "type": "string",
                                                        "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                                    },
                                                    "destPort": {
                                                        "type": "string",
                                                        "description": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'"
                                                    },
                                                    "destCidr": {
                                                        "type": "string",
                                                        "description": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'."
                                                    }
                                                },
                                                "required": [
                                                    "policy",
                                                    "protocol",
                                                    "destCidr"
                                                ]
                                            },
                                            "description": "An ordered array of the L3 firewall rules"
                                        },
                                        "l7FirewallRules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "policy": {
                                                        "type": "string",
                                                        "enum": [
                                                            "deny"
                                                        ],
                                                        "description": "The policy applied to matching traffic. Must be 'deny'."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "application",
                                                            "applicationCategory",
                                                            "host",
                                                            "port",
                                                            "ipRange"
                                                        ],
                                                        "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application."
                                                    }
                                                }
                                            },
                                            "description": "An ordered array of L7 firewall rules"
                                        }
                                    },
                                    "description": "    The firewall and traffic shaping rules and settings for your policy.\n"
                                },
                                "contentFiltering": {
                                    "type": "object",
                                    "properties": {
                                        "allowedUrlPatterns": {
                                            "type": "object",
                                            "properties": {
                                                "settings": {
                                                    "type": "string",
                                                    "enum": [
                                                        "network default",
                                                        "append",
                                                        "override"
                                                    ],
                                                    "description": "How URL patterns are applied. Can be 'network default', 'append' or 'override'."
                                                },
                                                "patterns": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "A whitelist of URL patterns to allow"
                                                }
                                            },
                                            "description": "Settings for whitelisted URL patterns"
                                        },
                                        "blockedUrlPatterns": {
                                            "type": "object",
                                            "properties": {
                                                "settings": {
                                                    "type": "string",
                                                    "enum": [
                                                        "network default",
                                                        "append",
                                                        "override"
                                                    ],
                                                    "description": "How URL patterns are applied. Can be 'network default', 'append' or 'override'."
                                                },
                                                "patterns": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "A blacklist of URL patterns to block"
                                                }
                                            },
                                            "description": "Settings for blacklisted URL patterns"
                                        },
                                        "blockedUrlCategories": {
                                            "type": "object",
                                            "properties": {
                                                "settings": {
                                                    "type": "string",
                                                    "enum": [
                                                        "network default",
                                                        "append",
                                                        "override"
                                                    ],
                                                    "description": "How URL categories are applied. Can be 'network default', 'append' or 'override'."
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "A list of URL categories to block"
                                                }
                                            },
                                            "description": "Settings for blacklisted URL categories"
                                        }
                                    },
                                    "description": "The content filtering settings for your group policy"
                                },
                                "splashAuthSettings": {
                                    "type": "string",
                                    "enum": [
                                        "network default",
                                        "bypass"
                                    ],
                                    "description": "Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration."
                                },
                                "vlanTagging": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "string",
                                            "enum": [
                                                "network default",
                                                "ignore",
                                                "custom"
                                            ],
                                            "description": "How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'."
                                        },
                                        "vlanId": {
                                            "type": "string",
                                            "description": "The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'."
                                        }
                                    },
                                    "description": "The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration."
                                },
                                "bonjourForwarding": {
                                    "type": "object",
                                    "properties": {
                                        "settings": {
                                            "type": "string",
                                            "enum": [
                                                "network default",
                                                "ignore",
                                                "custom"
                                            ],
                                            "description": "How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'."
                                        },
                                        "rules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "description": {
                                                        "type": "string",
                                                        "description": "A description for your Bonjour forwarding rule. Optional."
                                                    },
                                                    "vlanId": {
                                                        "type": "string",
                                                        "description": "The ID of the service VLAN. Required."
                                                    },
                                                    "services": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "All Services",
                                                                "AirPlay",
                                                                "AFP",
                                                                "BitTorrent",
                                                                "FTP",
                                                                "iChat",
                                                                "iTunes",
                                                                "Printers",
                                                                "Samba",
                                                                "Scanners",
                                                                "SSH"
                                                            ]
                                                        },
                                                        "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'"
                                                    }
                                                },
                                                "required": [
                                                    "vlanId",
                                                    "services"
                                                ]
                                            },
                                            "description": "A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified."
                                        }
                                    },
                                    "description": "The Bonjour settings for your group policy. Only valid if your network has a wireless configuration."
                                }
                            },
                            "example": {
                                "name": "No video streaming",
                                "scheduling": {
                                    "enabled": true,
                                    "monday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "tuesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "wednesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "thursday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "friday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "saturday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    },
                                    "sunday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    }
                                },
                                "bandwidth": {
                                    "settings": "custom",
                                    "bandwidthLimits": {
                                        "limitUp": 1000000,
                                        "limitDown": 1000000
                                    }
                                },
                                "firewallAndTrafficShaping": {
                                    "settings": "custom",
                                    "trafficShapingRules": [
                                        {
                                            "definitions": [
                                                {
                                                    "type": "host",
                                                    "value": "google.com"
                                                },
                                                {
                                                    "type": "port",
                                                    "value": "9090"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "192.1.0.0"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "192.1.0.0/16"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "10.1.0.0/16:80"
                                                },
                                                {
                                                    "type": "localNet",
                                                    "value": "192.168.0.0/16"
                                                },
                                                {
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/2",
                                                        "name": "Blogging"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/133",
                                                        "name": "Battle.net"
                                                    }
                                                }
                                            ],
                                            "perClientBandwidthLimits": {
                                                "settings": "custom",
                                                "bandwidthLimits": {
                                                    "limitUp": 1000000,
                                                    "limitDown": 1000000
                                                }
                                            },
                                            "dscpTagValue": null,
                                            "pcpTagValue": null
                                        }
                                    ],
                                    "l3FirewallRules": [
                                        {
                                            "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                            "policy": "allow",
                                            "protocol": "tcp",
                                            "destPort": 443,
                                            "destCidr": "192.168.1.0/24"
                                        }
                                    ],
                                    "l7FirewallRules": [
                                        [
                                            {
                                                "policy": "deny",
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/67",
                                                    "name": "Xbox LIVE"
                                                }
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "port",
                                                "value": "23"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "ipRange",
                                                "value": "10.11.12.00/24"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "ipRange",
                                                "value": "10.11.12.00/24:5555"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "blacklistedCountries",
                                                "value": [
                                                    "AX",
                                                    "CA"
                                                ]
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "whitelistedCountries",
                                                "value": [
                                                    "US"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "contentFiltering": {
                                    "allowedUrlPatterns": {
                                        "settings": "network default",
                                        "patterns": []
                                    },
                                    "blockedUrlPatterns": {
                                        "settings": "append",
                                        "patterns": [
                                            "http://www.example.com",
                                            "http://www.betting.com"
                                        ]
                                    },
                                    "blockedUrlCategories": {
                                        "settings": "override",
                                        "categories": [
                                            "meraki:contentFiltering/category/1",
                                            "meraki:contentFiltering/category/7"
                                        ]
                                    }
                                },
                                "splashAuthSettings": "bypass",
                                "vlanTagging": {
                                    "settings": "custom",
                                    "vlanId": "1"
                                },
                                "bonjourForwarding": {
                                    "settings": "custom",
                                    "rules": [
                                        {
                                            "description": "A simple bonjour rule",
                                            "vlanId": "1",
                                            "services": [
                                                "All Services"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "name": "No video streaming",
                                "groupPolicyId": "101",
                                "scheduling": {
                                    "enabled": true,
                                    "monday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "tuesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "wednesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "thursday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "friday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "saturday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    },
                                    "sunday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    }
                                },
                                "bandwidth": {
                                    "settings": "custom",
                                    "bandwidthLimits": {
                                        "limitUp": 1000000,
                                        "limitDown": 1000000
                                    }
                                },
                                "firewallAndTrafficShaping": {
                                    "settings": "custom",
                                    "trafficShapingRules": [
                                        {
                                            "definitions": [
                                                {
                                                    "type": "host",
                                                    "value": "google.com"
                                                },
                                                {
                                                    "type": "port",
                                                    "value": "9090"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "192.1.0.0"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "192.1.0.0/16"
                                                },
                                                {
                                                    "type": "ipRange",
                                                    "value": "10.1.0.0/16:80"
                                                },
                                                {
                                                    "type": "localNet",
                                                    "value": "192.168.0.0/16"
                                                },
                                                {
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/2",
                                                        "name": "Blogging"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/133",
                                                        "name": "Battle.net"
                                                    }
                                                }
                                            ],
                                            "perClientBandwidthLimits": {
                                                "settings": "custom",
                                                "bandwidthLimits": {
                                                    "limitUp": 1000000,
                                                    "limitDown": 1000000
                                                }
                                            },
                                            "dscpTagValue": null,
                                            "pcpTagValue": null
                                        }
                                    ],
                                    "l3FirewallRules": [
                                        {
                                            "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                            "policy": "allow",
                                            "protocol": "tcp",
                                            "destPort": 443,
                                            "destCidr": "192.168.1.0/24"
                                        }
                                    ],
                                    "l7FirewallRules": [
                                        [
                                            {
                                                "policy": "deny",
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/67",
                                                    "name": "Xbox LIVE"
                                                }
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "port",
                                                "value": "23"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "ipRange",
                                                "value": "10.11.12.00/24"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "ipRange",
                                                "value": "10.11.12.00/24:5555"
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "blacklistedCountries",
                                                "value": [
                                                    "AX",
                                                    "CA"
                                                ]
                                            },
                                            {
                                                "policy": "deny",
                                                "type": "whitelistedCountries",
                                                "value": [
                                                    "US"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "contentFiltering": {
                                    "allowedUrlPatterns": {
                                        "settings": "network default",
                                        "patterns": []
                                    },
                                    "blockedUrlPatterns": {
                                        "settings": "append",
                                        "patterns": [
                                            "http://www.example.com",
                                            "http://www.betting.com"
                                        ]
                                    },
                                    "blockedUrlCategories": {
                                        "settings": "override",
                                        "categories": [
                                            "meraki:contentFiltering/category/1",
                                            "meraki:contentFiltering/category/7"
                                        ]
                                    }
                                },
                                "splashAuthSettings": "bypass",
                                "vlanTagging": {
                                    "settings": "custom",
                                    "vlanId": "1"
                                },
                                "bonjourForwarding": {
                                    "settings": "custom",
                                    "rules": [
                                        {
                                            "description": "A simple bonjour rule",
                                            "vlanId": "1",
                                            "services": [
                                                "All Services"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Update a group policy",
                "tags": [
                    "networks",
                    "configure",
                    "groupPolicies"
                ]
            },
            "delete": {
                "description": "Delete a group policy",
                "operationId": "deleteNetworkGroupPolicy",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "groupPolicyId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a group policy",
                "tags": [
                    "networks",
                    "configure",
                    "groupPolicies"
                ]
            }
        },
        "/networks/{networkId}/httpServers": {
            "get": {
                "description": "List the HTTP servers for a network",
                "operationId": "getNetworkHttpServers",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "ABC123",
                                    "networkId": "N_123",
                                    "name": "My HTTP server",
                                    "url": "https://www.example.com/webhooks",
                                    "sharedSecret": "foobar"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the HTTP servers for a network",
                "tags": [
                    "networks",
                    "configure",
                    "httpServers"
                ]
            },
            "post": {
                "description": "Add an HTTP server to a network",
                "operationId": "createNetworkHttpServer",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkHttpServer",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "A name for easy reference to the HTTP server"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "The URL of the HTTP server"
                                },
                                "sharedSecret": {
                                    "type": "string",
                                    "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki."
                                }
                            },
                            "example": {
                                "name": "My HTTP server",
                                "url": "https://www.example.com/webhooks",
                                "sharedSecret": "foobar"
                            },
                            "required": [
                                "name",
                                "url"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "ABC123",
                                "networkId": "N_123",
                                "name": "My HTTP server",
                                "url": "https://www.example.com/webhooks",
                                "sharedSecret": "foobar"
                            }
                        }
                    }
                },
                "summary": "Add an HTTP server to a network",
                "tags": [
                    "networks",
                    "configure",
                    "httpServers"
                ]
            }
        },
        "/networks/{networkId}/httpServers/webhookTests": {
            "post": {
                "description": "Send a test webhook for a network",
                "operationId": "createNetworkHttpServersWebhookTest",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkHttpServersWebhookTest",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "description": "The URL where the test webhook will be sent"
                                }
                            },
                            "example": {
                                "url": "https://www.example.com/path"
                            },
                            "required": [
                                "url"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "url": "https://www.example.com/path",
                                "status": "enqueued"
                            }
                        }
                    }
                },
                "summary": "Send a test webhook for a network",
                "tags": [
                    "networks",
                    "configure",
                    "httpServers",
                    "webhookTests"
                ]
            }
        },
        "/networks/{networkId}/httpServers/webhookTests/{id}": {
            "get": {
                "description": "Return the status of a webhook test for a network",
                "operationId": "getNetworkHttpServersWebhookTest",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "url": "https://www.example.com/path",
                                "status": "delivered"
                            }
                        }
                    }
                },
                "summary": "Return the status of a webhook test for a network",
                "tags": [
                    "networks",
                    "configure",
                    "httpServers",
                    "webhookTests"
                ]
            }
        },
        "/networks/{networkId}/httpServers/{id}": {
            "get": {
                "description": "Return an HTTP server for a network",
                "operationId": "getNetworkHttpServer",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "ABC123",
                                "networkId": "N_123",
                                "name": "My HTTP server",
                                "url": "https://www.example.com/webhooks",
                                "sharedSecret": "foobar"
                            }
                        }
                    }
                },
                "summary": "Return an HTTP server for a network",
                "tags": [
                    "networks",
                    "configure",
                    "httpServers"
                ]
            },
            "put": {
                "description": "Update an HTTP server",
                "operationId": "updateNetworkHttpServer",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkHttpServer",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "A name for easy reference to the HTTP server"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "The URL of the HTTP server"
                                },
                                "sharedSecret": {
                                    "type": "string",
                                    "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki."
                                }
                            },
                            "example": {
                                "name": "My HTTP server",
                                "url": "https://www.example.com/webhooks",
                                "sharedSecret": "foobar"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "ABC123",
                                "networkId": "N_123",
                                "name": "My HTTP server",
                                "url": "https://www.example.com/webhooks",
                                "sharedSecret": "foobar"
                            }
                        }
                    }
                },
                "summary": "Update an HTTP server",
                "tags": [
                    "networks",
                    "configure",
                    "httpServers"
                ]
            },
            "delete": {
                "description": "Delete an HTTP server from a network",
                "operationId": "deleteNetworkHttpServer",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete an HTTP server from a network",
                "tags": [
                    "networks",
                    "configure",
                    "httpServers"
                ]
            }
        },
        "/networks/{networkId}/l7FirewallRules": {
            "get": {
                "description": "List the MX L7 firewall rules for an MX network",
                "operationId": "getNetworkL7FirewallRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "policy": "deny",
                                        "type": "application",
                                        "value": {
                                            "id": "meraki:layer7/application/67",
                                            "name": "Xbox LIVE"
                                        }
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "applicationCategory",
                                        "value": {
                                            "id": "meraki:layer7/category/2",
                                            "name": "Blogging"
                                        }
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "host",
                                        "value": "google.com"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "port",
                                        "value": "23"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "ipRange",
                                        "value": "10.11.12.00/24"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "ipRange",
                                        "value": "10.11.12.00/24:5555"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "blacklistedCountries",
                                        "value": [
                                            "AX",
                                            "CA"
                                        ]
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "whitelistedCountries",
                                        "value": [
                                            "US"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "List the MX L7 firewall rules for an MX network",
                "tags": [
                    "networks",
                    "configure",
                    "l7FirewallRules"
                ]
            },
            "put": {
                "description": "Update the MX L7 firewall rules for an MX network",
                "operationId": "updateNetworkL7FirewallRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkL7FirewallRules",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "policy": {
                                                "type": "string",
                                                "enum": [
                                                    "deny"
                                                ],
                                                "description": "'Deny' traffic specified by this rule"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "application",
                                                    "applicationCategory",
                                                    "host",
                                                    "port",
                                                    "ipRange"
                                                ],
                                                "description": "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. See sample request. The application categories and application ids can be retrieved from the the 'MX L7 application categories' operation. The countries follow the two-letter ISO 3166-1 alpha-2 format."
                                            }
                                        }
                                    },
                                    "description": "An ordered array of the MX L7 firewall rules"
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "policy": "deny",
                                        "type": "application",
                                        "value": {
                                            "id": "meraki:layer7/application/67",
                                            "name": "Xbox LIVE"
                                        }
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "applicationCategory",
                                        "value": {
                                            "id": "meraki:layer7/category/2",
                                            "name": "Blogging"
                                        }
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "host",
                                        "value": "google.com"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "port",
                                        "value": "23"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "ipRange",
                                        "value": "10.11.12.00/24"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "ipRange",
                                        "value": "10.11.12.00/24:5555"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "blacklistedCountries",
                                        "value": [
                                            "AX",
                                            "CA"
                                        ]
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "whitelistedCountries",
                                        "value": [
                                            "US"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "policy": "deny",
                                        "type": "application",
                                        "value": {
                                            "id": "meraki:layer7/application/67",
                                            "name": "Xbox LIVE"
                                        }
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "applicationCategory",
                                        "value": {
                                            "id": "meraki:layer7/category/2",
                                            "name": "Blogging"
                                        }
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "host",
                                        "value": "google.com"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "port",
                                        "value": "23"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "ipRange",
                                        "value": "10.11.12.00/24"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "ipRange",
                                        "value": "10.11.12.00/24:5555"
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "blacklistedCountries",
                                        "value": [
                                            "AX",
                                            "CA"
                                        ]
                                    },
                                    {
                                        "policy": "deny",
                                        "type": "whitelistedCountries",
                                        "value": [
                                            "US"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the MX L7 firewall rules for an MX network",
                "tags": [
                    "networks",
                    "configure",
                    "l7FirewallRules"
                ]
            }
        },
        "/networks/{networkId}/l7FirewallRules/applicationCategories": {
            "get": {
                "description": "Return the L7 firewall application categories and their associated applications for an MX network",
                "operationId": "getNetworkL7FirewallRulesApplicationCategories",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "applicationCategories": [
                                        {
                                            "id": "meraki:layer7/category/24",
                                            "name": "Advertising",
                                            "applications": [
                                                {
                                                    "id": "meraki:layer7/application/5",
                                                    "name": "Advertising.com"
                                                },
                                                {
                                                    "id": "meraki:layer7/application/0",
                                                    "name": "AppNexus"
                                                },
                                                {
                                                    "id": "meraki:layer7/application/1",
                                                    "name": "Brightroll"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the L7 firewall application categories and their associated applications for an MX network",
                "tags": [
                    "networks",
                    "configure",
                    "l7FirewallRules",
                    "applicationCategories"
                ]
            }
        },
        "/networks/{networkId}/merakiAuthUsers": {
            "get": {
                "description": "List the splash or RADIUS users configured under Meraki Authentication for a network",
                "operationId": "getNetworkMerakiAuthUsers",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "aGlAaGkuY29t",
                                    "email": "miles@meraki.com",
                                    "name": "Miles Meraki",
                                    "createdAt": "2018-02-11T00:00:00.090210Z",
                                    "accountType": "Guest",
                                    "authorizations": [
                                        {
                                            "authorizedZone": "Store WiFi",
                                            "expiresAt": "2018-03-13T00:00:00.090210Z",
                                            "authorizedByName": "Miles Meraki",
                                            "authorizedByEmail": "miles@meraki.com"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "List the splash or RADIUS users configured under Meraki Authentication for a network",
                "tags": [
                    "networks",
                    "configure",
                    "merakiAuthUsers"
                ]
            }
        },
        "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}": {
            "get": {
                "description": "Return the Meraki Auth splash or RADIUS user",
                "operationId": "getNetworkMerakiAuthUser",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "merakiAuthUserId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "aGlAaGkuY29t",
                                "email": "miles@meraki.com",
                                "name": "Miles Meraki",
                                "createdAt": "2018-02-11T00:00:00.090210Z",
                                "accountType": "Guest",
                                "authorizations": [
                                    {
                                        "authorizedZone": "Store WiFi",
                                        "expiresAt": "2018-03-13T00:00:00.090210Z",
                                        "authorizedByName": "Miles Meraki",
                                        "authorizedByEmail": "miles@meraki.com"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the Meraki Auth splash or RADIUS user",
                "tags": [
                    "networks",
                    "configure",
                    "merakiAuthUsers"
                ]
            }
        },
        "/networks/{networkId}/netflowSettings": {
            "get": {
                "description": "Return the NetFlow traffic reporting settings for a network",
                "operationId": "getNetworkNetflowSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "reportingEnabled": true,
                                "collectorIp": "1.2.3.4",
                                "collectorPort": 443
                            }
                        }
                    }
                },
                "summary": "Return the NetFlow traffic reporting settings for a network",
                "tags": [
                    "networks",
                    "configure",
                    "netflowSettings"
                ]
            },
            "put": {
                "description": "Update the NetFlow traffic reporting settings for a network",
                "operationId": "updateNetworkNetflowSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkNetflowSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "reportingEnabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false)."
                                },
                                "collectorIp": {
                                    "type": "string",
                                    "description": "The IPv4 address of the NetFlow collector."
                                },
                                "collectorPort": {
                                    "type": "integer",
                                    "description": "The port that the NetFlow collector will be listening on."
                                }
                            },
                            "example": {
                                "reportingEnabled": true,
                                "collectorIp": "1.2.3.4",
                                "collectorPort": 443
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "reportingEnabled": true,
                                "collectorIp": "1.2.3.4",
                                "collectorPort": 443
                            }
                        }
                    }
                },
                "summary": "Update the NetFlow traffic reporting settings for a network",
                "tags": [
                    "networks",
                    "configure",
                    "netflowSettings"
                ]
            }
        },
        "/networks/{networkId}/pii/piiKeys": {
            "get": {
                "description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/piiKeys\n```",
                "operationId": "getNetworkPiiPiiKeys",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query",
                        "description": "The username of a Systems Manager user"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "description": "The email of a network user account or a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "mac",
                        "in": "query",
                        "description": "The MAC of a network client device or a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "serial",
                        "in": "query",
                        "description": "The serial of a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "imei",
                        "in": "query",
                        "description": "The IMEI of a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "bluetoothMac",
                        "in": "query",
                        "description": "The MAC of a Bluetooth client"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "N_1234": {
                                    "macs": [
                                        "00:77:00:77:00:77"
                                    ],
                                    "emails": [
                                        "fake@example.com"
                                    ],
                                    "usernames": [
                                        "fakename"
                                    ],
                                    "serials": [
                                        "abcd1234"
                                    ],
                                    "imeis": [
                                        "990000862471854"
                                    ],
                                    "bluetoothMacs": [
                                        "00:77:00:77:00:77"
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.",
                "tags": [
                    "networks",
                    "configure",
                    "pii",
                    "piiKeys"
                ]
            }
        },
        "/networks/{networkId}/pii/requests": {
            "get": {
                "description": "List the PII requests for this network or organization\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```",
                "operationId": "getNetworkPiiRequests",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1234",
                                    "organizationWide": false,
                                    "networkId": "N_1234",
                                    "type": "delete",
                                    "mac": "00:77:00:77:00:77",
                                    "datasets": "['usage', 'events']",
                                    "status": "Completed",
                                    "createdAt": 1524692227,
                                    "completedAt": 1524702227
                                }
                            ]
                        }
                    }
                },
                "summary": "List the PII requests for this network or organization",
                "tags": [
                    "networks",
                    "configure",
                    "pii",
                    "requests"
                ]
            },
            "post": {
                "description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```",
                "operationId": "createNetworkPiiRequest",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkPiiRequest",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "delete",
                                        "restrict processing"
                                    ],
                                    "description": "One of \"delete\" or \"restrict processing\""
                                },
                                "datasets": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "The datasets related to the provided key that should be deleted. Only applies to \"delete\" requests. The value \"all\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)"
                                },
                                "username": {
                                    "type": "string",
                                    "description": "The username of a network log in. Only applies to \"delete\" requests."
                                },
                                "email": {
                                    "type": "string",
                                    "description": "The email of a network user account. Only applies to \"delete\" requests."
                                },
                                "mac": {
                                    "type": "string",
                                    "description": "The MAC of a network client device. Applies to both \"restrict processing\" and \"delete\" requests."
                                },
                                "smDeviceId": {
                                    "type": "string",
                                    "description": "The sm_device_id of a Systems Manager device. The only way to \"restrict processing\" or \"delete\" a Systems Manager device. Must include \"device\" in the dataset for a \"delete\" request to destroy the device."
                                },
                                "smUserId": {
                                    "type": "string",
                                    "description": "The sm_user_id of a Systems Manager user. The only way to \"restrict processing\" or \"delete\" a Systems Manager user. Must include \"user\" in the dataset for a \"delete\" request to destroy the user."
                                }
                            },
                            "example": {
                                "type": "delete",
                                "datasets": [
                                    "usage",
                                    "events"
                                ],
                                "mac": "00:77:00:77:00:77"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "organizationWide": false,
                                "networkId": "N_1234",
                                "type": "delete",
                                "mac": "00:77:00:77:00:77",
                                "datasets": "['usage', 'events']",
                                "status": "Not visible in Dashboard; database deletion in process",
                                "createdAt": 1524692227,
                                "completedAt": null
                            }
                        }
                    }
                },
                "summary": "Submit a new delete or restrict processing PII request",
                "tags": [
                    "networks",
                    "configure",
                    "pii",
                    "requests"
                ]
            }
        },
        "/networks/{networkId}/pii/requests/{requestId}": {
            "get": {
                "description": "Return a PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```",
                "operationId": "getNetworkPiiRequest",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "organizationWide": false,
                                "networkId": "N_1234",
                                "type": "delete",
                                "mac": "00:77:00:77:00:77",
                                "datasets": "['usage', 'events']",
                                "status": "Completed",
                                "createdAt": 1524692227,
                                "completedAt": 1524702227
                            }
                        }
                    }
                },
                "summary": "Return a PII request",
                "tags": [
                    "networks",
                    "configure",
                    "pii",
                    "requests"
                ]
            },
            "delete": {
                "description": "Delete a restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```",
                "operationId": "deleteNetworkPiiRequest",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a restrict processing PII request",
                "tags": [
                    "networks",
                    "configure",
                    "pii",
                    "requests"
                ]
            }
        },
        "/networks/{networkId}/pii/smDevicesForKey": {
            "get": {
                "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API operations to retrieve device details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smDevicesForKey\n```",
                "operationId": "getNetworkPiiSmDevicesForKey",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query",
                        "description": "The username of a Systems Manager user"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "description": "The email of a network user account or a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "mac",
                        "in": "query",
                        "description": "The MAC of a network client device or a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "serial",
                        "in": "query",
                        "description": "The serial of a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "imei",
                        "in": "query",
                        "description": "The IMEI of a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "bluetoothMac",
                        "in": "query",
                        "description": "The MAC of a Bluetooth client"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "N_1234": [
                                    "1099541095293",
                                    "8348382288234"
                                ]
                            }
                        }
                    }
                },
                "summary": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API operations to retrieve device details. Exactly one identifier will be accepted.",
                "tags": [
                    "networks",
                    "configure",
                    "pii",
                    "smDevicesForKey"
                ]
            }
        },
        "/networks/{networkId}/pii/smOwnersForKey": {
            "get": {
                "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API operations to retrieve owner details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smOwnersForKey\n```",
                "operationId": "getNetworkPiiSmOwnersForKey",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query",
                        "description": "The username of a Systems Manager user"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "description": "The email of a network user account or a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "mac",
                        "in": "query",
                        "description": "The MAC of a network client device or a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "serial",
                        "in": "query",
                        "description": "The serial of a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "imei",
                        "in": "query",
                        "description": "The IMEI of a Systems Manager device"
                    },
                    {
                        "type": "string",
                        "name": "bluetoothMac",
                        "in": "query",
                        "description": "The MAC of a Bluetooth client"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "N_1234": [
                                    "1099541095293"
                                ]
                            }
                        }
                    }
                },
                "summary": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API operations to retrieve owner details. Exactly one identifier will be accepted.",
                "tags": [
                    "networks",
                    "configure",
                    "pii",
                    "smOwnersForKey"
                ]
            }
        },
        "/networks/{networkId}/settings": {
            "get": {
                "description": "Return the settings for a network",
                "operationId": "getNetworkSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "localStatusPageEnabled": true,
                                "remoteStatusPageEnabled": true
                            }
                        }
                    }
                },
                "summary": "Return the settings for a network",
                "tags": [
                    "networks",
                    "configure",
                    "settings"
                ]
            },
            "put": {
                "description": "Update the settings for a network",
                "operationId": "updateNetworkSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "localStatusPageEnabled": {
                                    "type": "boolean",
                                    "description": "Enables / disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                                },
                                "remoteStatusPageEnabled": {
                                    "type": "boolean",
                                    "description": "Enables / disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set to true"
                                }
                            },
                            "example": {
                                "localStatusPageEnabled": true,
                                "remoteStatusPageEnabled": true
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "localStatusPageEnabled": true,
                                "remoteStatusPageEnabled": true
                            }
                        }
                    }
                },
                "summary": "Update the settings for a network",
                "tags": [
                    "networks",
                    "configure",
                    "settings"
                ]
            }
        },
        "/networks/{networkId}/siteToSiteVpn": {
            "get": {
                "description": "Return the site-to-site VPN settings of a network. Only valid for MX networks.",
                "operationId": "getNetworkSiteToSiteVpn",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mode": "spoke",
                                "hubs": [
                                    {
                                        "hubId": "N_4901849",
                                        "useDefaultRoute": true
                                    },
                                    {
                                        "hubId": "N_1892489",
                                        "useDefaultRoute": false
                                    }
                                ],
                                "subnets": [
                                    {
                                        "localSubnet": "192.168.1.0/24",
                                        "useVpn": true
                                    },
                                    {
                                        "localSubnet": "192.168.128.0/24",
                                        "useVpn": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the site-to-site VPN settings of a network. Only valid for MX networks.",
                "tags": [
                    "networks",
                    "configure",
                    "siteToSiteVpn"
                ]
            },
            "put": {
                "description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
                "operationId": "updateNetworkSiteToSiteVpn",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSiteToSiteVpn",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mode": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "spoke",
                                        "hub"
                                    ],
                                    "description": "The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'"
                                },
                                "hubs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "hubId": {
                                                "type": "string",
                                                "description": "The network ID of the hub."
                                            },
                                            "useDefaultRoute": {
                                                "type": "boolean",
                                                "description": "Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub."
                                            }
                                        },
                                        "required": [
                                            "hubId"
                                        ]
                                    },
                                    "description": "The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required."
                                },
                                "subnets": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "localSubnet": {
                                                "type": "string",
                                                "description": "The CIDR notation subnet used within the VPN"
                                            },
                                            "useVpn": {
                                                "type": "boolean",
                                                "description": "Indicates the presence of the subnet in the VPN"
                                            }
                                        },
                                        "required": [
                                            "localSubnet"
                                        ]
                                    },
                                    "description": "The list of subnets and their VPN presence."
                                }
                            },
                            "example": {
                                "mode": "spoke",
                                "hubs": [
                                    {
                                        "hubId": "N_4901849",
                                        "useDefaultRoute": true
                                    },
                                    {
                                        "hubId": "N_1892489",
                                        "useDefaultRoute": false
                                    }
                                ],
                                "subnets": [
                                    {
                                        "localSubnet": "192.168.1.0/24",
                                        "useVpn": true
                                    },
                                    {
                                        "localSubnet": "192.168.128.0/24",
                                        "useVpn": true
                                    }
                                ]
                            },
                            "required": [
                                "mode"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mode": "spoke",
                                "hubs": [
                                    {
                                        "hubId": "N_4901849",
                                        "useDefaultRoute": true
                                    },
                                    {
                                        "hubId": "N_1892489",
                                        "useDefaultRoute": false
                                    }
                                ],
                                "subnets": [
                                    {
                                        "localSubnet": "192.168.1.0/24",
                                        "useVpn": true
                                    },
                                    {
                                        "localSubnet": "192.168.128.0/24",
                                        "useVpn": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
                "tags": [
                    "networks",
                    "configure",
                    "siteToSiteVpn"
                ]
            }
        },
        "/networks/{networkId}/sm/app/polaris": {
            "post": {
                "description": "Create a new Polaris app",
                "operationId": "createNetworkSmAppPolaris",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkSmAppPolaris",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "scope": {
                                    "type": "string",
                                    "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned"
                                },
                                "manifestUrl": {
                                    "type": "string",
                                    "description": "The manifest URL of the Polaris app (one of manifestUrl and bundleId must be provided)"
                                },
                                "bundleId": {
                                    "type": "string",
                                    "description": "The bundleId of the Polaris app (one of manifestUrl and bundleId must be provided)"
                                },
                                "preventAutoInstall": {
                                    "type": "boolean",
                                    "description": "(optional) Whether or not SM should auto-install this app (one of true or false). False by default."
                                },
                                "usesVPP": {
                                    "type": "boolean",
                                    "description": "(optional) Whether or not the app should use VPP by device assignment (one of true or false). False by default."
                                }
                            },
                            "example": {
                                "scope": "withAny, tag1, tag2",
                                "manifestUrl": "https://website.com/assets/manifest.plist",
                                "preventAutoInstall": true,
                                "usesVPP": true
                            },
                            "required": [
                                "scope"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "success": true,
                                "app_id": "123456",
                                "bundle_id": "com.cisco.polaris",
                                "scope": "withAny",
                                "tags": " tag1 tag2 ",
                                "prevent_auto_install": true,
                                "uses_vpp": true
                            }
                        }
                    }
                },
                "summary": "Create a new Polaris app",
                "tags": [
                    "sm",
                    "configure",
                    "app",
                    "polaris"
                ]
            },
            "get": {
                "description": "Get details for a Cisco Polaris app if it exists",
                "operationId": "getNetworkSmAppPolaris",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "bundleId",
                        "in": "query",
                        "description": "The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app",
                        "x-example": "com.cisco.polaris"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "app_id": "123456",
                                "bundle_id": "com.cisco.polaris",
                                "scope": "withAny",
                                "tags": " tag1 tag2 ",
                                "prevent_auto_install": true,
                                "uses_vpp": true
                            }
                        }
                    }
                },
                "summary": "Get details for a Cisco Polaris app if it exists",
                "tags": [
                    "sm",
                    "configure",
                    "app",
                    "polaris"
                ]
            }
        },
        "/networks/{networkId}/sm/app/polaris/{appId}": {
            "put": {
                "description": "Update an existing Polaris app",
                "operationId": "updateNetworkSmAppPolaris",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "appId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSmAppPolaris",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "scope": {
                                    "type": "string",
                                    "description": "optional: The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned"
                                },
                                "preventAutoInstall": {
                                    "type": "boolean",
                                    "description": "optional: Whether or not SM should auto-install this app (one of true or false)"
                                },
                                "usesVPP": {
                                    "type": "boolean",
                                    "description": "optional: Whether or not the app should use VPP by device assignment (one of true or false)"
                                }
                            },
                            "example": {
                                "scope": "withAny, tag1, tag2",
                                "preventAutoInstall": true,
                                "usesVPP": true
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "success": true,
                                "app_id": "123456",
                                "bundle_id": "com.cisco.polaris",
                                "scope": "withAny",
                                "tags": " tag1 tag2 ",
                                "prevent_auto_install": true,
                                "uses_vpp": true
                            }
                        }
                    }
                },
                "summary": "Update an existing Polaris app",
                "tags": [
                    "sm",
                    "configure",
                    "app",
                    "polaris"
                ]
            },
            "delete": {
                "description": "Delete a Cisco Polaris app",
                "operationId": "deleteNetworkSmAppPolaris",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "appId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "success": true
                            }
                        }
                    }
                },
                "summary": "Delete a Cisco Polaris app",
                "tags": [
                    "sm",
                    "configure",
                    "app",
                    "polaris"
                ]
            }
        },
        "/networks/{networkId}/sm/bypassActivationLockAttempts": {
            "post": {
                "description": "Bypass activation lock attempt",
                "operationId": "createNetworkSmBypassActivationLockAttempt",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkSmBypassActivationLockAttempt",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ids": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "The ids of the devices to attempt activation lock bypass."
                                }
                            },
                            "example": {
                                "ids": [
                                    "1284392014819",
                                    "2983092129865"
                                ]
                            },
                            "required": [
                                "ids"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "status": "pending",
                                "data": {}
                            }
                        }
                    }
                },
                "summary": "Bypass activation lock attempt",
                "tags": [
                    "sm",
                    "configure",
                    "bypassActivationLockAttempts"
                ]
            }
        },
        "/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}": {
            "get": {
                "description": "Bypass activation lock attempt status",
                "operationId": "getNetworkSmBypassActivationLockAttempt",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "attemptId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "status": "complete",
                                "data": {
                                    "2090938209": {
                                        "success": false,
                                        "errors": [
                                            "Activation lock bypass code not known for this device"
                                        ]
                                    },
                                    "38290139892": {
                                        "success": true
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Bypass activation lock attempt status",
                "tags": [
                    "sm",
                    "configure",
                    "bypassActivationLockAttempts"
                ]
            }
        },
        "/networks/{networkId}/sm/devices": {
            "get": {
                "description": "List the devices enrolled in an SM network with various specified fields and filters",
                "operationId": "getNetworkSmDevices",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "fields",
                        "in": "query",
                        "description": "Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion."
                    },
                    {
                        "type": "string",
                        "name": "wifiMacs",
                        "in": "query",
                        "description": "Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values."
                    },
                    {
                        "type": "string",
                        "name": "serials",
                        "in": "query",
                        "description": "Filter devices by serial(s). Multiple serials can be passed in as comma separated values."
                    },
                    {
                        "type": "string",
                        "name": "ids",
                        "in": "query",
                        "description": "Filter devices by id(s). Multiple ids can be passed in as comma separated values."
                    },
                    {
                        "type": "string",
                        "name": "scope",
                        "in": "query",
                        "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "name": "Miles's phone",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "ssid": "My SSID",
                                "wifiMac": "00:11:22:33:44:55",
                                "osName": "iOS 9.3.5",
                                "systemModel": "iPhone",
                                "uuid": "3d990628ede4c628d52",
                                "serialNumber": "F5XKHEBX",
                                "serial": "F5XKHEBX",
                                "ip": "1.2.3.4",
                                "notes": "Here's some info about my device"
                            }
                        }
                    }
                },
                "summary": "List the devices enrolled in an SM network with various specified fields and filters",
                "tags": [
                    "sm",
                    "configure",
                    "devices"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/checkin": {
            "post": {
                "description": "Force check-in a set of devices",
                "operationId": "checkinNetworkSmDevices",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "checkinNetworkSmDevices",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "wifiMacs": {
                                    "type": "string",
                                    "description": "The wifiMacs of the devices to be checked-in."
                                },
                                "ids": {
                                    "type": "string",
                                    "description": "The ids of the devices to be checked-in."
                                },
                                "serials": {
                                    "type": "string",
                                    "description": "The serials of the devices to be checked-in."
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in."
                                }
                            },
                            "example": {
                                "ids": "\"1284392014819\""
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ids": "\"1284392014819\""
                            }
                        }
                    }
                },
                "summary": "Force check-in a set of devices",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "checkin"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/fields": {
            "put": {
                "description": "Modify the fields of a device",
                "operationId": "updateNetworkSmDevicesFields",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSmDevicesFields",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "wifiMac": {
                                    "type": "string",
                                    "description": "The wifiMac of the device to be modified."
                                },
                                "id": {
                                    "type": "string",
                                    "description": "The id of the device to be modified."
                                },
                                "serial": {
                                    "type": "string",
                                    "description": "The serial of the device to be modified."
                                },
                                "deviceFields": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "New name for the device"
                                        },
                                        "notes": {
                                            "type": "string",
                                            "description": "New notes for the device"
                                        }
                                    },
                                    "description": "The new fields of the device. Each field of this object is optional."
                                }
                            },
                            "example": {
                                "id": "1284392014819",
                                "deviceFields": {
                                    "name": "Miles's phone",
                                    "notes": "Here's some info about my device"
                                }
                            },
                            "required": [
                                "deviceFields"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "serial": "F5XKHEBX",
                                "wifiMac": "00:11:22:33:44:55",
                                "name": "Miles's phone",
                                "notes": "Here's some info about my device"
                            }
                        }
                    }
                },
                "summary": "Modify the fields of a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "fields"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/lock": {
            "post": {
                "description": "Lock a set of devices",
                "operationId": "lockNetworkSmDevices",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "lockNetworkSmDevices",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "wifiMacs": {
                                    "type": "string",
                                    "description": "The wifiMacs of the devices to be locked."
                                },
                                "ids": {
                                    "type": "string",
                                    "description": "The ids of the devices to be locked."
                                },
                                "serials": {
                                    "type": "string",
                                    "description": "The serials of the devices to be locked."
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped."
                                },
                                "pin": {
                                    "type": "integer",
                                    "description": "The pin number for locking macOS devices (a six digit number). Required only for macOS devices."
                                }
                            },
                            "example": {
                                "ids": "\"1284392014819\""
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ids": "\"1284392014819\""
                            }
                        }
                    }
                },
                "summary": "Lock a set of devices",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "lock"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/modifyTags": {
            "post": {
                "description": "Add, delete, or update the tags of a set of devices",
                "operationId": "modifyNetworkSmDevicesTags",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "modifyNetworkSmDevicesTags",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "wifiMacs": {
                                    "type": "string",
                                    "description": "The wifiMacs of the devices to be modified."
                                },
                                "ids": {
                                    "type": "string",
                                    "description": "The ids of the devices to be modified."
                                },
                                "serials": {
                                    "type": "string",
                                    "description": "The serials of the devices to be modified."
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified."
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "The tags to be added, deleted, or updated."
                                },
                                "updateAction": {
                                    "type": "string",
                                    "description": "One of add, delete, or update. Only devices that have been modified will be returned."
                                }
                            },
                            "example": {
                                "scope": "withAny, old_tag",
                                "updateAction": "add",
                                "tags": "tag1,tag2"
                            },
                            "required": [
                                "tags",
                                "updateAction"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1284392014819",
                                    "serial": "F5XKHEBX",
                                    "wifiMac": "00:11:22:33:44:55",
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "Add, delete, or update the tags of a set of devices",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "modifyTags"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/move": {
            "post": {
                "description": "Move a set of devices to a new network",
                "operationId": "moveNetworkSmDevices",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "moveNetworkSmDevices",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "wifiMacs": {
                                    "type": "string",
                                    "description": "The wifiMacs of the devices to be moved."
                                },
                                "ids": {
                                    "type": "string",
                                    "description": "The ids of the devices to be moved."
                                },
                                "serials": {
                                    "type": "string",
                                    "description": "The serials of the devices to be moved."
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved."
                                },
                                "newNetwork": {
                                    "type": "string",
                                    "description": "The new network to which the devices will be moved."
                                }
                            },
                            "example": {
                                "ids": "\"1284392014819\"",
                                "newNetwork": "N_24329156"
                            },
                            "required": [
                                "newNetwork"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ids": "\"1284392014819\"",
                                "newNetwork": "N_24329156"
                            }
                        }
                    }
                },
                "summary": "Move a set of devices to a new network",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "move"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/wipe": {
            "post": {
                "description": "Wipe a device",
                "operationId": "wipeNetworkSmDevices",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "wipeNetworkSmDevices",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "wifiMac": {
                                    "type": "string",
                                    "description": "The wifiMac of the device to be wiped."
                                },
                                "id": {
                                    "type": "string",
                                    "description": "The id of the device to be wiped."
                                },
                                "serial": {
                                    "type": "string",
                                    "description": "The serial of the device to be wiped."
                                },
                                "pin": {
                                    "type": "integer",
                                    "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices."
                                }
                            },
                            "example": {
                                "id": "1284392014819"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819"
                            }
                        }
                    }
                },
                "summary": "Wipe a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "wipe"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/cellularUsageHistory": {
            "get": {
                "description": "Return the client's daily cellular data usage history. Usage data is in kilobytes.",
                "operationId": "getNetworkSmDeviceCellularUsageHistory",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "received": 61,
                                    "sent": 138,
                                    "ts": "2018-05-12T00:00:00Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the client's daily cellular data usage history. Usage data is in kilobytes.",
                "tags": [
                    "sm",
                    "monitor",
                    "devices",
                    "cellularUsageHistory"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/certs": {
            "get": {
                "description": "List the certs on a device",
                "operationId": "getNetworkSmDeviceCerts",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "My Cert",
                                    "notValidAfter": "2018-05-12T00:00:00Z",
                                    "notValidBefore": "2018-02-11T00:00:00Z",
                                    "certPem": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----\n",
                                    "deviceId": "1234",
                                    "issuer": "",
                                    "subject": "",
                                    "id": "15"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the certs on a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "certs"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/connectivity": {
            "get": {
                "description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).",
                "operationId": "getNetworkSmDeviceConnectivity",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "firstSeenAt": "2018-02-11T00:00:00Z",
                                    "lastSeenAt": "2018-05-12T00:00:00Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).",
                "tags": [
                    "sm",
                    "monitor",
                    "devices",
                    "connectivity"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/desktopLogs": {
            "get": {
                "description": "Return historical records of various Systems Manager network connection details for desktop devices.",
                "operationId": "getNetworkSmDeviceDesktopLogs",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "measuredAt": "2018-05-12T00:00:00Z",
                                    "user": "milesmeraki",
                                    "networkDevice": "NIC",
                                    "networkDriver": "Driver",
                                    "wifiChannel": "11",
                                    "wifiAuth": "wpa-psk",
                                    "wifiBssid": "00:11:22:33:44:55",
                                    "wifiSsid": "ssid",
                                    "wifiRssi": "-11",
                                    "wifiNoise": "-99",
                                    "dhcpServer": "1.2.3.4",
                                    "ip": "1.2.3.4",
                                    "networkMTU": "1500",
                                    "subnet": "192.168.1.0/24",
                                    "gateway": "1.2.3.5",
                                    "publicIP": "123.123.123.1",
                                    "dnsServer": "8",
                                    "ts": "2018-05-12T00:00:00Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "Return historical records of various Systems Manager network connection details for desktop devices.",
                "tags": [
                    "sm",
                    "monitor",
                    "devices",
                    "desktopLogs"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/deviceCommandLogs": {
            "get": {
                "description": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n",
                "operationId": "getNetworkSmDeviceDeviceCommandLogs",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "action": "UpdateProfile",
                                    "name": "My profile",
                                    "details": "{}",
                                    "dashboardUser": "Miles Meraki",
                                    "ts": "2018-05-12T00:00:00Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n",
                "tags": [
                    "sm",
                    "monitor",
                    "devices",
                    "deviceCommandLogs"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/deviceProfiles": {
            "get": {
                "description": "Get the profiles associated with a device",
                "operationId": "getNetworkSmDeviceDeviceProfiles",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "deviceId": "1234",
                                    "id": "1284392014819",
                                    "isEncrypted": true,
                                    "isManaged": true,
                                    "profileData": {},
                                    "profileIdentifier": "com.test.app",
                                    "name": "My profile",
                                    "version": "0.0.1"
                                }
                            ]
                        }
                    }
                },
                "summary": "Get the profiles associated with a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "deviceProfiles"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/networkAdapters": {
            "get": {
                "description": "List the network adapters of a device",
                "operationId": "getNetworkSmDeviceNetworkAdapters",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "dhcpServer": "123.123.123.1",
                                    "dnsServer": "8.8.8.8, 8.8.4.4",
                                    "gateway": "1.2.3.5",
                                    "id": "1284392014819",
                                    "ip": "1.2.3.4",
                                    "mac": "00:11:22:33:44:55",
                                    "name": "en0",
                                    "subnet": "255.255.255.0"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the network adapters of a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "networkAdapters"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/performanceHistory": {
            "get": {
                "description": "Return historical records of various Systems Manager client metrics for desktop devices.",
                "operationId": "getNetworkSmDevicePerformanceHistory",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "cpuPercentUsed": 0.95,
                                    "memFree": 1024,
                                    "memWired": 4096,
                                    "memActive": 1024,
                                    "memInactive": 2048,
                                    "networkSent": 512,
                                    "networkReceived": 512,
                                    "swapUsed": 768,
                                    "diskUsage": {
                                        "c": {
                                            "used": 2048,
                                            "space": 9096
                                        }
                                    },
                                    "ts": "2018-05-12T00:00:00Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "Return historical records of various Systems Manager client metrics for desktop devices.",
                "tags": [
                    "sm",
                    "monitor",
                    "devices",
                    "performanceHistory"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/refreshDetails": {
            "post": {
                "description": "Refresh the details of a device",
                "operationId": "refreshNetworkSmDeviceDetails",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Refresh the details of a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "refreshDetails"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/restrictions": {
            "get": {
                "description": "List the restrictions on a device",
                "operationId": "getNetworkSmDeviceRestrictions",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "profile": "com.meraki.sm.1",
                                    "restrictions": {
                                        "myRestriction": {
                                            "value": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "List the restrictions on a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "restrictions"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/securityCenters": {
            "get": {
                "description": "List the security centers on a device",
                "operationId": "getNetworkSmDeviceSecurityCenters",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "isRooted": true,
                                    "hasAntiVirus": true,
                                    "antiVirusName": "meraki_av",
                                    "isFireWallEnabled": true,
                                    "hasFireWallInstalled": true,
                                    "fireWallName": "meraki_fw",
                                    "isDiskEncrypted": true,
                                    "isAutoLoginDisabled": true,
                                    "id": "1284392014819",
                                    "runningProcs": "/software,/software_2"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the security centers on a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "securityCenters"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/softwares": {
            "get": {
                "description": "Get a list of softwares associated with a device",
                "operationId": "getNetworkSmDeviceSoftwares",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "appId": "1234",
                                    "bundleSize": null,
                                    "createdAt": "2018-02-11T00:00:00Z",
                                    "deviceId": "1234",
                                    "dynamicSize": null,
                                    "id": "1284392014819",
                                    "identifier": "com.test.app",
                                    "installedAt": "2018-05-12T00:00:00Z",
                                    "toInstall": null,
                                    "iosRedemptionCode": null,
                                    "isManaged": true,
                                    "itunesId": null,
                                    "licenseKey": null,
                                    "name": "My app",
                                    "path": "/Path/to/app.app",
                                    "redemptionCode": null,
                                    "shortVersion": null,
                                    "status": null,
                                    "toUninstall": false,
                                    "uninstalledAt": null,
                                    "updatedAt": "2018-05-12T00:00:00Z",
                                    "vendor": "Apple",
                                    "version": "0.1"
                                }
                            ]
                        }
                    }
                },
                "summary": "Get a list of softwares associated with a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "softwares"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/unenroll": {
            "post": {
                "description": "Unenroll a device",
                "operationId": "unenrollNetworkSmDevice",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "success": true
                            }
                        }
                    }
                },
                "summary": "Unenroll a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "unenroll"
                ]
            }
        },
        "/networks/{networkId}/sm/devices/{deviceId}/wlanLists": {
            "get": {
                "description": "List the saved SSID names on a device",
                "operationId": "getNetworkSmDeviceWlanLists",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "createdAt": "2018-02-11T00:00:00Z",
                                    "id": "1284392014819",
                                    "xml": "Preferred networks on en0:"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the saved SSID names on a device",
                "tags": [
                    "sm",
                    "configure",
                    "devices",
                    "wlanLists"
                ]
            }
        },
        "/networks/{networkId}/sm/profiles": {
            "get": {
                "description": "List all the profiles in the network",
                "operationId": "getNetworkSmProfiles",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "profiles": [
                                    {
                                        "id": "1234",
                                        "payload_display_name": "API Profile",
                                        "payload_identifier": "com.meraki.sm.1",
                                        "payload_description": "API docs test",
                                        "scope": "some",
                                        "tags": [
                                            "tag1",
                                            "tag2"
                                        ],
                                        "wifis": [],
                                        "payload_types": [
                                            "Privacy",
                                            "Document"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "List all the profiles in the network",
                "tags": [
                    "sm",
                    "configure",
                    "profiles"
                ]
            }
        },
        "/networks/{networkId}/sm/targetGroups": {
            "get": {
                "description": "List the target groups in this network",
                "operationId": "getNetworkSmTargetGroups",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "withDetails",
                        "in": "query",
                        "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "My target group",
                                    "scope": "none",
                                    "tags": "[]",
                                    "type": "devices"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the target groups in this network",
                "tags": [
                    "sm",
                    "configure",
                    "targetGroups"
                ]
            },
            "post": {
                "description": "Add a target group",
                "operationId": "createNetworkSmTargetGroup",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkSmTargetGroup",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of this target group"
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty."
                                }
                            },
                            "example": {
                                "name": "My target group",
                                "scope": "none",
                                "tags": "[]",
                                "type": "devices"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "name": "My target group",
                                "scope": "none",
                                "tags": "[]",
                                "type": "devices"
                            }
                        }
                    }
                },
                "summary": "Add a target group",
                "tags": [
                    "sm",
                    "configure",
                    "targetGroups"
                ]
            }
        },
        "/networks/{networkId}/sm/targetGroups/{targetGroupId}": {
            "get": {
                "description": "Return a target group",
                "operationId": "getNetworkSmTargetGroup",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "targetGroupId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "withDetails",
                        "in": "query",
                        "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "name": "My target group",
                                "scope": "none",
                                "tags": "[]",
                                "type": "devices"
                            }
                        }
                    }
                },
                "summary": "Return a target group",
                "tags": [
                    "sm",
                    "configure",
                    "targetGroups"
                ]
            },
            "put": {
                "description": "Update a target group",
                "operationId": "updateNetworkSmTargetGroup",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "targetGroupId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSmTargetGroup",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of this target group"
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty."
                                }
                            },
                            "example": {
                                "name": "My target group",
                                "scope": "none",
                                "tags": "[]",
                                "type": "devices"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "name": "My target group",
                                "scope": "none",
                                "tags": "[]",
                                "type": "devices"
                            }
                        }
                    }
                },
                "summary": "Update a target group",
                "tags": [
                    "sm",
                    "configure",
                    "targetGroups"
                ]
            },
            "delete": {
                "description": "Delete a target group from a network",
                "operationId": "deleteNetworkSmTargetGroup",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "targetGroupId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a target group from a network",
                "tags": [
                    "sm",
                    "configure",
                    "targetGroups"
                ]
            }
        },
        "/networks/{networkId}/sm/users": {
            "get": {
                "description": "List the owners in an SM network with various specified fields and filters",
                "operationId": "getNetworkSmUsers",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "ids",
                        "in": "query",
                        "description": "Filter users by id(s). Multiple ids can be passed in as comma separated values."
                    },
                    {
                        "type": "string",
                        "name": "usernames",
                        "in": "query",
                        "description": "Filter users by username(s). Multiple usernames can be passed in as comma separated values."
                    },
                    {
                        "type": "string",
                        "name": "emails",
                        "in": "query",
                        "description": "Filter users by email(s). Multiple emails can be passed in as comma separated values."
                    },
                    {
                        "type": "string",
                        "name": "scope",
                        "in": "query",
                        "description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags as comma separated values."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1234",
                                    "email": "miles@meraki.com",
                                    "fullName": "Miles Meraki",
                                    "username": "",
                                    "hasPassword": false,
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "adGroups": [],
                                    "asmGroups": [],
                                    "isExternal": false,
                                    "displayName": "Miles Meraki <miles@meraki.com>",
                                    "hasIdentityCertificate": false,
                                    "userThumbnail": "https://s3.amazonaws.com/image.extension"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the owners in an SM network with various specified fields and filters",
                "tags": [
                    "sm",
                    "configure",
                    "users"
                ]
            }
        },
        "/networks/{networkId}/sm/users/{userId}/deviceProfiles": {
            "get": {
                "description": "Get the profiles associated with a user",
                "operationId": "getNetworkSmUserDeviceProfiles",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "deviceId": "1234",
                                    "id": "1284392014819",
                                    "isEncrypted": true,
                                    "isManaged": true,
                                    "profileData": {},
                                    "profileIdentifier": "com.test.app",
                                    "name": "My profile",
                                    "version": "0.0.1"
                                }
                            ]
                        }
                    }
                },
                "summary": "Get the profiles associated with a user",
                "tags": [
                    "sm",
                    "configure",
                    "users",
                    "deviceProfiles"
                ]
            }
        },
        "/networks/{networkId}/sm/users/{userId}/softwares": {
            "get": {
                "description": "Get a list of softwares associated with a user",
                "operationId": "getNetworkSmUserSoftwares",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "appId": "1234",
                                    "bundleSize": null,
                                    "createdAt": "2018-02-11T00:00:00Z",
                                    "deviceId": "1234",
                                    "dynamicSize": null,
                                    "id": "1284392014819",
                                    "identifier": "com.test.app",
                                    "installedAt": "2018-05-12T00:00:00Z",
                                    "toInstall": null,
                                    "iosRedemptionCode": null,
                                    "isManaged": true,
                                    "itunesId": null,
                                    "licenseKey": null,
                                    "name": "My app",
                                    "path": "/Path/to/app.app",
                                    "redemptionCode": null,
                                    "shortVersion": null,
                                    "status": null,
                                    "toUninstall": false,
                                    "uninstalledAt": null,
                                    "updatedAt": "2018-05-12T00:00:00Z",
                                    "vendor": "Apple",
                                    "version": "0.1"
                                }
                            ]
                        }
                    }
                },
                "summary": "Get a list of softwares associated with a user",
                "tags": [
                    "sm",
                    "configure",
                    "users",
                    "softwares"
                ]
            }
        },
        "/networks/{networkId}/snmpSettings": {
            "get": {
                "description": "Return the SNMP settings for a network",
                "operationId": "getNetworkSnmpSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "access": "users",
                                "users": [
                                    {
                                        "username": "AzureDiamond",
                                        "passphrase": "hunter2"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the SNMP settings for a network",
                "tags": [
                    "networks",
                    "configure",
                    "snmpSettings"
                ]
            },
            "put": {
                "description": "Update the SNMP settings for a network",
                "operationId": "updateNetworkSnmpSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSnmpSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "access": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "community",
                                        "users"
                                    ],
                                    "description": "The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3)."
                                },
                                "communityString": {
                                    "type": "string",
                                    "description": "The SNMP community string. Only relevant if 'access' is set to 'community'."
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "username": {
                                                "type": "string",
                                                "description": "The username for the SNMP user. Required."
                                            },
                                            "passphrase": {
                                                "type": "string",
                                                "description": "The passphrase for the SNMP user. Required."
                                            }
                                        },
                                        "required": [
                                            "username",
                                            "passphrase"
                                        ]
                                    },
                                    "description": "The list of SNMP users. Only relevant if 'access' is set to 'users'."
                                }
                            },
                            "example": {
                                "access": "users",
                                "users": [
                                    {
                                        "username": "AzureDiamond",
                                        "passphrase": "hunter2"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "access": "users",
                                "users": [
                                    {
                                        "username": "AzureDiamond",
                                        "passphrase": "hunter2"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the SNMP settings for a network",
                "tags": [
                    "networks",
                    "configure",
                    "snmpSettings"
                ]
            }
        },
        "/networks/{networkId}/splashLoginAttempts": {
            "get": {
                "description": "List the splash login attempts for a network",
                "operationId": "getNetworkSplashLoginAttempts",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14
                        ],
                        "name": "ssidNumber",
                        "in": "query",
                        "description": "Only return the login attempts for the specified SSID"
                    },
                    {
                        "type": "string",
                        "name": "loginIdentifier",
                        "in": "query",
                        "description": "The username, email, or phone number used during login"
                    },
                    {
                        "type": "integer",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "Miles Meraki",
                                    "login": "miles@meraki.com",
                                    "ssid": "My SSID",
                                    "loginAt": "2018-02-11T00:00:00.090210Z",
                                    "gatewayDeviceMac": "00:11:22:33:44:55",
                                    "clientMac": "22:33:44:55:66:77",
                                    "clientId": "k74272e",
                                    "authorization": "success"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the splash login attempts for a network",
                "tags": [
                    "networks",
                    "monitor",
                    "splashLoginAttempts"
                ]
            }
        },
        "/networks/{networkId}/split": {
            "post": {
                "description": "Split a combined network into individual networks for each type of device",
                "operationId": "splitNetwork",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "resultingNetworks": [
                                    {
                                        "id": "N_1234",
                                        "organizationId": "2930418",
                                        "name": "Long Island Office - switch",
                                        "timeZone": "America/Los_Angeles",
                                        "tags": " tag1 tag2 ",
                                        "productTypes": [
                                            "switch"
                                        ],
                                        "enrollmentString": "long-island-office"
                                    },
                                    {
                                        "id": "N_5678",
                                        "organizationId": "2930418",
                                        "name": "Long Island Office - wireless",
                                        "timeZone": "America/Los_Angeles",
                                        "tags": " tag1 tag2 ",
                                        "productTypes": [
                                            "wireless"
                                        ],
                                        "enrollmentString": "long-island-office"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Split a combined network into individual networks for each type of device",
                "tags": [
                    "networks",
                    "configure",
                    "split"
                ]
            }
        },
        "/networks/{networkId}/ssids/{number}/trafficShaping": {
            "put": {
                "description": "Update the traffic shaping settings for an SSID on an MR network",
                "operationId": "updateNetworkSsidTrafficShaping",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "number",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSsidTrafficShaping",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "trafficShapingEnabled": {
                                    "type": "boolean",
                                    "description": "Whether traffic shaping rules are applied to clients on your SSID."
                                },
                                "defaultRulesEnabled": {
                                    "type": "boolean",
                                    "description": "    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n"
                                },
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "definitions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "application",
                                                                "applicationCategory",
                                                                "host",
                                                                "port",
                                                                "ipRange",
                                                                "localNet"
                                                            ],
                                                            "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    operation).\n"
                                                        }
                                                    },
                                                    "required": [
                                                        "type",
                                                        "value"
                                                    ]
                                                },
                                                "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                                            },
                                            "perClientBandwidthLimits": {
                                                "type": "object",
                                                "properties": {
                                                    "settings": {
                                                        "type": "string",
                                                        "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                                                    },
                                                    "bandwidthLimits": {
                                                        "type": "object",
                                                        "properties": {
                                                            "limitUp": {
                                                                "type": "integer",
                                                                "description": "The maximum upload limit (integer, in Kbps)."
                                                            },
                                                            "limitDown": {
                                                                "type": "integer",
                                                                "description": "The maximum download limit (integer, in Kbps)."
                                                            }
                                                        },
                                                        "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                                                    }
                                                },
                                                "description": "    An object describing the bandwidth settings for your rule.\n"
                                            },
                                            "dscpTagValue": {
                                                "type": "integer",
                                                "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions operation.\n"
                                            },
                                            "pcpTagValue": {
                                                "type": "integer",
                                                "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                                            }
                                        },
                                        "required": [
                                            "definitions"
                                        ]
                                    },
                                    "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                                }
                            },
                            "example": {
                                "trafficShapingEnabled": true,
                                "defaultRulesEnabled": true,
                                "rules": [
                                    {
                                        "definitions": [
                                            {
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "pcpTagValue": null
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "trafficShapingEnabled": true,
                                "defaultRulesEnabled": true,
                                "rules": [
                                    {
                                        "definitions": [
                                            {
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "pcpTagValue": null
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the traffic shaping settings for an SSID on an MR network",
                "tags": [
                    "networks",
                    "configure",
                    "ssids",
                    "trafficShaping"
                ]
            },
            "get": {
                "description": "Display the traffic shaping settings for a SSID on an MR network",
                "operationId": "getNetworkSsidTrafficShaping",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "number",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "trafficShapingEnabled": true,
                                "defaultRulesEnabled": true,
                                "rules": [
                                    {
                                        "definitions": [
                                            {
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "pcpTagValue": null
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Display the traffic shaping settings for a SSID on an MR network",
                "tags": [
                    "networks",
                    "configure",
                    "ssids",
                    "trafficShaping"
                ]
            }
        },
        "/networks/{networkId}/staticRoutes": {
            "get": {
                "description": "List the static routes for an MX or teleworker network",
                "operationId": "getNetworkStaticRoutes",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                                    "networkId": "N_24329156",
                                    "enabled": true,
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "gatewayIp": "1.2.3.5",
                                    "fixedIpAssignments": {
                                        "22:33:44:55:66:77": {
                                            "ip": "1.2.3.4",
                                            "name": "Some client name"
                                        }
                                    },
                                    "reservedIpRanges": [
                                        {
                                            "start": "192.168.1.0",
                                            "end": "192.168.1.1",
                                            "comment": "A reserved IP range"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "List the static routes for an MX or teleworker network",
                "tags": [
                    "networks",
                    "configure",
                    "staticRoutes"
                ]
            },
            "post": {
                "description": "Add a static route for an MX or teleworker network",
                "operationId": "createNetworkStaticRoute",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkStaticRoute",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new static route"
                                },
                                "subnet": {
                                    "type": "string",
                                    "description": "The subnet of the static route"
                                },
                                "gatewayIp": {
                                    "type": "string",
                                    "description": "The gateway IP (next hop) of the static route"
                                }
                            },
                            "example": {
                                "name": "My route",
                                "subnet": "192.168.1.0/24",
                                "gatewayIp": "1.2.3.5"
                            },
                            "required": [
                                "name",
                                "subnet",
                                "gatewayIp"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                                "networkId": "N_24329156",
                                "enabled": true,
                                "name": "My route",
                                "subnet": "192.168.1.0/24",
                                "gatewayIp": "1.2.3.5",
                                "fixedIpAssignments": {},
                                "reservedIpRanges": []
                            }
                        }
                    }
                },
                "summary": "Add a static route for an MX or teleworker network",
                "tags": [
                    "networks",
                    "configure",
                    "staticRoutes"
                ]
            }
        },
        "/networks/{networkId}/staticRoutes/{staticRouteId}": {
            "get": {
                "description": "Return a static route for an MX or teleworker network",
                "operationId": "getNetworkStaticRoute",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "staticRouteId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                                "networkId": "N_24329156",
                                "enabled": true,
                                "name": "My route",
                                "subnet": "192.168.1.0/24",
                                "gatewayIp": "1.2.3.5",
                                "fixedIpAssignments": {
                                    "22:33:44:55:66:77": {
                                        "ip": "1.2.3.4",
                                        "name": "Some client name"
                                    }
                                },
                                "reservedIpRanges": [
                                    {
                                        "start": "192.168.1.0",
                                        "end": "192.168.1.1",
                                        "comment": "A reserved IP range"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return a static route for an MX or teleworker network",
                "tags": [
                    "networks",
                    "configure",
                    "staticRoutes"
                ]
            },
            "put": {
                "description": "Update a static route for an MX or teleworker network",
                "operationId": "updateNetworkStaticRoute",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "staticRouteId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkStaticRoute",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the static route"
                                },
                                "subnet": {
                                    "type": "string",
                                    "description": "The subnet of the static route"
                                },
                                "gatewayIp": {
                                    "type": "string",
                                    "description": "The gateway IP (next hop) of the static route"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "The enabled state of the static route"
                                },
                                "fixedIpAssignments": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "The DHCP fixed IP assignments on the static route. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details."
                                },
                                "reservedIpRanges": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "type": "string",
                                                "description": "The first IP in the reserved range"
                                            },
                                            "end": {
                                                "type": "string",
                                                "description": "The last IP in the reserved range"
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "A text comment for the reserved range"
                                            }
                                        },
                                        "required": [
                                            "start",
                                            "end",
                                            "comment"
                                        ]
                                    },
                                    "description": "The DHCP reserved IP ranges on the static route"
                                }
                            },
                            "example": {
                                "name": "My route",
                                "subnet": "192.168.1.0/24",
                                "fixedIpAssignments": {
                                    "22:33:44:55:66:77": {
                                        "ip": "1.2.3.4",
                                        "name": "Some client name"
                                    }
                                },
                                "reservedIpRanges": [
                                    {
                                        "start": "192.168.1.0",
                                        "end": "192.168.1.1",
                                        "comment": "A reserved IP range"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                                "networkId": "N_24329156",
                                "enabled": true,
                                "name": "My route",
                                "subnet": "192.168.1.0/24",
                                "gatewayIp": "1.2.3.5",
                                "fixedIpAssignments": {
                                    "22:33:44:55:66:77": {
                                        "ip": "1.2.3.4",
                                        "name": "Some client name"
                                    }
                                },
                                "reservedIpRanges": [
                                    {
                                        "start": "192.168.1.0",
                                        "end": "192.168.1.1",
                                        "comment": "A reserved IP range"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update a static route for an MX or teleworker network",
                "tags": [
                    "networks",
                    "configure",
                    "staticRoutes"
                ]
            },
            "delete": {
                "description": "Delete a static route from an MX or teleworker network",
                "operationId": "deleteNetworkStaticRoute",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "staticRouteId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a static route from an MX or teleworker network",
                "tags": [
                    "networks",
                    "configure",
                    "staticRoutes"
                ]
            }
        },
        "/networks/{networkId}/swapWarmSpare": {
            "post": {
                "description": "Swap MX primary and warm spare appliances",
                "operationId": "swapNetworkWarmspare",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "enabled": true,
                                "primarySerial": "Q234-ABCD-5678",
                                "spareSerial": "Q234-ABCD-5678",
                                "uplinkMode": "virtual",
                                "wan1": {
                                    "ip": "1.2.3.4",
                                    "subnet": "192.168.1.0/24"
                                },
                                "wan2": {
                                    "ip": "1.2.3.4",
                                    "subnet": "192.168.128.0/24"
                                }
                            }
                        }
                    }
                },
                "summary": "Swap MX primary and warm spare appliances",
                "tags": [
                    "networks",
                    "configure",
                    "swapWarmSpare"
                ]
            }
        },
        "/networks/{networkId}/switch/accessControlLists": {
            "get": {
                "description": "Return the access control lists for a MS network",
                "operationId": "getNetworkSwitchAccessControlLists",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Deny SSH",
                                        "policy": "deny",
                                        "ipVersion": "ipv4",
                                        "protocol": "tcp",
                                        "srcCidr": "10.1.10.0/24",
                                        "srcPort": "any",
                                        "dstCidr": "172.16.30/24",
                                        "dstPort": 22,
                                        "vlan": 10
                                    },
                                    {
                                        "comment": "Default rule",
                                        "policy": "allow",
                                        "ipVersion": "any",
                                        "protocol": "any",
                                        "srcCidr": "any",
                                        "srcPort": "any",
                                        "dstCidr": "any",
                                        "dstPort": "any",
                                        "vlan": "any"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the access control lists for a MS network",
                "tags": [
                    "switch",
                    "configure",
                    "accessControlLists"
                ]
            },
            "put": {
                "description": "Update the access control lists for a MS network",
                "operationId": "updateNetworkSwitchAccessControlLists",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchAccessControlLists",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "comment": {
                                                "type": "string",
                                                "description": "Description of the rule (optional)."
                                            },
                                            "policy": {
                                                "type": "string",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ],
                                                "description": "'allow' or 'deny' traffic specified by this rule."
                                            },
                                            "ipVersion": {
                                                "type": "string",
                                                "enum": [
                                                    "any",
                                                    "ipv4",
                                                    "ipv6"
                                                ],
                                                "description": "IP address version (must be 'any', 'ipv4' or 'ipv6'). Applicable only if network supports IPv6. Default value is 'ipv4'."
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "enum": [
                                                    "tcp",
                                                    "udp",
                                                    "any"
                                                ],
                                                "description": "The type of protocol (must be 'tcp', 'udp', or 'any')."
                                            },
                                            "srcCidr": {
                                                "type": "string",
                                                "description": "Source IP address (in IP or CIDR notation) or 'any'."
                                            },
                                            "srcPort": {
                                                "type": "string",
                                                "description": "Source port. Must be in the range  of 1-65535 or 'any'. Default is 'any'."
                                            },
                                            "dstCidr": {
                                                "type": "string",
                                                "description": "Destination IP address (in IP or CIDR notation) or 'any'."
                                            },
                                            "dstPort": {
                                                "type": "string",
                                                "description": "Destination port. Must be in the range of 1-65535 or 'any'. Default is 'any'."
                                            },
                                            "vlan": {
                                                "type": "string",
                                                "description": "Incoming traffic VLAN. Must be in the range of 1-4095 or 'any'. Default is 'any'."
                                            }
                                        },
                                        "required": [
                                            "policy",
                                            "protocol",
                                            "srcCidr",
                                            "dstCidr"
                                        ]
                                    },
                                    "description": "An ordered array of the access control list rules (not including the default rule). An empty array will clear the rules."
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "comment": "Deny SSH",
                                        "policy": "deny",
                                        "ipVersion": "ipv4",
                                        "protocol": "tcp",
                                        "srcCidr": "10.1.10.0/24",
                                        "srcPort": "any",
                                        "dstCidr": "172.16.30/24",
                                        "dstPort": "22",
                                        "vlan": "10"
                                    }
                                ]
                            },
                            "required": [
                                "rules"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Deny SSH",
                                        "policy": "deny",
                                        "ipVersion": "ipv4",
                                        "protocol": "tcp",
                                        "srcCidr": "10.1.10.0/24",
                                        "srcPort": "any",
                                        "dstCidr": "172.16.30/24",
                                        "dstPort": 22,
                                        "vlan": 10
                                    },
                                    {
                                        "comment": "Default rule",
                                        "policy": "allow",
                                        "ipVersion": "any",
                                        "protocol": "any",
                                        "srcCidr": "any",
                                        "srcPort": "any",
                                        "dstCidr": "any",
                                        "dstPort": "any",
                                        "vlan": "any"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the access control lists for a MS network",
                "tags": [
                    "switch",
                    "configure",
                    "accessControlLists"
                ]
            }
        },
        "/networks/{networkId}/switch/accessPolicies": {
            "get": {
                "description": "List the access policies for this network. Only valid for MS networks.",
                "operationId": "getNetworkSwitchAccessPolicies",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "number": 1,
                                    "name": "My access policy",
                                    "accessType": "8021.x",
                                    "guestVlan": 3700,
                                    "radiusServers": [
                                        {
                                            "ip": "1.2.3.4",
                                            "port": 1337
                                        },
                                        {
                                            "ip": "2.3.4.5",
                                            "port": 1337
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "List the access policies for this network. Only valid for MS networks.",
                "tags": [
                    "switch",
                    "configure",
                    "accessPolicies"
                ]
            }
        },
        "/networks/{networkId}/switch/linkAggregations": {
            "get": {
                "description": "List link aggregation groups",
                "operationId": "getNetworkSwitchLinkAggregations",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "NDU2N18yXzM=",
                                    "switchPorts": [
                                        {
                                            "serial": "Q234-ABCD-0001",
                                            "portId": "1"
                                        },
                                        {
                                            "serial": "Q234-ABCD-0002",
                                            "portId": "2"
                                        },
                                        {
                                            "serial": "Q234-ABCD-0003",
                                            "portId": "3"
                                        },
                                        {
                                            "serial": "Q234-ABCD-0004",
                                            "portId": "4"
                                        },
                                        {
                                            "serial": "Q234-ABCD-0005",
                                            "portId": "5"
                                        },
                                        {
                                            "serial": "Q234-ABCD-0006",
                                            "portId": "6"
                                        },
                                        {
                                            "serial": "Q234-ABCD-0007",
                                            "portId": "7"
                                        },
                                        {
                                            "serial": "Q234-ABCD-0008",
                                            "portId": "8"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "List link aggregation groups",
                "tags": [
                    "switch",
                    "configure",
                    "linkAggregations"
                ]
            },
            "post": {
                "description": "Create a link aggregation group",
                "operationId": "createNetworkSwitchLinkAggregation",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkSwitchLinkAggregation",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "switchPorts": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "serial": {
                                                "type": "string",
                                                "description": "Serial number of the switch."
                                            },
                                            "portId": {
                                                "type": "string",
                                                "description": "Port identifier of switch port. For modules, the identifier is \"SlotNumber_ModuleType_PortNumber\" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: \"8\")."
                                            }
                                        },
                                        "required": [
                                            "serial",
                                            "portId"
                                        ]
                                    },
                                    "description": "Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported."
                                },
                                "switchProfilePorts": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "profile": {
                                                "type": "string",
                                                "description": "Profile identifier."
                                            },
                                            "portId": {
                                                "type": "string",
                                                "description": "Port identifier of switch port. For modules, the identifier is \"SlotNumber_ModuleType_PortNumber\" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: \"8\")."
                                            }
                                        },
                                        "required": [
                                            "profile",
                                            "portId"
                                        ]
                                    },
                                    "description": "Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported."
                                }
                            },
                            "example": {
                                "switchPorts": [
                                    {
                                        "serial": "Q234-ABCD-0001",
                                        "portId": "1"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0002",
                                        "portId": "2"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0003",
                                        "portId": "3"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0004",
                                        "portId": "4"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0005",
                                        "portId": "5"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0006",
                                        "portId": "6"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0007",
                                        "portId": "7"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0008",
                                        "portId": "8"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "NDU2N18yXzM=",
                                "switchPorts": [
                                    {
                                        "serial": "Q234-ABCD-0001",
                                        "portId": "1"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0002",
                                        "portId": "2"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0003",
                                        "portId": "3"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0004",
                                        "portId": "4"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0005",
                                        "portId": "5"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0006",
                                        "portId": "6"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0007",
                                        "portId": "7"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0008",
                                        "portId": "8"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Create a link aggregation group",
                "tags": [
                    "switch",
                    "configure",
                    "linkAggregations"
                ]
            }
        },
        "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}": {
            "put": {
                "description": "Update a link aggregation group",
                "operationId": "updateNetworkSwitchLinkAggregation",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "linkAggregationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchLinkAggregation",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "switchPorts": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "serial": {
                                                "type": "string",
                                                "description": "Serial number of the switch."
                                            },
                                            "portId": {
                                                "type": "string",
                                                "description": "Port identifier of switch port. For modules, the identifier is \"SlotNumber_ModuleType_PortNumber\" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: \"8\")."
                                            }
                                        },
                                        "required": [
                                            "serial",
                                            "portId"
                                        ]
                                    },
                                    "description": "Array of switch or stack ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported."
                                },
                                "switchProfilePorts": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "profile": {
                                                "type": "string",
                                                "description": "Profile identifier."
                                            },
                                            "portId": {
                                                "type": "string",
                                                "description": "Port identifier of switch port. For modules, the identifier is \"SlotNumber_ModuleType_PortNumber\" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: \"8\")."
                                            }
                                        },
                                        "required": [
                                            "profile",
                                            "portId"
                                        ]
                                    },
                                    "description": "Array of switch profile ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported."
                                }
                            },
                            "example": {
                                "id": "NDU2N18yXzM=",
                                "switchPorts": [
                                    {
                                        "serial": "Q234-ABCD-0001",
                                        "portId": "1"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0002",
                                        "portId": "2"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0003",
                                        "portId": "3"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0004",
                                        "portId": "4"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0005",
                                        "portId": "5"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0006",
                                        "portId": "6"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0007",
                                        "portId": "7"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0008",
                                        "portId": "8"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "NDU2N18yXzM=",
                                "switchPorts": [
                                    {
                                        "serial": "Q234-ABCD-0001",
                                        "portId": "1"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0002",
                                        "portId": "2"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0003",
                                        "portId": "3"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0004",
                                        "portId": "4"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0005",
                                        "portId": "5"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0006",
                                        "portId": "6"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0007",
                                        "portId": "7"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0008",
                                        "portId": "8"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update a link aggregation group",
                "tags": [
                    "switch",
                    "configure",
                    "linkAggregations"
                ]
            },
            "delete": {
                "description": "Split a link aggregation group into separate ports",
                "operationId": "deleteNetworkSwitchLinkAggregation",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "linkAggregationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Split a link aggregation group into separate ports",
                "tags": [
                    "switch",
                    "configure",
                    "linkAggregations"
                ]
            }
        },
        "/networks/{networkId}/switch/portSchedules": {
            "get": {
                "description": "List switch port schedules",
                "operationId": "getNetworkSwitchPortSchedules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1234",
                                    "networkId": "N_24329156",
                                    "name": "Weekdays schedule",
                                    "portSchedule": {
                                        "monday": {
                                            "active": true,
                                            "from": "9:00",
                                            "to": "17:00"
                                        },
                                        "tuesday": {
                                            "active": true,
                                            "from": "9:00",
                                            "to": "17:00"
                                        },
                                        "wednesday": {
                                            "active": true,
                                            "from": "9:00",
                                            "to": "17:00"
                                        },
                                        "thursday": {
                                            "active": true,
                                            "from": "9:00",
                                            "to": "17:00"
                                        },
                                        "friday": {
                                            "active": true,
                                            "from": "9:00",
                                            "to": "17:00"
                                        },
                                        "saturday": {
                                            "active": false,
                                            "from": "0:00",
                                            "to": "24:00"
                                        },
                                        "sunday": {
                                            "active": false,
                                            "from": "0:00",
                                            "to": "24:00"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "List switch port schedules",
                "tags": [
                    "switch",
                    "configure",
                    "portSchedules"
                ]
            },
            "post": {
                "description": "Add a switch port schedule",
                "operationId": "createNetworkSwitchPortSchedule",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkSwitchPortSchedule",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name for your port schedule. Required"
                                },
                                "portSchedule": {
                                    "type": "object",
                                    "properties": {
                                        "monday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Monday."
                                        },
                                        "tuesday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Tuesday."
                                        },
                                        "wednesday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Wednesday."
                                        },
                                        "thursday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Thursday."
                                        },
                                        "friday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Friday."
                                        },
                                        "saturday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Saturday."
                                        },
                                        "sunday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Sunday."
                                        }
                                    },
                                    "description": "    The schedule for switch port scheduling. Schedules are applied to days of the week.\n    When it's empty, default schedule with all days of a week are configured.\n    Any unspecified day in the schedule is added as a default schedule configuration of the day.\n"
                                }
                            },
                            "example": {
                                "name": "Weekdays schedule",
                                "portSchedule": {
                                    "monday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "tuesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "wednesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "thursday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "friday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "saturday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    },
                                    "sunday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    }
                                }
                            },
                            "required": [
                                "name"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "Weekdays schedule",
                                "portSchedule": {
                                    "monday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "tuesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "wednesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "thursday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "friday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "saturday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    },
                                    "sunday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Add a switch port schedule",
                "tags": [
                    "switch",
                    "configure",
                    "portSchedules"
                ]
            }
        },
        "/networks/{networkId}/switch/portSchedules/{portScheduleId}": {
            "delete": {
                "description": "Delete a switch port schedule",
                "operationId": "deleteNetworkSwitchPortSchedule",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "portScheduleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a switch port schedule",
                "tags": [
                    "switch",
                    "configure",
                    "portSchedules"
                ]
            },
            "put": {
                "description": "Update a switch port schedule",
                "operationId": "updateNetworkSwitchPortSchedule",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "portScheduleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchPortSchedule",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name for your port schedule."
                                },
                                "portSchedule": {
                                    "type": "object",
                                    "properties": {
                                        "monday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Monday."
                                        },
                                        "tuesday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Tuesday."
                                        },
                                        "wednesday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Wednesday."
                                        },
                                        "thursday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Thursday."
                                        },
                                        "friday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Friday."
                                        },
                                        "saturday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Saturday."
                                        },
                                        "sunday": {
                                            "type": "object",
                                            "properties": {
                                                "active": {
                                                    "type": "boolean",
                                                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                                                }
                                            },
                                            "description": "The schedule object for Sunday."
                                        }
                                    },
                                    "description": "    The schedule for switch port scheduling. Schedules are applied to days of the week.\n    When it's empty, default schedule with all days of a week are configured.\n    Any unspecified day in the schedule is added as a default schedule configuration of the day.\n"
                                }
                            },
                            "example": {
                                "name": "Weekdays schedule",
                                "portSchedule": {
                                    "monday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "tuesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "wednesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "thursday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "friday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "saturday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    },
                                    "sunday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "Weekdays schedule",
                                "portSchedule": {
                                    "monday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "tuesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "wednesday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "thursday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "friday": {
                                        "active": true,
                                        "from": "9:00",
                                        "to": "17:00"
                                    },
                                    "saturday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    },
                                    "sunday": {
                                        "active": false,
                                        "from": "0:00",
                                        "to": "24:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Update a switch port schedule",
                "tags": [
                    "switch",
                    "configure",
                    "portSchedules"
                ]
            }
        },
        "/networks/{networkId}/switch/settings": {
            "get": {
                "description": "Returns the switch network settings",
                "operationId": "getNetworkSwitchSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "vlan": 100,
                                "useCombinedPower": false,
                                "powerExceptions": [
                                    {
                                        "serial": "Q234-ABCD-0001",
                                        "powerType": "redundant"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0002",
                                        "powerType": "combined"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0003",
                                        "powerType": "redundant"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0004",
                                        "powerType": "useNetworkSetting"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Returns the switch network settings",
                "tags": [
                    "switch",
                    "configure",
                    "settings"
                ]
            },
            "put": {
                "description": "Update switch network settings",
                "operationId": "updateNetworkSwitchSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "vlan": {
                                    "type": "integer",
                                    "description": "Management VLAN"
                                },
                                "useCombinedPower": {
                                    "type": "boolean",
                                    "description": "The use Combined Power as the default behavior of secondary power supplies on supported devices."
                                },
                                "powerExceptions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "serial": {
                                                "type": "string",
                                                "description": "Serial number of the switch"
                                            },
                                            "powerType": {
                                                "type": "string",
                                                "enum": [
                                                    "combined",
                                                    "redundant",
                                                    "useNetworkSetting"
                                                ],
                                                "description": "Per switch exception (combined, redundant, useNetworkSetting)"
                                            }
                                        },
                                        "required": [
                                            "serial",
                                            "powerType"
                                        ]
                                    },
                                    "description": "Exceptions on a per switch basis to \"useCombinedPower\""
                                }
                            },
                            "example": {
                                "vlan": 100,
                                "useCombinedPower": false,
                                "powerExceptions": [
                                    {
                                        "serial": "Q234-ABCD-0001",
                                        "powerType": "redundant"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0002",
                                        "powerType": "combined"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0003",
                                        "powerType": "redundant"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0004",
                                        "powerType": "useNetworkSetting"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "vlan": 100,
                                "useCombinedPower": false,
                                "powerExceptions": [
                                    {
                                        "serial": "Q234-ABCD-0001",
                                        "powerType": "redundant"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0002",
                                        "powerType": "combined"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0003",
                                        "powerType": "redundant"
                                    },
                                    {
                                        "serial": "Q234-ABCD-0004",
                                        "powerType": "useNetworkSetting"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update switch network settings",
                "tags": [
                    "switch",
                    "configure",
                    "settings"
                ]
            }
        },
        "/networks/{networkId}/switch/settings/dhcpServerPolicy": {
            "get": {
                "description": "Return the DHCP server policy",
                "operationId": "getNetworkSwitchSettingsDhcpServerPolicy",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "defaultPolicy": "block",
                                "allowedServers": [
                                    "00:50:56:00:00:01",
                                    "00:50:56:00:00:02"
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the DHCP server policy",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "dhcpServerPolicy"
                ]
            },
            "put": {
                "description": "Update the DHCP server policy",
                "operationId": "updateNetworkSwitchSettingsDhcpServerPolicy",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchSettingsDhcpServerPolicy",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "defaultPolicy": {
                                    "type": "string",
                                    "enum": [
                                        "allow",
                                        "block"
                                    ],
                                    "description": "'allow' or 'block' new DHCP servers. Default value is 'allow'."
                                },
                                "allowedServers": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List the MAC addresses of DHCP servers to permit on the network. Applicable only if defaultPolicy is set to block. An empty array will clear the entries."
                                },
                                "blockedServers": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "List the MAC addresses of DHCP servers to block on the network. Applicable only if defaultPolicy is set to allow. An empty array will clear the entries."
                                }
                            },
                            "example": {
                                "defaultPolicy": "block",
                                "allowedServers": [
                                    "00:50:56:00:00:01",
                                    "00:50:56:00:00:02"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "defaultPolicy": "block",
                                "allowedServers": [
                                    "00:50:56:00:00:01",
                                    "00:50:56:00:00:02"
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the DHCP server policy",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "dhcpServerPolicy"
                ]
            }
        },
        "/networks/{networkId}/switch/settings/dscpToCosMappings": {
            "get": {
                "description": "Return the DSCP to CoS mappings",
                "operationId": "getNetworkSwitchSettingsDscpToCosMappings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mappings": [
                                    {
                                        "dscp": 1,
                                        "cos": 1,
                                        "title": "Video"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the DSCP to CoS mappings",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "dscpToCosMappings"
                ]
            },
            "put": {
                "description": "Update the DSCP to CoS mappings",
                "operationId": "updateNetworkSwitchSettingsDscpToCosMappings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchSettingsDscpToCosMappings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mappings": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "dscp": {
                                                "type": "integer",
                                                "description": "The Differentiated Services Code Point (DSCP) tag in the IP header that will be mapped to a particular Class-of-Service (CoS) queue. Value can be in the range of 0 to 63 inclusive."
                                            },
                                            "cos": {
                                                "type": "integer",
                                                "description": "The actual layer-2 CoS queue the DSCP value is mapped to. These are not bits set on outgoing frames. Value can be in the range of 0 to 5 inclusive."
                                            },
                                            "title": {
                                                "type": "string",
                                                "description": "Label for the mapping (optional)."
                                            }
                                        },
                                        "required": [
                                            "dscp",
                                            "cos"
                                        ]
                                    },
                                    "description": "An array of DSCP to CoS mappings. An empty array will reset the mappings to default."
                                }
                            },
                            "example": {
                                "mappings": [
                                    {
                                        "dscp": 1,
                                        "cos": 1,
                                        "title": "Video"
                                    }
                                ]
                            },
                            "required": [
                                "mappings"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mappings": [
                                    {
                                        "dscp": 1,
                                        "cos": 1,
                                        "title": "Video"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the DSCP to CoS mappings",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "dscpToCosMappings"
                ]
            }
        },
        "/networks/{networkId}/switch/settings/mtu": {
            "get": {
                "description": "Return the MTU configuration",
                "operationId": "getNetworkSwitchSettingsMtu",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "defaultMtuSize": 9578,
                                "overrides": [
                                    {
                                        "switches": [
                                            "Q234-ABCD-0001",
                                            "Q234-ABCD-0002",
                                            "Q234-ABCD-0003"
                                        ],
                                        "mtuSize": 1500
                                    },
                                    {
                                        "switchProfiles": [
                                            "1284392014819",
                                            "2983092129865"
                                        ],
                                        "mtuSize": 1600
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the MTU configuration",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "mtu"
                ]
            },
            "put": {
                "description": "Update the MTU configuration",
                "operationId": "updateNetworkSwitchSettingsMtu",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchSettingsMtu",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "defaultMtuSize": {
                                    "type": "integer",
                                    "description": "MTU size for the entire network. Default value is 9578."
                                },
                                "overrides": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "switches": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of switch serials. Applicable only for switch network."
                                            },
                                            "switchProfiles": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of switch profile IDs. Applicable only for template network."
                                            },
                                            "mtuSize": {
                                                "type": "integer",
                                                "description": "MTU size for the switches or switch profiles."
                                            }
                                        },
                                        "required": [
                                            "mtuSize"
                                        ]
                                    },
                                    "description": "Override MTU size for individual switches or switch profiles. An empty array will clear overrides."
                                }
                            },
                            "example": {
                                "defaultMtuSize": 9578,
                                "overrides": [
                                    {
                                        "switches": [
                                            "Q234-ABCD-0001",
                                            "Q234-ABCD-0002",
                                            "Q234-ABCD-0003"
                                        ],
                                        "mtuSize": 1500
                                    },
                                    {
                                        "switchProfiles": [
                                            "1284392014819",
                                            "2983092129865"
                                        ],
                                        "mtuSize": 1600
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "defaultMtuSize": 9578,
                                "overrides": [
                                    {
                                        "switches": [
                                            "Q234-ABCD-0001",
                                            "Q234-ABCD-0002",
                                            "Q234-ABCD-0003"
                                        ],
                                        "mtuSize": 1500
                                    },
                                    {
                                        "switchProfiles": [
                                            "1284392014819",
                                            "2983092129865"
                                        ],
                                        "mtuSize": 1600
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the MTU configuration",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "mtu"
                ]
            }
        },
        "/networks/{networkId}/switch/settings/multicast": {
            "get": {
                "description": "Return multicast settings for a network",
                "operationId": "getNetworkSwitchSettingsMulticast",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "defaultSettings": {
                                    "igmpSnoopingEnabled": true,
                                    "floodUnknownMulticastTrafficEnabled": true
                                },
                                "overrides": [
                                    {
                                        "switches": [
                                            "Q234-ABCD-0001",
                                            "Q234-ABCD-0002",
                                            "Q234-ABCD-0003"
                                        ],
                                        "igmpSnoopingEnabled": true,
                                        "floodUnknownMulticastTrafficEnabled": true
                                    },
                                    {
                                        "stacks": [
                                            "789102",
                                            "123456",
                                            "129102"
                                        ],
                                        "igmpSnoopingEnabled": true,
                                        "floodUnknownMulticastTrafficEnabled": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return multicast settings for a network",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "multicast"
                ]
            },
            "put": {
                "description": "Update multicast settings for a network",
                "operationId": "updateNetworkSwitchSettingsMulticast",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchSettingsMulticast",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "defaultSettings": {
                                    "type": "object",
                                    "properties": {
                                        "igmpSnoopingEnabled": {
                                            "type": "boolean",
                                            "description": "IGMP snooping setting for entire network"
                                        },
                                        "floodUnknownMulticastTrafficEnabled": {
                                            "type": "boolean",
                                            "description": "Flood unknown multicast traffic setting for entire network"
                                        }
                                    },
                                    "description": "Default multicast setting for entire network. IGMP snooping and Flood unknown multicast traffic settings are enabled by default."
                                },
                                "overrides": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "switchProfiles": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of switch profiles ids for template network"
                                            },
                                            "switches": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of switch serials for non-template network"
                                            },
                                            "stacks": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of switch stack ids for non-template network"
                                            },
                                            "igmpSnoopingEnabled": {
                                                "type": "boolean",
                                                "description": "IGMP snooping setting for switches, switch stacks or switch profiles"
                                            },
                                            "floodUnknownMulticastTrafficEnabled": {
                                                "type": "boolean",
                                                "description": "Flood unknown multicast traffic setting for switches, switch stacks or switch profiles"
                                            }
                                        },
                                        "required": [
                                            "igmpSnoopingEnabled",
                                            "floodUnknownMulticastTrafficEnabled"
                                        ]
                                    },
                                    "description": "Array of paired switches/stacks/profiles and corresponding multicast settings. An empty array will clear the multicast settings."
                                }
                            },
                            "example": {
                                "defaultSettings": {
                                    "igmpSnoopingEnabled": true,
                                    "floodUnknownMulticastTrafficEnabled": true
                                },
                                "overrides": [
                                    {
                                        "switches": [
                                            "Q234-ABCD-0001",
                                            "Q234-ABCD-0002",
                                            "Q234-ABCD-0003"
                                        ],
                                        "igmpSnoopingEnabled": true,
                                        "floodUnknownMulticastTrafficEnabled": true
                                    },
                                    {
                                        "stacks": [
                                            "789102",
                                            "123456",
                                            "129102"
                                        ],
                                        "igmpSnoopingEnabled": true,
                                        "floodUnknownMulticastTrafficEnabled": true
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "defaultSettings": {
                                    "igmpSnoopingEnabled": true,
                                    "floodUnknownMulticastTrafficEnabled": true
                                },
                                "overrides": [
                                    {
                                        "switches": [
                                            "Q234-ABCD-0001",
                                            "Q234-ABCD-0002",
                                            "Q234-ABCD-0003"
                                        ],
                                        "igmpSnoopingEnabled": true,
                                        "floodUnknownMulticastTrafficEnabled": true
                                    },
                                    {
                                        "stacks": [
                                            "789102",
                                            "123456",
                                            "129102"
                                        ],
                                        "igmpSnoopingEnabled": true,
                                        "floodUnknownMulticastTrafficEnabled": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update multicast settings for a network",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "multicast"
                ]
            }
        },
        "/networks/{networkId}/switch/settings/qosRules": {
            "get": {
                "description": "List quality of service rules",
                "operationId": "getNetworkSwitchSettingsQosRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1284392014819",
                                    "vlan": 100,
                                    "protocol": "TCP",
                                    "srcPort": 2000,
                                    "srcPortRange": null,
                                    "dstPort": null,
                                    "dstPortRange": "3000-3100",
                                    "dscp": 0
                                }
                            ]
                        }
                    }
                },
                "summary": "List quality of service rules",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "qosRules"
                ]
            },
            "post": {
                "description": "Add a quality of service rule",
                "operationId": "createNetworkSwitchSettingsQosRule",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkSwitchSettingsQosRule",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "vlan": {
                                    "type": "integer",
                                    "description": "The VLAN of the incoming packet. A null value will match any VLAN."
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "ANY",
                                        "TCP",
                                        "UDP"
                                    ],
                                    "description": "The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\""
                                },
                                "srcPort": {
                                    "type": "integer",
                                    "description": "The source port of the incoming packet. Applicable only if protocol is TCP or UDP."
                                },
                                "srcPortRange": {
                                    "type": "string",
                                    "description": "The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                                },
                                "dstPort": {
                                    "type": "integer",
                                    "description": "The destination port of the incoming packet. Applicable only if protocol is TCP or UDP."
                                },
                                "dstPortRange": {
                                    "type": "string",
                                    "description": "The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                                },
                                "dscp": {
                                    "type": "integer",
                                    "description": "DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0"
                                }
                            },
                            "example": {
                                "vlan": 100,
                                "protocol": "TCP",
                                "srcPort": 2000,
                                "srcPortRange": null,
                                "dstPort": null,
                                "dstPortRange": "3000-3100",
                                "dscp": 0
                            },
                            "required": [
                                "vlan"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "vlan": 100,
                                "protocol": "TCP",
                                "srcPort": 2000,
                                "srcPortRange": null,
                                "dstPort": null,
                                "dstPortRange": "3000-3100",
                                "dscp": 0
                            }
                        }
                    }
                },
                "summary": "Add a quality of service rule",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "qosRules"
                ]
            }
        },
        "/networks/{networkId}/switch/settings/qosRules/order": {
            "get": {
                "description": "Return the quality of service rule IDs by order in which they will be processed by the switch",
                "operationId": "getNetworkSwitchSettingsQosRulesOrder",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ruleIds": [
                                    "1284392014819",
                                    "2983092129865"
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the quality of service rule IDs by order in which they will be processed by the switch",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "qosRules",
                    "order"
                ]
            },
            "put": {
                "description": "Update the order in which the rules should be processed by the switch",
                "operationId": "updateNetworkSwitchSettingsQosRulesOrder",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchSettingsQosRulesOrder",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ruleIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of quality of service rule IDs arranged in order in which they should be processed by the switch."
                                }
                            },
                            "example": {
                                "ruleIds": [
                                    "1284392014819",
                                    "2983092129865"
                                ]
                            },
                            "required": [
                                "ruleIds"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ruleIds": [
                                    "1284392014819",
                                    "2983092129865"
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the order in which the rules should be processed by the switch",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "qosRules",
                    "order"
                ]
            }
        },
        "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}": {
            "get": {
                "description": "Return a quality of service rule",
                "operationId": "getNetworkSwitchSettingsQosRule",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "qosRuleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "vlan": 100,
                                "protocol": "TCP",
                                "srcPort": 2000,
                                "srcPortRange": null,
                                "dstPort": null,
                                "dstPortRange": "3000-3100",
                                "dscp": 0
                            }
                        }
                    }
                },
                "summary": "Return a quality of service rule",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "qosRules"
                ]
            },
            "delete": {
                "description": "Delete a quality of service rule",
                "operationId": "deleteNetworkSwitchSettingsQosRule",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "qosRuleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a quality of service rule",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "qosRules"
                ]
            },
            "put": {
                "description": "Update a quality of service rule",
                "operationId": "updateNetworkSwitchSettingsQosRule",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "qosRuleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchSettingsQosRule",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "vlan": {
                                    "type": "integer",
                                    "description": "The VLAN of the incoming packet. A null value will match any VLAN."
                                },
                                "protocol": {
                                    "type": "string",
                                    "enum": [
                                        "ANY",
                                        "TCP",
                                        "UDP"
                                    ],
                                    "description": "The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\"."
                                },
                                "srcPort": {
                                    "type": "integer",
                                    "description": "The source port of the incoming packet. Applicable only if protocol is TCP or UDP."
                                },
                                "srcPortRange": {
                                    "type": "string",
                                    "description": "The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                                },
                                "dstPort": {
                                    "type": "integer",
                                    "description": "The destination port of the incoming packet. Applicable only if protocol is TCP or UDP."
                                },
                                "dstPortRange": {
                                    "type": "string",
                                    "description": "The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                                },
                                "dscp": {
                                    "type": "integer",
                                    "description": "DSCP tag that should be assigned to incoming packet. Set this to -1 to trust incoming DSCP. Default value is 0."
                                }
                            },
                            "example": {
                                "vlan": 100,
                                "protocol": "TCP",
                                "srcPort": 2000,
                                "srcPortRange": null,
                                "dstPort": null,
                                "dstPortRange": "3000-3100",
                                "dscp": 0
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "vlan": 100,
                                "protocol": "TCP",
                                "srcPort": 2000,
                                "srcPortRange": null,
                                "dstPort": null,
                                "dstPortRange": "3000-3100",
                                "dscp": 0
                            }
                        }
                    }
                },
                "summary": "Update a quality of service rule",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "qosRules"
                ]
            }
        },
        "/networks/{networkId}/switch/settings/stormControl": {
            "get": {
                "description": "Return the storm control configuration for a switch network",
                "operationId": "getNetworkSwitchSettingsStormControl",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "broadcastThreshold": 30,
                                "multicastThreshold": 30,
                                "unknownUnicastThreshold": 30
                            }
                        }
                    }
                },
                "summary": "Return the storm control configuration for a switch network",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "stormControl"
                ]
            },
            "put": {
                "description": "Update the storm control configuration for a switch network",
                "operationId": "updateNetworkSwitchSettingsStormControl",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchSettingsStormControl",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "broadcastThreshold": {
                                    "type": "integer",
                                    "description": "Percentage (1 to 99) of total available port bandwidth for broadcast traffic type. Default value 100 percent rate is to clear the configuration."
                                },
                                "multicastThreshold": {
                                    "type": "integer",
                                    "description": "Percentage (1 to 99) of total available port bandwidth for multicast traffic type. Default value 100 percent rate is to clear the configuration."
                                },
                                "unknownUnicastThreshold": {
                                    "type": "integer",
                                    "description": "Percentage (1 to 99) of total available port bandwidth for unknown unicast (dlf-destination lookup failure) traffic type. Default value 100 percent rate is to clear the configuration."
                                }
                            },
                            "example": {
                                "broadcastThreshold": 30,
                                "multicastThreshold": 30,
                                "unknownUnicastThreshold": 30
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "broadcastThreshold": 30,
                                "multicastThreshold": 30,
                                "unknownUnicastThreshold": 30
                            }
                        }
                    }
                },
                "summary": "Update the storm control configuration for a switch network",
                "tags": [
                    "switch",
                    "configure",
                    "settings",
                    "stormControl"
                ]
            }
        },
        "/networks/{networkId}/switch/stp": {
            "get": {
                "description": "Returns STP settings",
                "operationId": "getNetworkSwitchStp",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Returns STP settings",
                "tags": [
                    "switch",
                    "configure",
                    "stp"
                ]
            },
            "put": {
                "description": "Updates STP settings",
                "operationId": "updateNetworkSwitchStp",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSwitchStp",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rstpEnabled": {
                                    "type": "boolean",
                                    "description": "The spanning tree protocol status in network"
                                },
                                "stpBridgePriority": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "switchProfiles": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of switch profile IDs"
                                            },
                                            "switches": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of switch serial numbers"
                                            },
                                            "stacks": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "List of stack IDs"
                                            },
                                            "stpPriority": {
                                                "type": "integer",
                                                "description": "STP priority for switch, stacks, or switch profiles"
                                            }
                                        },
                                        "required": [
                                            "stpPriority"
                                        ]
                                    },
                                    "description": "STP bridge priority for switches/stacks or switch profiles. An empty array will clear the STP bridge priority settings."
                                }
                            },
                            "example": {
                                "rstpEnabled": true,
                                "stpBridgePriority": [
                                    {
                                        "switches": [
                                            "Q234-ABCD-0001",
                                            "Q234-ABCD-0002",
                                            "Q234-ABCD-0003"
                                        ],
                                        "stpPriority": 4096
                                    },
                                    {
                                        "stacks": [
                                            "789102",
                                            "123456",
                                            "129102"
                                        ],
                                        "stpPriority": 28672
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rstpEnabled": true,
                                "stpBridgePriority": [
                                    {
                                        "switches": [
                                            "Q234-ABCD-0001",
                                            "Q234-ABCD-0002",
                                            "Q234-ABCD-0003"
                                        ],
                                        "stpPriority": 4096
                                    },
                                    {
                                        "stacks": [
                                            "789102",
                                            "123456",
                                            "129102"
                                        ],
                                        "stpPriority": 28672
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Updates STP settings",
                "tags": [
                    "switch",
                    "configure",
                    "stp"
                ]
            }
        },
        "/networks/{networkId}/switch/switchStacks": {
            "get": {
                "description": "List the switch stacks in a network",
                "operationId": "getNetworkSwitchSwitchStacks",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "8473",
                                    "name": "A cool stack",
                                    "serials": [
                                        "QBZY-XWVU-TSRQ",
                                        "QBAB-CDEF-GHIJ"
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "List the switch stacks in a network",
                "tags": [
                    "switch",
                    "configure",
                    "switchStacks"
                ]
            },
            "post": {
                "description": "Create a stack",
                "operationId": "createNetworkSwitchSwitchStack",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkSwitchSwitchStack",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new stack"
                                },
                                "serials": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "An array of switch serials to be added into the new stack"
                                }
                            },
                            "example": {
                                "name": "A cool stack",
                                "serials": [
                                    "QBZY-XWVU-TSRQ",
                                    "QBAB-CDEF-GHIJ"
                                ]
                            },
                            "required": [
                                "name",
                                "serials"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "8473",
                                "name": "A cool stack",
                                "serials": [
                                    "QBZY-XWVU-TSRQ",
                                    "QBAB-CDEF-GHIJ"
                                ]
                            }
                        }
                    }
                },
                "summary": "Create a stack",
                "tags": [
                    "switch",
                    "configure",
                    "switchStacks"
                ]
            }
        },
        "/networks/{networkId}/switch/switchStacks/{switchStackId}": {
            "get": {
                "description": "Show a switch stack",
                "operationId": "getNetworkSwitchSwitchStack",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "switchStackId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "8473",
                                "name": "A cool stack",
                                "serials": [
                                    "QBZY-XWVU-TSRQ",
                                    "QBAB-CDEF-GHIJ"
                                ]
                            }
                        }
                    }
                },
                "summary": "Show a switch stack",
                "tags": [
                    "switch",
                    "configure",
                    "switchStacks"
                ]
            },
            "delete": {
                "description": "Delete a stack",
                "operationId": "deleteNetworkSwitchSwitchStack",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "switchStackId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a stack",
                "tags": [
                    "switch",
                    "configure",
                    "switchStacks"
                ]
            }
        },
        "/networks/{networkId}/switch/switchStacks/{switchStackId}/add": {
            "post": {
                "description": "Add a switch to a stack",
                "operationId": "addNetworkSwitchSwitchStack",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "switchStackId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "addNetworkSwitchSwitchStack",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "serial": {
                                    "type": "string",
                                    "description": "The serial of the switch to be added"
                                }
                            },
                            "example": {
                                "serial": "QBZY-XWVU-TSRQ"
                            },
                            "required": [
                                "serial"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "8473",
                                "name": "A cool stack",
                                "serials": [
                                    "QBZY-XWVU-TSRQ",
                                    "QBAB-CDEF-GHIJ"
                                ]
                            }
                        }
                    }
                },
                "summary": "Add a switch to a stack",
                "tags": [
                    "switch",
                    "configure",
                    "switchStacks",
                    "add"
                ]
            }
        },
        "/networks/{networkId}/switch/switchStacks/{switchStackId}/remove": {
            "post": {
                "description": "Remove a switch from a stack",
                "operationId": "removeNetworkSwitchSwitchStack",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "switchStackId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "removeNetworkSwitchSwitchStack",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "serial": {
                                    "type": "string",
                                    "description": "The serial of the switch to be removed"
                                }
                            },
                            "example": {
                                "serial": "QBZY-XWVU-TSRQ"
                            },
                            "required": [
                                "serial"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "8473",
                                "name": "A cool stack",
                                "serials": [
                                    "QBAB-CDEF-GHIJ"
                                ]
                            }
                        }
                    }
                },
                "summary": "Remove a switch from a stack",
                "tags": [
                    "switch",
                    "configure",
                    "switchStacks",
                    "remove"
                ]
            }
        },
        "/networks/{networkId}/syslogServers": {
            "get": {
                "description": "List the syslog servers for a network",
                "operationId": "getNetworkSyslogServers",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "servers": [
                                    {
                                        "host": "1.2.3.4",
                                        "port": 443,
                                        "roles": [
                                            "Wireless event log",
                                            "URLs"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "List the syslog servers for a network",
                "tags": [
                    "networks",
                    "configure",
                    "syslogServers"
                ]
            },
            "put": {
                "description": "Update the syslog servers for a network",
                "operationId": "updateNetworkSyslogServers",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkSyslogServers",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "servers": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "host": {
                                                "type": "string",
                                                "description": "The IP address of the syslog server"
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "The port of the syslog server"
                                            },
                                            "roles": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'"
                                            }
                                        },
                                        "required": [
                                            "host",
                                            "port",
                                            "roles"
                                        ]
                                    },
                                    "description": "A list of the syslog servers for this network"
                                }
                            },
                            "example": {
                                "servers": [
                                    {
                                        "host": "1.2.3.4",
                                        "port": 443,
                                        "roles": [
                                            "Wireless event log",
                                            "URLs"
                                        ]
                                    }
                                ]
                            },
                            "required": [
                                "servers"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "servers": [
                                    {
                                        "host": "1.2.3.4",
                                        "port": 443,
                                        "roles": [
                                            "Wireless event log",
                                            "URLs"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the syslog servers for a network",
                "tags": [
                    "networks",
                    "configure",
                    "syslogServers"
                ]
            }
        },
        "/networks/{networkId}/traffic": {
            "get": {
                "description": "    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
                "operationId": "getNetworkTraffic",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days.",
                        "x-example": 604800
                    },
                    {
                        "type": "string",
                        "name": "deviceType",
                        "in": "query",
                        "description": "    Filter the data by device type: combined (default), wireless, switch, appliance.\n    When using combined, for each rule the data will come from the device type with the most usage.\n"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "application": "Gmail",
                                    "destination": null,
                                    "protocol": "TCP",
                                    "port": 443,
                                    "sent": 138,
                                    "recv": 61,
                                    "numClients": 7,
                                    "activeTime": 77000,
                                    "flows": 300
                                }
                            ]
                        }
                    }
                },
                "summary": "    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
                "tags": [
                    "networks",
                    "monitor",
                    "traffic"
                ]
            }
        },
        "/networks/{networkId}/trafficAnalysisSettings": {
            "get": {
                "description": "Return the traffic analysis settings for a network",
                "operationId": "getNetworkTrafficAnalysisSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mode": "detailed",
                                "customPieChartItems": [
                                    {
                                        "name": "Item from hostname",
                                        "type": "host",
                                        "value": "example.com"
                                    },
                                    {
                                        "name": "Item from port",
                                        "type": "port",
                                        "value": "440"
                                    },
                                    {
                                        "name": "Item from IP",
                                        "type": "ipRange",
                                        "value": "192.1.0.0"
                                    },
                                    {
                                        "name": "Item from IP range (CIDR)",
                                        "type": "ipRange",
                                        "value": "192.2.0.0/16"
                                    },
                                    {
                                        "name": "Item from IP range with port",
                                        "type": "ipRange",
                                        "value": "192.3.0.0/16:80"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the traffic analysis settings for a network",
                "tags": [
                    "networks",
                    "configure",
                    "trafficAnalysisSettings"
                ]
            },
            "put": {
                "description": "Update the traffic analysis settings for a network",
                "operationId": "updateNetworkTrafficAnalysisSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkTrafficAnalysisSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mode": {
                                    "type": "string",
                                    "enum": [
                                        "disabled",
                                        "basic",
                                        "detailed"
                                    ],
                                    "description": "    The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),\n    'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).\n"
                                },
                                "customPieChartItems": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the custom pie chart item."
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "host",
                                                    "port",
                                                    "ipRange"
                                                ],
                                                "description": "    The signature type for the custom pie chart item. Can be one of 'host', 'port' or 'ipRange'.\n"
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "    The value of the custom pie chart item. Valid syntax depends on the signature type of the chart item\n    (see sample request/response for more details).\n"
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "type",
                                            "value"
                                        ]
                                    },
                                    "description": "The list of items that make up the custom pie chart for traffic reporting."
                                }
                            },
                            "example": {
                                "mode": "detailed",
                                "customPieChartItems": [
                                    {
                                        "name": "Item from hostname",
                                        "type": "host",
                                        "value": "example.com"
                                    },
                                    {
                                        "name": "Item from port",
                                        "type": "port",
                                        "value": "440"
                                    },
                                    {
                                        "name": "Item from IP",
                                        "type": "ipRange",
                                        "value": "192.1.0.0"
                                    },
                                    {
                                        "name": "Item from IP range (CIDR)",
                                        "type": "ipRange",
                                        "value": "192.2.0.0/16"
                                    },
                                    {
                                        "name": "Item from IP range with port",
                                        "type": "ipRange",
                                        "value": "192.3.0.0/16:80"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mode": "detailed",
                                "customPieChartItems": [
                                    {
                                        "name": "Item from hostname",
                                        "type": "host",
                                        "value": "example.com"
                                    },
                                    {
                                        "name": "Item from port",
                                        "type": "port",
                                        "value": "440"
                                    },
                                    {
                                        "name": "Item from IP",
                                        "type": "ipRange",
                                        "value": "192.1.0.0"
                                    },
                                    {
                                        "name": "Item from IP range (CIDR)",
                                        "type": "ipRange",
                                        "value": "192.2.0.0/16"
                                    },
                                    {
                                        "name": "Item from IP range with port",
                                        "type": "ipRange",
                                        "value": "192.3.0.0/16:80"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the traffic analysis settings for a network",
                "tags": [
                    "networks",
                    "configure",
                    "trafficAnalysisSettings"
                ]
            }
        },
        "/networks/{networkId}/trafficShaping": {
            "put": {
                "description": "Update the traffic shaping settings for an MX network",
                "operationId": "updateNetworkTrafficShaping",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkTrafficShaping",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "defaultRulesEnabled": {
                                    "type": "boolean",
                                    "description": "    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n"
                                },
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "definitions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "application",
                                                                "applicationCategory",
                                                                "host",
                                                                "port",
                                                                "ipRange",
                                                                "localNet"
                                                            ],
                                                            "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'."
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    operation).\n"
                                                        }
                                                    },
                                                    "required": [
                                                        "type",
                                                        "value"
                                                    ]
                                                },
                                                "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n"
                                            },
                                            "perClientBandwidthLimits": {
                                                "type": "object",
                                                "properties": {
                                                    "settings": {
                                                        "type": "string",
                                                        "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                                                    },
                                                    "bandwidthLimits": {
                                                        "type": "object",
                                                        "properties": {
                                                            "limitUp": {
                                                                "type": "integer",
                                                                "description": "The maximum upload limit (integer, in Kbps)."
                                                            },
                                                            "limitDown": {
                                                                "type": "integer",
                                                                "description": "The maximum download limit (integer, in Kbps)."
                                                            }
                                                        },
                                                        "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                                                    }
                                                },
                                                "description": "    An object describing the bandwidth settings for your rule.\n"
                                            },
                                            "dscpTagValue": {
                                                "type": "integer",
                                                "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions operation.\n"
                                            },
                                            "priority": {
                                                "type": "string",
                                                "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                                            }
                                        },
                                        "required": [
                                            "definitions"
                                        ]
                                    },
                                    "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                                }
                            },
                            "example": {
                                "defaultRulesEnabled": true,
                                "rules": [
                                    {
                                        "definitions": [
                                            {
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "priority": "normal"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "defaultRulesEnabled": true,
                                "rules": [
                                    {
                                        "definitions": [
                                            {
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "priority": "normal"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the traffic shaping settings for an MX network",
                "tags": [
                    "networks",
                    "configure",
                    "trafficShaping"
                ]
            },
            "get": {
                "description": "Display the traffic shaping settings for an MX network",
                "operationId": "getNetworkTrafficShaping",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "defaultRulesEnabled": true,
                                "rules": [
                                    {
                                        "definitions": [
                                            {
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "priority": "normal"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Display the traffic shaping settings for an MX network",
                "tags": [
                    "networks",
                    "configure",
                    "trafficShaping"
                ]
            }
        },
        "/networks/{networkId}/trafficShaping/applicationCategories": {
            "get": {
                "description": "Returns the application categories for traffic shaping rules.",
                "operationId": "getNetworkTrafficShapingApplicationCategories",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "applicationCategories": [
                                        {
                                            "id": "meraki:layer7/category/24",
                                            "name": "Advertising",
                                            "applications": [
                                                {
                                                    "id": "meraki:layer7/application/5",
                                                    "name": "Advertising.com"
                                                },
                                                {
                                                    "id": "meraki:layer7/application/0",
                                                    "name": "AppNexus"
                                                },
                                                {
                                                    "id": "meraki:layer7/application/1",
                                                    "name": "Brightroll"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "Returns the application categories for traffic shaping rules.",
                "tags": [
                    "networks",
                    "configure",
                    "trafficShaping",
                    "applicationCategories"
                ]
            }
        },
        "/networks/{networkId}/trafficShaping/dscpTaggingOptions": {
            "get": {
                "description": "Returns the available DSCP tagging options for your traffic shaping rules.",
                "operationId": "getNetworkTrafficShapingDscpTaggingOptions",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "dscpTagValue": 10,
                                    "description": "AF11 - High Throughput, Latency Insensitive, Low Drop"
                                },
                                {
                                    "dscpTagValue": 12,
                                    "description": "AF12 - High Throughput, Latency Insensitive, Medium Drop"
                                },
                                {
                                    "dscpTagValue": 14,
                                    "description": "AF13 - High Throughput, Latency Insensitive, High Drop"
                                },
                                {
                                    "dscpTagValue": 18,
                                    "description": "AF21 - Low Latency Data, Low Drop"
                                }
                            ]
                        }
                    }
                },
                "summary": "Returns the available DSCP tagging options for your traffic shaping rules.",
                "tags": [
                    "networks",
                    "configure",
                    "trafficShaping",
                    "dscpTaggingOptions"
                ]
            }
        },
        "/networks/{networkId}/unbind": {
            "post": {
                "description": "Unbind a network from a template.",
                "operationId": "unbindNetwork",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": " tag1 tag2 ",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Unbind a network from a template.",
                "tags": [
                    "networks",
                    "configure",
                    "unbind"
                ]
            }
        },
        "/networks/{networkId}/warmSpareSettings": {
            "get": {
                "description": "Return MX warm spare settings",
                "operationId": "getNetworkWarmSpareSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "enabled": true,
                                "primarySerial": "Q234-ABCD-5678",
                                "spareSerial": "Q234-ABCD-5678",
                                "uplinkMode": "virtual",
                                "wan1": {
                                    "ip": "1.2.3.4",
                                    "subnet": "192.168.1.0/24"
                                },
                                "wan2": {
                                    "ip": "1.2.3.4",
                                    "subnet": "192.168.128.0/24"
                                }
                            }
                        }
                    }
                },
                "summary": "Return MX warm spare settings",
                "tags": [
                    "networks",
                    "configure",
                    "warmSpareSettings"
                ]
            },
            "put": {
                "description": "Update MX warm spare settings",
                "operationId": "updateNetworkWarmSpareSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkWarmSpareSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable warm spare"
                                },
                                "spareSerial": {
                                    "type": "string",
                                    "description": "Serial number of the warm spare appliance"
                                },
                                "uplinkMode": {
                                    "type": "string",
                                    "description": "Uplink mode, either virtual or public"
                                },
                                "virtualIp1": {
                                    "type": "string",
                                    "description": "The WAN 1 shared IP"
                                },
                                "virtualIp2": {
                                    "type": "string",
                                    "description": "The WAN 2 shared IP"
                                }
                            },
                            "example": {
                                "enabled": true,
                                "spareSerial": "Q234-ABCD-5678",
                                "uplinkMode": "virtual",
                                "virtualIp1": "1.2.3.4",
                                "virtualIp2": "1.2.3.4"
                            },
                            "required": [
                                "enabled"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "enabled": true,
                                "primarySerial": "Q234-ABCD-5678",
                                "spareSerial": "Q234-ABCD-5678",
                                "uplinkMode": "virtual",
                                "wan1": {
                                    "ip": "1.2.3.4",
                                    "subnet": "192.168.1.0/24"
                                },
                                "wan2": {
                                    "ip": "1.2.3.4",
                                    "subnet": "192.168.128.0/24"
                                }
                            }
                        }
                    }
                },
                "summary": "Update MX warm spare settings",
                "tags": [
                    "networks",
                    "configure",
                    "warmSpareSettings"
                ]
            }
        },
        "/networks/{networkId}/wireless/airMarshal": {
            "get": {
                "description": "List Air Marshal scan results from a network",
                "operationId": "getNetworkWirelessAirMarshal",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "ssid": "linksys",
                                    "bssids": [
                                        {
                                            "bssid": "00:11:22:33:44:55",
                                            "contained": false,
                                            "detectedBy": [
                                                {
                                                    "device": "Q234-ABCD-5678",
                                                    "rssi": 17
                                                }
                                            ]
                                        }
                                    ],
                                    "channels": [
                                        36,
                                        40
                                    ],
                                    "firstSeen": 1518365681,
                                    "lastSeen": 1526087474,
                                    "wiredMacs": [
                                        "00:11:22:33:44:55"
                                    ],
                                    "wiredVlans": [
                                        0,
                                        108
                                    ],
                                    "wiredLastSeen": 1526087474
                                }
                            ]
                        }
                    }
                },
                "summary": "List Air Marshal scan results from a network",
                "tags": [
                    "wireless",
                    "monitor",
                    "airMarshal"
                ]
            }
        },
        "/networks/{networkId}/wireless/bluetooth/settings": {
            "get": {
                "description": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.",
                "operationId": "getNetworkWirelessBluetoothSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.",
                "tags": [
                    "wireless",
                    "configure",
                    "bluetooth",
                    "settings"
                ]
            },
            "put": {
                "description": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.",
                "operationId": "updateNetworkWirelessBluetoothSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkWirelessBluetoothSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "scanningEnabled": {
                                    "type": "boolean",
                                    "description": "Whether APs will scan for Bluetooth enabled clients. (true, false)"
                                },
                                "advertisingEnabled": {
                                    "type": "boolean",
                                    "description": "Whether APs will advertise beacons. (true, false)"
                                },
                                "uuid": {
                                    "type": "string",
                                    "description": "The UUID to be used in the beacon identifier."
                                },
                                "majorMinorAssignmentMode": {
                                    "type": "string",
                                    "enum": [
                                        "Unique",
                                        "Non-unique"
                                    ],
                                    "description": "The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')"
                                },
                                "major": {
                                    "type": "integer",
                                    "description": "The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode."
                                },
                                "minor": {
                                    "type": "integer",
                                    "description": "The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode."
                                }
                            },
                            "example": {
                                "scanningEnabled": true,
                                "advertisingEnabled": true,
                                "uuid": "00000000-0000-0000-000-000000000000",
                                "majorMinorAssignmentMode": "Non-unique",
                                "major": 1
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.",
                "tags": [
                    "wireless",
                    "configure",
                    "bluetooth",
                    "settings"
                ]
            }
        },
        "/networks/{networkId}/wireless/clients/connectionStats": {
            "get": {
                "description": "Aggregated connectivity info for this network, grouped by clients",
                "operationId": "getNetworkWirelessClientsConnectionStats",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "mac": "00:61:71:c8:51:27",
                                    "connectionStats": {
                                        "assoc": 0,
                                        "auth": 4,
                                        "dhcp": 0,
                                        "dns": 0,
                                        "success": 10
                                    }
                                },
                                {
                                    "mac": "1c:4d:70:7f:5e:5e",
                                    "connectionStats": {
                                        "assoc": 0,
                                        "auth": 1,
                                        "dhcp": 0,
                                        "dns": 0,
                                        "success": 24
                                    }
                                },
                                {
                                    "mac": "1c:4d:70:81:8d:0a",
                                    "connectionStats": {
                                        "assoc": 1,
                                        "auth": 0,
                                        "dhcp": 0,
                                        "dns": 0,
                                        "success": 16
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "Aggregated connectivity info for this network, grouped by clients",
                "tags": [
                    "wireless",
                    "monitor",
                    "clients",
                    "connectionStats"
                ]
            }
        },
        "/networks/{networkId}/wireless/clients/latencyStats": {
            "get": {
                "description": "Aggregated latency info for this network, grouped by clients",
                "operationId": "getNetworkWirelessClientsLatencyStats",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    },
                    {
                        "type": "string",
                        "name": "fields",
                        "in": "query",
                        "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "mac": "00:61:71:c8:51:27",
                                    "latencyStats": {
                                        "backgroundTraffic": {
                                            "rawDistribution": {
                                                "0": 1234,
                                                "1": 2345,
                                                "2": 3456,
                                                "4": 4567,
                                                "8": 5678,
                                                "16": 6789,
                                                "32": 7890,
                                                "64": 8901,
                                                "128": 9012,
                                                "256": 83,
                                                "512": 1234,
                                                "1024": 2345,
                                                "2048": 9999
                                            },
                                            "avg": 606.52
                                        },
                                        "bestEffortTraffic": "same shape as backgroundTraffic",
                                        "videoTraffic": "same shape as backgroundTraffic",
                                        "voiceTraffic": "same shape as backgroundTraffic"
                                    }
                                },
                                {
                                    "mac": "1c:4d:70:7f:5e:5e",
                                    "latencyStats": {
                                        "backgroundTraffic": {
                                            "rawDistribution": {
                                                "0": 1234,
                                                "1": 2345,
                                                "2": 3456,
                                                "4": 4567,
                                                "8": 5678,
                                                "16": 6789,
                                                "32": 7890,
                                                "64": 8901,
                                                "128": 9012,
                                                "256": 83,
                                                "512": 1234,
                                                "1024": 2345,
                                                "2048": 9999
                                            },
                                            "avg": 606.52
                                        },
                                        "bestEffortTraffic": "same shape as backgroundTraffic",
                                        "videoTraffic": "same shape as backgroundTraffic",
                                        "voiceTraffic": "same shape as backgroundTraffic"
                                    }
                                },
                                {
                                    "mac": "1c:4d:70:81:8d:0a",
                                    "latencyStats": {
                                        "backgroundTraffic": {
                                            "rawDistribution": {
                                                "0": 1234,
                                                "1": 2345,
                                                "2": 3456,
                                                "4": 4567,
                                                "8": 5678,
                                                "16": 6789,
                                                "32": 7890,
                                                "64": 8901,
                                                "128": 9012,
                                                "256": 83,
                                                "512": 1234,
                                                "1024": 2345,
                                                "2048": 9999
                                            },
                                            "avg": 606.52
                                        },
                                        "bestEffortTraffic": "same shape as backgroundTraffic",
                                        "videoTraffic": "same shape as backgroundTraffic",
                                        "voiceTraffic": "same shape as backgroundTraffic"
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "Aggregated latency info for this network, grouped by clients",
                "tags": [
                    "wireless",
                    "monitor",
                    "clients",
                    "latencyStats"
                ]
            }
        },
        "/networks/{networkId}/wireless/clients/{clientId}/connectionStats": {
            "get": {
                "description": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.",
                "operationId": "getNetworkWirelessClientConnectionStats",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mac": "00:61:71:c8:51:27",
                                "connectionStats": {
                                    "assoc": 0,
                                    "auth": 4,
                                    "dhcp": 0,
                                    "dns": 0,
                                    "success": 10
                                }
                            }
                        }
                    }
                },
                "summary": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.",
                "tags": [
                    "wireless",
                    "monitor",
                    "clients",
                    "connectionStats"
                ]
            }
        },
        "/networks/{networkId}/wireless/clients/{clientId}/latencyHistory": {
            "get": {
                "description": "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.",
                "operationId": "getNetworkWirelessClientLatencyHistory",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day.",
                        "x-example": 7200
                    },
                    {
                        "type": "integer",
                        "name": "resolution",
                        "in": "query",
                        "description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "t0": 1550534400,
                                    "t1": 1550620800,
                                    "latencyBinsByCategory": {
                                        "backgroundTraffic": {
                                            "0.5": 41750,
                                            "1.0": 21552,
                                            "2.0": 59940,
                                            "4.0": 146622,
                                            "8.0": 57354,
                                            "16.0": 0,
                                            "32.0": 9954,
                                            "64.0": 0,
                                            "128.0": 0,
                                            "256.0": 1896,
                                            "512.0": 0,
                                            "1024.0": 0,
                                            "2048.0": 0
                                        },
                                        "bestEffortTraffic": {
                                            "0.5": 1840899,
                                            "1.0": 1644506,
                                            "2.0": 629958,
                                            "4.0": 449564,
                                            "8.0": 2009658,
                                            "16.0": 1329568,
                                            "32.0": 282168,
                                            "64.0": 97573,
                                            "128.0": 191977,
                                            "256.0": 30560,
                                            "512.0": 26032,
                                            "1024.0": 4943,
                                            "2048.0": 12072
                                        },
                                        "videoTraffic": {
                                            "0.5": 0,
                                            "1.0": 0,
                                            "2.0": 0,
                                            "4.0": 0,
                                            "8.0": 0,
                                            "16.0": 0,
                                            "32.0": 0,
                                            "64.0": 0,
                                            "128.0": 0,
                                            "256.0": 0,
                                            "512.0": 0,
                                            "1024.0": 0,
                                            "2048.0": 0
                                        },
                                        "voiceTraffic": {
                                            "0.5": 716,
                                            "1.0": 948,
                                            "2.0": 474,
                                            "4.0": 78,
                                            "8.0": 0,
                                            "16.0": 0,
                                            "32.0": 0,
                                            "64.0": 0,
                                            "128.0": 0,
                                            "256.0": 0,
                                            "512.0": 0,
                                            "1024.0": 0,
                                            "2048.0": 0
                                        }
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.",
                "tags": [
                    "wireless",
                    "monitor",
                    "clients",
                    "latencyHistory"
                ]
            }
        },
        "/networks/{networkId}/wireless/clients/{clientId}/latencyStats": {
            "get": {
                "description": "Aggregated latency info for a given client on this network. Clients are identified by their MAC.",
                "operationId": "getNetworkWirelessClientLatencyStats",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    },
                    {
                        "type": "string",
                        "name": "fields",
                        "in": "query",
                        "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "mac": "00:61:71:c8:51:27",
                                "latencyStats": {
                                    "backgroundTraffic": {
                                        "rawDistribution": {
                                            "0": 1234,
                                            "1": 2345,
                                            "2": 3456,
                                            "4": 4567,
                                            "8": 5678,
                                            "16": 6789,
                                            "32": 7890,
                                            "64": 8901,
                                            "128": 9012,
                                            "256": 83,
                                            "512": 1234,
                                            "1024": 2345,
                                            "2048": 9999
                                        },
                                        "avg": 606.52
                                    },
                                    "bestEffortTraffic": "same shape as backgroundTraffic",
                                    "videoTraffic": "same shape as backgroundTraffic",
                                    "voiceTraffic": "same shape as backgroundTraffic"
                                }
                            }
                        }
                    }
                },
                "summary": "Aggregated latency info for a given client on this network. Clients are identified by their MAC.",
                "tags": [
                    "wireless",
                    "monitor",
                    "clients",
                    "latencyStats"
                ]
            }
        },
        "/networks/{networkId}/wireless/connectionStats": {
            "get": {
                "description": "Aggregated connectivity info for this network",
                "operationId": "getNetworkWirelessConnectionStats",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "assoc": 1,
                                "auth": 5,
                                "dhcp": 0,
                                "dns": 0,
                                "success": 51
                            }
                        }
                    }
                },
                "summary": "Aggregated connectivity info for this network",
                "tags": [
                    "wireless",
                    "monitor",
                    "connectionStats"
                ]
            }
        },
        "/networks/{networkId}/wireless/devices/connectionStats": {
            "get": {
                "description": "Aggregated connectivity info for this network, grouped by node",
                "operationId": "getNetworkWirelessDevicesConnectionStats",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "serial": "Q2JC-2MJM-FHRD",
                                    "connectionStats": {
                                        "assoc": 0,
                                        "auth": 1,
                                        "dhcp": 0,
                                        "dns": 0,
                                        "success": 43
                                    }
                                },
                                {
                                    "serial": "Q2FJ-3SHB-Y2K2",
                                    "connectionStats": {
                                        "assoc": 1,
                                        "auth": 4,
                                        "dhcp": 0,
                                        "dns": 0,
                                        "success": 8
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "Aggregated connectivity info for this network, grouped by node",
                "tags": [
                    "wireless",
                    "monitor",
                    "devices",
                    "connectionStats"
                ]
            }
        },
        "/networks/{networkId}/wireless/devices/latencyStats": {
            "get": {
                "description": "Aggregated latency info for this network, grouped by node",
                "operationId": "getNetworkWirelessDevicesLatencyStats",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    },
                    {
                        "type": "string",
                        "name": "fields",
                        "in": "query",
                        "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "serial": "Q2JC-2MJM-FHRD",
                                    "latencyStats": {
                                        "backgroundTraffic": {
                                            "rawDistribution": {
                                                "0": 1234,
                                                "1": 2345,
                                                "2": 3456,
                                                "4": 4567,
                                                "8": 5678,
                                                "16": 6789,
                                                "32": 7890,
                                                "64": 8901,
                                                "128": 9012,
                                                "256": 83,
                                                "512": 1234,
                                                "1024": 2345,
                                                "2048": 9999
                                            },
                                            "avg": 606.52
                                        },
                                        "bestEffortTraffic": "same shape as backgroundTraffic",
                                        "videoTraffic": "same shape as backgroundTraffic",
                                        "voiceTraffic": "same shape as backgroundTraffic"
                                    }
                                },
                                {
                                    "serial": "Q2FJ-3SHB-Y2K2",
                                    "latencyStats": {
                                        "backgroundTraffic": {
                                            "rawDistribution": {
                                                "0": 1234,
                                                "1": 2345,
                                                "2": 3456,
                                                "4": 4567,
                                                "8": 5678,
                                                "16": 6789,
                                                "32": 7890,
                                                "64": 8901,
                                                "128": 9012,
                                                "256": 83,
                                                "512": 1234,
                                                "1024": 2345,
                                                "2048": 9999
                                            },
                                            "avg": 606.52
                                        },
                                        "bestEffortTraffic": "same shape as backgroundTraffic",
                                        "videoTraffic": "same shape as backgroundTraffic",
                                        "voiceTraffic": "same shape as backgroundTraffic"
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "Aggregated latency info for this network, grouped by node",
                "tags": [
                    "wireless",
                    "monitor",
                    "devices",
                    "latencyStats"
                ]
            }
        },
        "/networks/{networkId}/wireless/failedConnections": {
            "get": {
                "description": "List of all failed client connection events on this network in a given time range",
                "operationId": "getNetworkWirelessFailedConnections",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    },
                    {
                        "type": "string",
                        "name": "serial",
                        "in": "query",
                        "description": "Filter by AP"
                    },
                    {
                        "type": "string",
                        "name": "clientId",
                        "in": "query",
                        "description": "Filter by client MAC"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "ssidNumber": 0,
                                    "vlan": -1,
                                    "clientMac": "00:61:71:c8:51:27",
                                    "serial": "Q2JC-2MJM-FHRD",
                                    "failureStep": "auth",
                                    "type": "802.1X auth fail",
                                    "ts": "2018-02-11T00:00:00.090210Z"
                                },
                                {
                                    "ssidNumber": 0,
                                    "vlan": -1,
                                    "clientMac": "00:61:71:c8:51:27",
                                    "nodeId": "Q2FJ-3SHB-Y2K2",
                                    "failureStep": "auth",
                                    "type": "802.1X auth fail",
                                    "ts": "2018-02-11T00:00:00.090210Z"
                                },
                                {
                                    "ssidNumber": 0,
                                    "vlan": -1,
                                    "clientMac": "00:61:71:c8:51:27",
                                    "nodeId": "Q2FJ-3SHB-Y2K2",
                                    "failureStep": "auth",
                                    "type": "802.1X auth fail",
                                    "ts": "2018-02-11T00:00:00.090210Z"
                                },
                                {
                                    "ssidNumber": 0,
                                    "vlan": -1,
                                    "clientMac": "00:61:71:c8:51:27",
                                    "nodeId": "Q2FJ-3SHB-Y2K2",
                                    "failureStep": "auth",
                                    "type": "802.1X auth fail",
                                    "ts": "2018-02-11T00:00:00.090210Z"
                                },
                                {
                                    "ssidNumber": 0,
                                    "vlan": -1,
                                    "clientMac": "1c:4d:70:7f:5e:5e",
                                    "nodeId": "Q2FJ-3SHB-Y2K2",
                                    "failureStep": "assoc",
                                    "type": "802.1X auth fail",
                                    "ts": "2018-02-11T00:00:00.090210Z"
                                },
                                {
                                    "ssidNumber": 0,
                                    "vlan": -1,
                                    "clientMac": "1c:4d:70:81:8d:0a",
                                    "nodeId": "Q2FJ-3SHB-Y2K2",
                                    "failureStep": "auth",
                                    "type": "802.1X auth fail",
                                    "ts": "2018-02-11T00:00:00.090210Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "List of all failed client connection events on this network in a given time range",
                "tags": [
                    "wireless",
                    "monitor",
                    "failedConnections"
                ]
            }
        },
        "/networks/{networkId}/wireless/latencyStats": {
            "get": {
                "description": "Aggregated latency info for this network",
                "operationId": "getNetworkWirelessLatencyStats",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
                    },
                    {
                        "type": "integer",
                        "name": "ssid",
                        "in": "query",
                        "description": "Filter results by SSID"
                    },
                    {
                        "type": "integer",
                        "name": "vlan",
                        "in": "query",
                        "description": "Filter results by VLAN"
                    },
                    {
                        "type": "string",
                        "name": "apTag",
                        "in": "query",
                        "description": "Filter results by AP Tag"
                    },
                    {
                        "type": "string",
                        "name": "fields",
                        "in": "query",
                        "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "backgroundTraffic": {
                                    "rawDistribution": {
                                        "0": 1234,
                                        "1": 2345,
                                        "2": 3456,
                                        "4": 4567,
                                        "8": 5678,
                                        "16": 6789,
                                        "32": 7890,
                                        "64": 8901,
                                        "128": 9012,
                                        "256": 83,
                                        "512": 1234,
                                        "1024": 2345,
                                        "2048": 9999
                                    },
                                    "avg": 606.52
                                },
                                "bestEffortTraffic": "same shape as backgroundTraffic",
                                "videoTraffic": "same shape as backgroundTraffic",
                                "voiceTraffic": "same shape as backgroundTraffic"
                            }
                        }
                    }
                },
                "summary": "Aggregated latency info for this network",
                "tags": [
                    "wireless",
                    "monitor",
                    "latencyStats"
                ]
            }
        },
        "/networks/{networkId}/wireless/rfProfiles": {
            "get": {
                "description": "List the non-basic RF profiles for this network",
                "operationId": "getNetworkWirelessRfProfiles",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "includeTemplateProfiles",
                        "in": "query",
                        "description": "    If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template\n    should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.\n"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1234",
                                    "networkId": "N_24329156",
                                    "name": "Some Custom RF Profile",
                                    "clientBalancingEnabled": true,
                                    "minBitrateType": "band",
                                    "bandSelectionType": "ap",
                                    "apSelectionSettings": {
                                        "bandOperationMode": "dual",
                                        "bandSteeringEnabled": true
                                    },
                                    "twoFourGhzSettings": {
                                        "maxPower": 30,
                                        "minPower": 5,
                                        "minBitrate": 11,
                                        "rxsop": null,
                                        "validAutoChannels": [
                                            1,
                                            6,
                                            11
                                        ],
                                        "axEnabled": true
                                    },
                                    "fiveGhzSettings": {
                                        "maxPower": 30,
                                        "minPower": 8,
                                        "minBitrate": 12,
                                        "rxsop": null,
                                        "validAutoChannels": [
                                            36,
                                            40,
                                            44,
                                            48,
                                            52,
                                            56,
                                            60,
                                            64,
                                            100,
                                            104,
                                            108,
                                            112,
                                            116,
                                            120,
                                            124,
                                            128,
                                            132,
                                            136,
                                            140,
                                            144,
                                            149,
                                            153,
                                            157,
                                            161,
                                            165
                                        ],
                                        "channelWidth": "auto"
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "List the non-basic RF profiles for this network",
                "tags": [
                    "wireless",
                    "configure",
                    "rfProfiles"
                ]
            },
            "post": {
                "description": "Creates new RF profile for this network",
                "operationId": "createNetworkWirelessRfProfile",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkWirelessRfProfile",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new profile. Must be unique. This param is required on creation."
                                },
                                "clientBalancingEnabled": {
                                    "type": "boolean",
                                    "description": "Steers client to best available access point. Can be either true or false. Defaults to true."
                                },
                                "minBitrateType": {
                                    "type": "string",
                                    "enum": [
                                        "band",
                                        "ssid"
                                    ],
                                    "description": "Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band."
                                },
                                "bandSelectionType": {
                                    "type": "string",
                                    "enum": [
                                        "ssid",
                                        "ap"
                                    ],
                                    "description": "Band selection can be set to either 'ssid' or 'ap'. This param is required on creation."
                                },
                                "apBandSettings": {
                                    "type": "object",
                                    "properties": {
                                        "bandOperationMode": {
                                            "type": "string",
                                            "enum": [
                                                "dual",
                                                "2.4ghz",
                                                "5ghz"
                                            ],
                                            "description": "Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual."
                                        },
                                        "bandSteeringEnabled": {
                                            "type": "boolean",
                                            "description": "Steers client to most open band. Can be either true or false. Defaults to true."
                                        }
                                    },
                                    "description": "Settings that will be enabled if selectionType is set to 'ap'."
                                },
                                "twoFourGhzSettings": {
                                    "type": "object",
                                    "properties": {
                                        "maxPower": {
                                            "type": "integer",
                                            "description": "Sets max power (dBm) of 2.4Ghz band. Can be integer between 5 and 30. Defaults to 30."
                                        },
                                        "minPower": {
                                            "type": "integer",
                                            "description": "Sets min power (dBm) of 2.4Ghz band. Can be integer between 5 and 30. Defaults to 5."
                                        },
                                        "minBitrate": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11."
                                        },
                                        "validAutoChannels": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "description": "Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11]."
                                        },
                                        "axEnabled": {
                                            "type": "boolean",
                                            "description": "Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true."
                                        },
                                        "rxsop": {
                                            "type": "integer",
                                            "description": "    The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after\n    consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will\n    reset this to the default.\n"
                                        }
                                    },
                                    "description": "Settings related to 2.4Ghz band"
                                },
                                "fiveGhzSettings": {
                                    "type": "object",
                                    "properties": {
                                        "maxPower": {
                                            "type": "integer",
                                            "description": "Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30. Defaults to 30."
                                        },
                                        "minPower": {
                                            "type": "integer",
                                            "description": "Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30. Defaults to 8."
                                        },
                                        "minBitrate": {
                                            "type": "integer",
                                            "description": "Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12."
                                        },
                                        "validAutoChannels": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "description": "Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165]."
                                        },
                                        "channelWidth": {
                                            "type": "string",
                                            "description": "Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'. Defaults to auto."
                                        },
                                        "rxsop": {
                                            "type": "integer",
                                            "description": "    The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after\n    consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will\n    reset this to the default.\n"
                                        }
                                    },
                                    "description": "Settings related to 5Ghz band"
                                }
                            },
                            "example": {},
                            "required": [
                                "name",
                                "bandSelectionType"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "Some Custom RF Profile",
                                "clientBalancingEnabled": true,
                                "minBitrateType": "band",
                                "bandSelectionType": "ap",
                                "apSelectionSettings": {
                                    "bandOperationMode": "dual",
                                    "bandSteeringEnabled": true
                                },
                                "twoFourGhzSettings": {
                                    "maxPower": 30,
                                    "minPower": 5,
                                    "minBitrate": 11,
                                    "rxsop": null,
                                    "validAutoChannels": [
                                        1,
                                        6,
                                        11
                                    ],
                                    "axEnabled": true
                                },
                                "fiveGhzSettings": {
                                    "maxPower": 30,
                                    "minPower": 8,
                                    "minBitrate": 12,
                                    "rxsop": null,
                                    "validAutoChannels": [
                                        36,
                                        40,
                                        44,
                                        48,
                                        52,
                                        56,
                                        60,
                                        64,
                                        100,
                                        104,
                                        108,
                                        112,
                                        116,
                                        120,
                                        124,
                                        128,
                                        132,
                                        136,
                                        140,
                                        144,
                                        149,
                                        153,
                                        157,
                                        161,
                                        165
                                    ],
                                    "channelWidth": "auto"
                                }
                            }
                        }
                    }
                },
                "summary": "Creates new RF profile for this network",
                "tags": [
                    "wireless",
                    "configure",
                    "rfProfiles"
                ]
            }
        },
        "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}": {
            "put": {
                "description": "Updates specified RF profile for this network",
                "operationId": "updateNetworkWirelessRfProfile",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "rfProfileId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkWirelessRfProfile",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new profile. Must be unique."
                                },
                                "clientBalancingEnabled": {
                                    "type": "boolean",
                                    "description": "Steers client to best available access point. Can be either true or false."
                                },
                                "minBitrateType": {
                                    "type": "string",
                                    "enum": [
                                        "band",
                                        "ssid"
                                    ],
                                    "description": "Minimum bitrate can be set to either 'band' or 'ssid'."
                                },
                                "bandSelectionType": {
                                    "type": "string",
                                    "enum": [
                                        "ssid",
                                        "ap"
                                    ],
                                    "description": "Band selection can be set to either 'ssid' or 'ap'."
                                },
                                "apBandSettings": {
                                    "type": "object",
                                    "properties": {
                                        "bandOperationMode": {
                                            "type": "string",
                                            "enum": [
                                                "dual",
                                                "2.4ghz",
                                                "5ghz"
                                            ],
                                            "description": "Choice between 'dual', '2.4ghz' or '5ghz'."
                                        },
                                        "bandSteeringEnabled": {
                                            "type": "boolean",
                                            "description": "Steers client to most open band. Can be either true or false."
                                        }
                                    },
                                    "description": "Settings that will be enabled if selectionType is set to 'ap'."
                                },
                                "twoFourGhzSettings": {
                                    "type": "object",
                                    "properties": {
                                        "maxPower": {
                                            "type": "integer",
                                            "description": "Sets max power (dBm) of 2.4Ghz band. Can be integer between 5 and 30."
                                        },
                                        "minPower": {
                                            "type": "integer",
                                            "description": "Sets min power (dBm) of 2.4Ghz band. Can be integer between 5 and 30."
                                        },
                                        "minBitrate": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'."
                                        },
                                        "validAutoChannels": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "description": "Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'."
                                        },
                                        "axEnabled": {
                                            "type": "boolean",
                                            "description": "Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering."
                                        },
                                        "rxsop": {
                                            "type": "integer",
                                            "description": "    The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after\n    consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will\n    reset this to the default.\n"
                                        }
                                    },
                                    "description": "Settings related to 2.4Ghz band"
                                },
                                "fiveGhzSettings": {
                                    "type": "object",
                                    "properties": {
                                        "maxPower": {
                                            "type": "integer",
                                            "description": "Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30."
                                        },
                                        "minPower": {
                                            "type": "integer",
                                            "description": "Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30."
                                        },
                                        "minBitrate": {
                                            "type": "integer",
                                            "description": "Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'."
                                        },
                                        "validAutoChannels": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "description": "Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'."
                                        },
                                        "channelWidth": {
                                            "type": "string",
                                            "description": "Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'."
                                        },
                                        "rxsop": {
                                            "type": "integer",
                                            "description": "    The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after\n    consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will\n    reset this to the default.\n"
                                        }
                                    },
                                    "description": "Settings related to 5Ghz band"
                                }
                            },
                            "example": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "Some Custom RF Profile",
                                "clientBalancingEnabled": true,
                                "minBitrateType": "band",
                                "bandSelectionType": "ap",
                                "apSelectionSettings": {
                                    "bandOperationMode": "dual",
                                    "bandSteeringEnabled": true
                                },
                                "twoFourGhzSettings": {
                                    "maxPower": 30,
                                    "minPower": 5,
                                    "minBitrate": 11,
                                    "rxsop": null,
                                    "validAutoChannels": [
                                        1,
                                        6,
                                        11
                                    ],
                                    "axEnabled": true
                                },
                                "fiveGhzSettings": {
                                    "maxPower": 30,
                                    "minPower": 8,
                                    "minBitrate": 12,
                                    "rxsop": null,
                                    "validAutoChannels": [
                                        36,
                                        40,
                                        44,
                                        48,
                                        52,
                                        56,
                                        60,
                                        64,
                                        100,
                                        104,
                                        108,
                                        112,
                                        116,
                                        120,
                                        124,
                                        128,
                                        132,
                                        136,
                                        140,
                                        144,
                                        149,
                                        153,
                                        157,
                                        161,
                                        165
                                    ],
                                    "channelWidth": "auto"
                                }
                            }
                        }
                    }
                },
                "summary": "Updates specified RF profile for this network",
                "tags": [
                    "wireless",
                    "configure",
                    "rfProfiles"
                ]
            },
            "delete": {
                "description": "Delete a RF Profile",
                "operationId": "deleteNetworkWirelessRfProfile",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "rfProfileId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a RF Profile",
                "tags": [
                    "wireless",
                    "configure",
                    "rfProfiles"
                ]
            },
            "get": {
                "description": "Return a RF profile",
                "operationId": "getNetworkWirelessRfProfile",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "rfProfileId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "Some Custom RF Profile",
                                "clientBalancingEnabled": true,
                                "minBitrateType": "band",
                                "bandSelectionType": "ap",
                                "apSelectionSettings": {
                                    "bandOperationMode": "dual",
                                    "bandSteeringEnabled": true
                                },
                                "twoFourGhzSettings": {
                                    "maxPower": 30,
                                    "minPower": 5,
                                    "minBitrate": 11,
                                    "rxsop": null,
                                    "validAutoChannels": [
                                        1,
                                        6,
                                        11
                                    ],
                                    "axEnabled": true
                                },
                                "fiveGhzSettings": {
                                    "maxPower": 30,
                                    "minPower": 8,
                                    "minBitrate": 12,
                                    "rxsop": null,
                                    "validAutoChannels": [
                                        36,
                                        40,
                                        44,
                                        48,
                                        52,
                                        56,
                                        60,
                                        64,
                                        100,
                                        104,
                                        108,
                                        112,
                                        116,
                                        120,
                                        124,
                                        128,
                                        132,
                                        136,
                                        140,
                                        144,
                                        149,
                                        153,
                                        157,
                                        161,
                                        165
                                    ],
                                    "channelWidth": "auto"
                                }
                            }
                        }
                    }
                },
                "summary": "Return a RF profile",
                "tags": [
                    "wireless",
                    "configure",
                    "rfProfiles"
                ]
            }
        },
        "/networks/{networkId}/wireless/settings": {
            "get": {
                "description": "Return the wireless settings for a network",
                "operationId": "getNetworkWirelessSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "meshingEnabled": true,
                                "ipv6BridgeEnabled": false,
                                "locationAnalyticsEnabled": false
                            }
                        }
                    }
                },
                "summary": "Return the wireless settings for a network",
                "tags": [
                    "wireless",
                    "configure",
                    "settings"
                ]
            },
            "put": {
                "description": "Update the wireless settings for a network",
                "operationId": "updateNetworkWirelessSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkWirelessSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meshingEnabled": {
                                    "type": "boolean",
                                    "description": "Toggle for enabling or disabling meshing in a network"
                                },
                                "ipv6BridgeEnabled": {
                                    "type": "boolean",
                                    "description": "Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)"
                                },
                                "locationAnalyticsEnabled": {
                                    "type": "boolean",
                                    "description": "Toggle for enabling or disabling location analytics for your network"
                                },
                                "ledLightsOn": {
                                    "type": "boolean",
                                    "description": "Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)"
                                }
                            },
                            "example": {
                                "meshingEnabled": true,
                                "ipv6BridgeEnabled": false,
                                "locationAnalyticsEnabled": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "meshingEnabled": true,
                                "ipv6BridgeEnabled": false,
                                "locationAnalyticsEnabled": false
                            }
                        }
                    }
                },
                "summary": "Update the wireless settings for a network",
                "tags": [
                    "wireless",
                    "configure",
                    "settings"
                ]
            }
        },
        "/networks/{networkId}/wireless/ssids": {
            "get": {
                "description": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.",
                "operationId": "getNetworkWirelessSsids",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "number": 0,
                                    "name": "My SSID",
                                    "enabled": true,
                                    "splashPage": "Click-through splash page",
                                    "ssidAdminAccessible": false,
                                    "authMode": "8021x-radius",
                                    "encryptionMode": "wpa-eap",
                                    "wpaEncryptionMode": "WPA2 only",
                                    "radiusServers": [
                                        {
                                            "host": "0.0.0.0",
                                            "port": 3000
                                        }
                                    ],
                                    "radiusAccountingEnabled": false,
                                    "radiusEnabled": true,
                                    "radiusAttributeForGroupPolicies": "Filter-Id",
                                    "radiusFailoverPolicy": "null",
                                    "radiusLoadBalancingPolicy": "null",
                                    "ipAssignmentMode": "NAT mode",
                                    "adminSplashUrl": "http://example.com",
                                    "splashTimeout": "30 minutes",
                                    "walledGardenEnabled": true,
                                    "walledGardenRanges": [
                                        "example.com",
                                        "1.1.1.1\\u001a"
                                    ],
                                    "minBitrate": 11,
                                    "bandSelection": "5 GHz band only",
                                    "perClientBandwidthLimitUp": 0,
                                    "perClientBandwidthLimitDown": 0
                                }
                            ]
                        }
                    }
                },
                "summary": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.",
                "tags": [
                    "wireless",
                    "configure",
                    "ssids"
                ]
            }
        },
        "/networks/{networkId}/wireless/ssids/{number}": {
            "get": {
                "description": "Return a single SSID",
                "operationId": "getNetworkWirelessSsid",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "number",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "number": 0,
                                "name": "My SSID",
                                "enabled": true,
                                "splashPage": "Click-through splash page",
                                "ssidAdminAccessible": false,
                                "authMode": "8021x-radius",
                                "encryptionMode": "wpa-eap",
                                "wpaEncryptionMode": "WPA2 only",
                                "radiusServers": [
                                    {
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }
                                ],
                                "radiusAccountingEnabled": false,
                                "radiusEnabled": true,
                                "radiusAttributeForGroupPolicies": "Filter-Id",
                                "radiusFailoverPolicy": "null",
                                "radiusLoadBalancingPolicy": "null",
                                "ipAssignmentMode": "NAT mode",
                                "adminSplashUrl": "http://example.com",
                                "splashTimeout": "30 minutes",
                                "walledGardenEnabled": true,
                                "walledGardenRanges": [
                                    "example.com",
                                    "1.1.1.1\\u001a"
                                ],
                                "minBitrate": 11,
                                "bandSelection": "5 GHz band only",
                                "perClientBandwidthLimitUp": 0,
                                "perClientBandwidthLimitDown": 0
                            }
                        }
                    }
                },
                "summary": "Return a single SSID",
                "tags": [
                    "wireless",
                    "configure",
                    "ssids"
                ]
            },
            "put": {
                "description": "Update the attributes of an SSID",
                "operationId": "updateNetworkWirelessSsid",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "number",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkWirelessSsid",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the SSID"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether or not the SSID is enabled"
                                },
                                "authMode": {
                                    "type": "string",
                                    "enum": [
                                        "open",
                                        "psk",
                                        "open-with-radius",
                                        "8021x-meraki",
                                        "8021x-radius",
                                        "ipsk-with-radius",
                                        "ipsk-without-radius"
                                    ],
                                    "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius', 'ipsk-with-radius' or 'ipsk-without-radius')"
                                },
                                "enterpriseAdminAccess": {
                                    "type": "string",
                                    "enum": [
                                        "access disabled",
                                        "access enabled"
                                    ],
                                    "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                                },
                                "encryptionMode": {
                                    "type": "string",
                                    "enum": [
                                        "wep",
                                        "wpa"
                                    ],
                                    "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                                },
                                "psk": {
                                    "type": "string",
                                    "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                                },
                                "wpaEncryptionMode": {
                                    "type": "string",
                                    "enum": [
                                        "WPA1 only",
                                        "WPA1 and WPA2",
                                        "WPA2 only",
                                        "WPA3 Transition Mode",
                                        "WPA3 only"
                                    ],
                                    "description": "The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only')"
                                },
                                "splashPage": {
                                    "type": "string",
                                    "enum": [
                                        "None",
                                        "Click-through splash page",
                                        "Billing",
                                        "Password-protected with Meraki RADIUS",
                                        "Password-protected with custom RADIUS",
                                        "Password-protected with Active Directory",
                                        "Password-protected with LDAP",
                                        "SMS authentication",
                                        "Systems Manager Sentry",
                                        "Facebook Wi-Fi",
                                        "Google OAuth",
                                        "Sponsored guest"
                                    ],
                                    "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                                },
                                "radiusServers": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "host": {
                                                "type": "string",
                                                "description": "IP address of your RADIUS server"
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "UDP port the RADIUS server listens on for Access-requests"
                                            },
                                            "secret": {
                                                "type": "string",
                                                "description": "RADIUS client shared secret"
                                            }
                                        },
                                        "required": [
                                            "host",
                                            "secret"
                                        ]
                                    },
                                    "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                                },
                                "radiusCoaEnabled": {
                                    "type": "boolean",
                                    "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                                },
                                "radiusFailoverPolicy": {
                                    "type": "string",
                                    "enum": [
                                        "Deny access",
                                        "Allow access"
                                    ],
                                    "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                                },
                                "radiusLoadBalancingPolicy": {
                                    "type": "string",
                                    "enum": [
                                        "Strict priority order",
                                        "Round robin"
                                    ],
                                    "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                                },
                                "radiusAccountingEnabled": {
                                    "type": "boolean",
                                    "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                                },
                                "radiusAccountingServers": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "host": {
                                                "type": "string",
                                                "description": "IP address to which the APs will send RADIUS accounting messages"
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Port on the RADIUS server that is listening for accounting messages"
                                            },
                                            "secret": {
                                                "type": "string",
                                                "description": "Shared key used to authenticate messages between the APs and RADIUS server"
                                            }
                                        },
                                        "required": [
                                            "host",
                                            "secret"
                                        ]
                                    },
                                    "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius' and radiusAccountingEnabled is 'true'"
                                },
                                "radiusAttributeForGroupPolicies": {
                                    "type": "string",
                                    "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                                },
                                "ipAssignmentMode": {
                                    "type": "string",
                                    "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                                },
                                "useVlanTagging": {
                                    "type": "boolean",
                                    "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                },
                                "concentratorNetworkId": {
                                    "type": "string",
                                    "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                                },
                                "vlanId": {
                                    "type": "integer",
                                    "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                                },
                                "defaultVlanId": {
                                    "type": "integer",
                                    "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                },
                                "apTagsAndVlanIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tags": {
                                                "type": "string",
                                                "description": "Comma-separated list of AP tags"
                                            },
                                            "vlanId": {
                                                "type": "integer",
                                                "description": "Numerical identifier that is assigned to the VLAN"
                                            }
                                        }
                                    },
                                    "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                },
                                "walledGardenEnabled": {
                                    "type": "boolean",
                                    "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                                },
                                "walledGardenRanges": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Specify your walled garden by entering an array of addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com', '*.google.com']). Meraki's splash page is automatically included in your walled garden."
                                },
                                "radiusOverride": {
                                    "type": "boolean",
                                    "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                                },
                                "minBitrate": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                                },
                                "bandSelection": {
                                    "type": "string",
                                    "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                                },
                                "perClientBandwidthLimitUp": {
                                    "type": "integer",
                                    "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                                },
                                "perClientBandwidthLimitDown": {
                                    "type": "integer",
                                    "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                                },
                                "lanIsolationEnabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                                }
                            },
                            "example": {
                                "name": "My SSID",
                                "enabled": true
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "number": 0,
                                "name": "My SSID",
                                "enabled": true,
                                "splashPage": "Click-through splash page",
                                "ssidAdminAccessible": false,
                                "authMode": "8021x-radius",
                                "encryptionMode": "wpa-eap",
                                "wpaEncryptionMode": "WPA2 only",
                                "radiusServers": [
                                    {
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }
                                ],
                                "radiusAccountingEnabled": false,
                                "radiusEnabled": true,
                                "radiusAttributeForGroupPolicies": "Filter-Id",
                                "radiusFailoverPolicy": "null",
                                "radiusLoadBalancingPolicy": "null",
                                "ipAssignmentMode": "NAT mode",
                                "adminSplashUrl": "http://example.com",
                                "splashTimeout": "30 minutes",
                                "walledGardenEnabled": true,
                                "walledGardenRanges": [
                                    "example.com",
                                    "1.1.1.1\\u001a"
                                ],
                                "minBitrate": 11,
                                "bandSelection": "5 GHz band only",
                                "perClientBandwidthLimitUp": 0,
                                "perClientBandwidthLimitDown": 0
                            }
                        }
                    }
                },
                "summary": "Update the attributes of an SSID",
                "tags": [
                    "wireless",
                    "configure",
                    "ssids"
                ]
            }
        },
        "/networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules": {
            "get": {
                "description": "Return the L3 firewall rules for an SSID on an MR network",
                "operationId": "getNetworkWirelessSsidFirewallL3FirewallRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "number",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the L3 firewall rules for an SSID on an MR network",
                "tags": [
                    "wireless",
                    "configure",
                    "ssids",
                    "firewall",
                    "l3FirewallRules"
                ]
            },
            "put": {
                "description": "Update the L3 firewall rules of an SSID on an MR network",
                "operationId": "updateNetworkWirelessSsidFirewallL3FirewallRules",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "number",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkWirelessSsidFirewallL3FirewallRules",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "comment": {
                                                "type": "string",
                                                "description": "Description of the rule (optional)"
                                            },
                                            "policy": {
                                                "type": "string",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ],
                                                "description": "'allow' or 'deny' traffic specified by this rule"
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "enum": [
                                                    "tcp",
                                                    "udp",
                                                    "icmp",
                                                    "any"
                                                ],
                                                "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                            },
                                            "destPort": {
                                                "type": "string",
                                                "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                                            },
                                            "destCidr": {
                                                "type": "string",
                                                "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'"
                                            }
                                        },
                                        "required": [
                                            "policy",
                                            "protocol",
                                            "destCidr"
                                        ]
                                    },
                                    "description": "An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)"
                                },
                                "allowLanAccess": {
                                    "type": "boolean",
                                    "description": "Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)"
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the L3 firewall rules of an SSID on an MR network",
                "tags": [
                    "wireless",
                    "configure",
                    "ssids",
                    "firewall",
                    "l3FirewallRules"
                ]
            }
        },
        "/networks/{networkId}/wireless/ssids/{number}/splash/settings": {
            "get": {
                "description": "Display the splash page settings for the given SSID",
                "operationId": "getNetworkWirelessSsidSplashSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "number",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ssidNumber": 0,
                                "splashPage": "Click-through splash page",
                                "splashUrl": "https://www.custom_splash_url.com",
                                "useSplashUrl": true
                            }
                        }
                    }
                },
                "summary": "Display the splash page settings for the given SSID",
                "tags": [
                    "wireless",
                    "configure",
                    "ssids",
                    "splash",
                    "settings"
                ]
            },
            "put": {
                "description": "Modify the splash page settings for the given SSID",
                "operationId": "updateNetworkWirelessSsidSplashSettings",
                "parameters": [
                    {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "number",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkWirelessSsidSplashSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "splashUrl": {
                                    "type": "string",
                                    "description": "[optional] The custom splash URL of the click-through splash page. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'"
                                },
                                "useSplashUrl": {
                                    "type": "boolean",
                                    "description": "[optional] Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL."
                                }
                            },
                            "example": {
                                "splashUrl": "https://www.custom_splash_url.com",
                                "useSplashUrl": true
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "ssidNumber": 0,
                                "splashPage": "Click-through splash page",
                                "splashUrl": "https://www.custom_splash_url.com",
                                "useSplashUrl": true
                            }
                        }
                    }
                },
                "summary": "Modify the splash page settings for the given SSID",
                "tags": [
                    "wireless",
                    "configure",
                    "ssids",
                    "splash",
                    "settings"
                ]
            }
        },
        "/organizations": {
            "get": {
                "description": "List the organizations that the user has privileges on",
                "operationId": "getOrganizations",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "2930418",
                                    "name": "My organization",
                                    "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the organizations that the user has privileges on",
                "tags": [
                    "organizations",
                    "configure"
                ]
            },
            "post": {
                "description": "Create a new organization",
                "operationId": "createOrganization",
                "parameters": [
                    {
                        "name": "createOrganization",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the organization"
                                }
                            },
                            "example": {
                                "name": "My organization"
                            },
                            "required": [
                                "name"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "2930418",
                                "name": "My organization",
                                "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"
                            }
                        }
                    }
                },
                "summary": "Create a new organization",
                "tags": [
                    "organizations",
                    "configure"
                ]
            }
        },
        "/organizations/{organizationId}": {
            "get": {
                "description": "Return an organization",
                "operationId": "getOrganization",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "2930418",
                                "name": "My organization",
                                "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"
                            }
                        }
                    }
                },
                "summary": "Return an organization",
                "tags": [
                    "organizations",
                    "configure"
                ]
            },
            "put": {
                "description": "Update an organization",
                "operationId": "updateOrganization",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganization",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the organization"
                                }
                            },
                            "example": {
                                "name": "My organization"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "2930418",
                                "name": "My organization",
                                "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"
                            }
                        }
                    }
                },
                "summary": "Update an organization",
                "tags": [
                    "organizations",
                    "configure"
                ]
            },
            "delete": {
                "description": "Delete an organization",
                "operationId": "deleteOrganization",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete an organization",
                "tags": [
                    "organizations",
                    "configure"
                ]
            }
        },
        "/organizations/{organizationId}/actionBatches": {
            "post": {
                "description": "Create an action batch",
                "operationId": "createOrganizationActionBatch",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationActionBatch",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "confirmed": {
                                    "type": "boolean",
                                    "description": "Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false."
                                },
                                "synchronous": {
                                    "type": "boolean",
                                    "description": "Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false."
                                },
                                "actions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "resource": {
                                                "type": "string",
                                                "description": "Unique identifier for the resource to be acted on"
                                            },
                                            "operation": {
                                                "type": "string",
                                                "description": "The operation to be used"
                                            },
                                            "body": {
                                                "type": "object",
                                                "properties": {},
                                                "description": "The body of the action",
                                                "default": {}
                                            }
                                        },
                                        "required": [
                                            "resource",
                                            "operation"
                                        ]
                                    },
                                    "description": "A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)"
                                }
                            },
                            "example": {
                                "confirmed": true,
                                "synchronous": false,
                                "actions": [
                                    {
                                        "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                                        "operation": "update",
                                        "body": {
                                            "enabled": false
                                        }
                                    }
                                ]
                            },
                            "required": [
                                "actions"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "123",
                                "organizationId": "2930418",
                                "confirmed": true,
                                "synchronous": false,
                                "status": {
                                    "completed": false,
                                    "failed": false,
                                    "errors": []
                                },
                                "actions": [
                                    {
                                        "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                                        "operation": "update",
                                        "body": {
                                            "enabled": false
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Create an action batch",
                "tags": [
                    "organizations",
                    "configure",
                    "actionBatches"
                ]
            },
            "get": {
                "description": "Return the list of action batches in the organization",
                "operationId": "getOrganizationActionBatches",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "123",
                                    "organizationId": "2930418",
                                    "confirmed": true,
                                    "synchronous": false,
                                    "status": {
                                        "completed": false,
                                        "failed": false,
                                        "errors": []
                                    },
                                    "actions": [
                                        {
                                            "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                                            "operation": "update",
                                            "body": {
                                                "enabled": false
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the list of action batches in the organization",
                "tags": [
                    "organizations",
                    "configure",
                    "actionBatches"
                ]
            }
        },
        "/organizations/{organizationId}/actionBatches/{actionBatchId}": {
            "get": {
                "description": "Return an action batch",
                "operationId": "getOrganizationActionBatch",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "actionBatchId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "123",
                                "organizationId": "2930418",
                                "confirmed": true,
                                "synchronous": false,
                                "status": {
                                    "completed": false,
                                    "failed": false,
                                    "errors": []
                                },
                                "actions": [
                                    {
                                        "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                                        "operation": "update",
                                        "body": {
                                            "enabled": false
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return an action batch",
                "tags": [
                    "organizations",
                    "configure",
                    "actionBatches"
                ]
            },
            "delete": {
                "description": "Delete an action batch",
                "operationId": "deleteOrganizationActionBatch",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "actionBatchId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete an action batch",
                "tags": [
                    "organizations",
                    "configure",
                    "actionBatches"
                ]
            },
            "put": {
                "description": "Update an action batch",
                "operationId": "updateOrganizationActionBatch",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "actionBatchId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationActionBatch",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "confirmed": {
                                    "type": "boolean",
                                    "description": "A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true."
                                },
                                "synchronous": {
                                    "type": "boolean",
                                    "description": "Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch."
                                }
                            },
                            "example": {
                                "confirmed": true,
                                "synchronous": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "123",
                                "organizationId": "2930418",
                                "confirmed": true,
                                "synchronous": false,
                                "status": {
                                    "completed": false,
                                    "failed": false,
                                    "errors": []
                                },
                                "actions": [
                                    {
                                        "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                                        "operation": "update",
                                        "body": {
                                            "enabled": false
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update an action batch",
                "tags": [
                    "organizations",
                    "configure",
                    "actionBatches"
                ]
            }
        },
        "/organizations/{organizationId}/admins": {
            "get": {
                "description": "List the dashboard administrators in this organization",
                "operationId": "getOrganizationAdmins",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "212406",
                                    "name": "Miles Meraki",
                                    "email": "miles@meraki.com",
                                    "orgAccess": "none",
                                    "accountStatus": "ok",
                                    "twoFactorAuthEnabled": false,
                                    "hasApiKey": true,
                                    "lastActive": "2019-01-28 14:58:56 -0800",
                                    "tags": [
                                        {
                                            "tag": "west",
                                            "access": "read-only"
                                        }
                                    ],
                                    "networks": [
                                        {
                                            "id": "N_24329156",
                                            "access": "full"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "List the dashboard administrators in this organization",
                "tags": [
                    "organizations",
                    "configure",
                    "admins"
                ]
            },
            "post": {
                "description": "Create a new dashboard administrator",
                "operationId": "createOrganizationAdmin",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationAdmin",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": "The email of the dashboard administrator. This attribute can not be updated."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of the dashboard administrator"
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "enterprise",
                                        "none"
                                    ],
                                    "description": "The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag"
                                            },
                                            "access": {
                                                "type": "string",
                                                "description": "The privilege of the dashboard administrator on the tag"
                                            }
                                        },
                                        "required": [
                                            "tag",
                                            "access"
                                        ]
                                    },
                                    "description": "The list of tags that the dashboard administrator has privileges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID"
                                            },
                                            "access": {
                                                "type": "string",
                                                "description": "The privilege of the dashboard administrator on the network"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "access"
                                        ]
                                    },
                                    "description": "The list of networks that the dashboard administrator has privileges on"
                                }
                            },
                            "example": {
                                "name": "Miles Meraki",
                                "email": "miles@meraki.com",
                                "orgAccess": "none",
                                "tags": [
                                    {
                                        "tag": "west",
                                        "access": "read-only"
                                    }
                                ]
                            },
                            "required": [
                                "email",
                                "name",
                                "orgAccess"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "212406",
                                "name": "Miles Meraki",
                                "email": "miles@meraki.com",
                                "orgAccess": "none",
                                "accountStatus": "ok",
                                "twoFactorAuthEnabled": false,
                                "hasApiKey": true,
                                "lastActive": "2019-01-28 14:58:56 -0800",
                                "tags": [
                                    {
                                        "tag": "west",
                                        "access": "read-only"
                                    }
                                ],
                                "networks": [
                                    {
                                        "id": "N_24329156",
                                        "access": "full"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Create a new dashboard administrator",
                "tags": [
                    "organizations",
                    "configure",
                    "admins"
                ]
            }
        },
        "/organizations/{organizationId}/admins/{id}": {
            "put": {
                "description": "Update an administrator",
                "operationId": "updateOrganizationAdmin",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationAdmin",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the dashboard administrator"
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "enterprise",
                                        "none"
                                    ],
                                    "description": "The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag"
                                            },
                                            "access": {
                                                "type": "string",
                                                "description": "The privilege of the dashboard administrator on the tag"
                                            }
                                        },
                                        "required": [
                                            "tag",
                                            "access"
                                        ]
                                    },
                                    "description": "The list of tags that the dashboard administrator has privileges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID"
                                            },
                                            "access": {
                                                "type": "string",
                                                "description": "The privilege of the dashboard administrator on the network"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "access"
                                        ]
                                    },
                                    "description": "The list of networks that the dashboard administrator has privileges on"
                                }
                            },
                            "example": {
                                "name": "Miles Meraki",
                                "email": "miles@meraki.com",
                                "orgAccess": "none",
                                "tags": [
                                    {
                                        "tag": "west",
                                        "access": "read-only"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "212406",
                                "name": "Miles Meraki",
                                "email": "miles@meraki.com",
                                "orgAccess": "none",
                                "accountStatus": "ok",
                                "twoFactorAuthEnabled": false,
                                "hasApiKey": true,
                                "lastActive": "2019-01-28 14:58:56 -0800",
                                "tags": [
                                    {
                                        "tag": "west",
                                        "access": "read-only"
                                    }
                                ],
                                "networks": [
                                    {
                                        "id": "N_24329156",
                                        "access": "full"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update an administrator",
                "tags": [
                    "organizations",
                    "configure",
                    "admins"
                ]
            },
            "delete": {
                "description": "Revoke all access for a dashboard administrator within this organization",
                "operationId": "deleteOrganizationAdmin",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Revoke all access for a dashboard administrator within this organization",
                "tags": [
                    "organizations",
                    "configure",
                    "admins"
                ]
            }
        },
        "/organizations/{organizationId}/apiRequests": {
            "get": {
                "description": "List the API requests made by an organization",
                "operationId": "getOrganizationApiRequests",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "adminId",
                        "in": "query",
                        "description": "Filter the results by the ID of the admin who made the API requests"
                    },
                    {
                        "type": "string",
                        "name": "path",
                        "in": "query",
                        "description": "Filter the results by the path of the API requests"
                    },
                    {
                        "type": "string",
                        "name": "method",
                        "in": "query",
                        "description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')"
                    },
                    {
                        "type": "integer",
                        "name": "responseCode",
                        "in": "query",
                        "description": "Filter the results by the response code of the API requests"
                    },
                    {
                        "type": "string",
                        "name": "sourceIp",
                        "in": "query",
                        "description": "Filter the results by the IP address of the originating API request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "adminId": "212406",
                                    "method": "GET",
                                    "host": "api.meraki.com",
                                    "path": "/api/v0/organizations/33349/apiRequests",
                                    "queryString": "timespan=604800",
                                    "userAgent": "PostmanRuntime/7.6.0",
                                    "ts": "2019-02-20T17:31:23Z",
                                    "responseCode": 200,
                                    "sourceIp": "123.123.123.1"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the API requests made by an organization",
                "tags": [
                    "organizations",
                    "monitor",
                    "apiRequests"
                ]
            }
        },
        "/organizations/{organizationId}/apiRequests/overview": {
            "get": {
                "description": "Return an aggregated overview of API requests data",
                "operationId": "getOrganizationApiRequestsOverview",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "responseCodeCounts": {
                                    "200": 50000,
                                    "201": 4000,
                                    "204": 1000,
                                    "400": 3500,
                                    "404": 1500,
                                    "429": 10000
                                }
                            }
                        }
                    }
                },
                "summary": "Return an aggregated overview of API requests data",
                "tags": [
                    "organizations",
                    "monitor",
                    "apiRequests",
                    "overview"
                ]
            }
        },
        "/organizations/{organizationId}/appliance/security/intrusion": {
            "get": {
                "description": "Returns all supported intrusion settings for an organization",
                "operationId": "getOrganizationApplianceSecurityIntrusion",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "whitelistedRules": [
                                    {
                                        "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
                                        "message": "SQL sa login failed"
                                    },
                                    {
                                        "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
                                        "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Returns all supported intrusion settings for an organization",
                "tags": [
                    "appliance",
                    "configure",
                    "security",
                    "intrusion"
                ]
            },
            "put": {
                "description": "Sets supported intrusion settings for an organization",
                "operationId": "updateOrganizationApplianceSecurityIntrusion",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationApplianceSecurityIntrusion",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "whitelistedRules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ruleId": {
                                                "type": "string",
                                                "description": "A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET"
                                            }
                                        },
                                        "required": [
                                            "ruleId"
                                        ]
                                    },
                                    "description": "Sets a list of specific SNORT® signatures to whitelist"
                                }
                            },
                            "example": {
                                "whitelistedRules": [
                                    {
                                        "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
                                        "message": "SQL sa login failed"
                                    },
                                    {
                                        "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
                                        "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
                                    }
                                ]
                            },
                            "required": [
                                "whitelistedRules"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "whitelistedRules": [
                                    {
                                        "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
                                        "message": "SQL sa login failed"
                                    },
                                    {
                                        "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
                                        "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Sets supported intrusion settings for an organization",
                "tags": [
                    "appliance",
                    "configure",
                    "security",
                    "intrusion"
                ]
            }
        },
        "/organizations/{organizationId}/brandingPolicies": {
            "get": {
                "description": "List the branding policies of an organization",
                "operationId": "getOrganizationBrandingPolicies",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "brandingPolicyId": "456",
                                    "name": "My Branding Policy",
                                    "enabled": true,
                                    "adminSettings": {
                                        "appliesTo": "All admins of networks...",
                                        "values": [
                                            "N_1234",
                                            "L_5678"
                                        ]
                                    },
                                    "helpSettings": {
                                        "helpTab": "show",
                                        "getHelpSubtab": "default or inherit",
                                        "communitySubtab": "show",
                                        "casesSubtab": "hide",
                                        "dataProtectionRequestsSubtab": "default or inherit",
                                        "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                                        "universalSearchKnowledgeBaseSearch": "hide",
                                        "ciscoMerakiProductDocumentation": "show",
                                        "supportContactInfo": "show",
                                        "newFeaturesSubtab": "show",
                                        "firewallInfoSubtab": "hide",
                                        "apiDocsSubtab": "default or inherit",
                                        "hardwareReplacementsSubtab": "hide",
                                        "smForums": "hide"
                                    }
                                }
                            ]
                        }
                    }
                },
                "summary": "List the branding policies of an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "brandingPolicies"
                ]
            },
            "post": {
                "description": "Add a new branding policy to an organization",
                "operationId": "createOrganizationBrandingPolicy",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationBrandingPolicy",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the Dashboard branding policy."
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether this policy is enabled."
                                },
                                "adminSettings": {
                                    "type": "object",
                                    "properties": {
                                        "appliesTo": {
                                            "type": "string",
                                            "enum": [
                                                "All organization admins",
                                                "All enterprise admins",
                                                "All network admins",
                                                "All admins of networks...",
                                                "All admins of networks tagged...",
                                                "Specific admins...",
                                                "All admins",
                                                "All SAML admins"
                                            ],
                                            "description": "Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'."
                                        },
                                        "values": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "    If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of\n    entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of\n    networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',\n    specify an array of tag names.\n"
                                        }
                                    },
                                    "description": "Settings for describing which kinds of admins this policy applies to."
                                },
                                "helpSettings": {
                                    "type": "object",
                                    "properties": {
                                        "helpTab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding\n    customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "getHelpSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note\n    that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,\n    and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "communitySubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "casesSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one\n    of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "dataProtectionRequestsSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can\n    be audited. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "getHelpSubtabKnowledgeBaseSearch": {
                                            "type": "string",
                                            "description": "    The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                                        },
                                        "universalSearchKnowledgeBaseSearch": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures\n    whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "ciscoMerakiProductDocumentation": {
                                            "type": "string",
                                            "description": "    The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                                        },
                                        "supportContactInfo": {
                                            "type": "string",
                                            "description": "    The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                                        },
                                        "newFeaturesSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "firewallInfoSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are\n    listed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "apiDocsSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "hardwareReplacementsSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "smForums": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for\n    organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        }
                                    },
                                    "description": "    Settings for describing the modifications to various Help page features. Each property in this object accepts one of\n    'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show\n    the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on\n    Dashboard; see the documentation for each property to see the allowed values.\n Each property defaults to 'default or inherit' when not provided."
                                }
                            },
                            "example": {
                                "brandingPolicyId": "456",
                                "name": "My Branding Policy",
                                "enabled": true,
                                "adminSettings": {
                                    "appliesTo": "All admins of networks...",
                                    "values": [
                                        "N_1234",
                                        "L_5678"
                                    ]
                                },
                                "helpSettings": {
                                    "helpTab": "show",
                                    "getHelpSubtab": "default or inherit",
                                    "communitySubtab": "show",
                                    "casesSubtab": "hide",
                                    "dataProtectionRequestsSubtab": "default or inherit",
                                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                                    "universalSearchKnowledgeBaseSearch": "hide",
                                    "ciscoMerakiProductDocumentation": "show",
                                    "supportContactInfo": "show",
                                    "newFeaturesSubtab": "show",
                                    "firewallInfoSubtab": "hide",
                                    "apiDocsSubtab": "default or inherit",
                                    "hardwareReplacementsSubtab": "hide",
                                    "smForums": "hide"
                                }
                            },
                            "required": [
                                "name",
                                "enabled",
                                "adminSettings"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "brandingPolicyId": "456",
                                "name": "My Branding Policy",
                                "enabled": true,
                                "adminSettings": {
                                    "appliesTo": "All admins of networks...",
                                    "values": [
                                        "N_1234",
                                        "L_5678"
                                    ]
                                },
                                "helpSettings": {
                                    "helpTab": "show",
                                    "getHelpSubtab": "default or inherit",
                                    "communitySubtab": "show",
                                    "casesSubtab": "hide",
                                    "dataProtectionRequestsSubtab": "default or inherit",
                                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                                    "universalSearchKnowledgeBaseSearch": "hide",
                                    "ciscoMerakiProductDocumentation": "show",
                                    "supportContactInfo": "show",
                                    "newFeaturesSubtab": "show",
                                    "firewallInfoSubtab": "hide",
                                    "apiDocsSubtab": "default or inherit",
                                    "hardwareReplacementsSubtab": "hide",
                                    "smForums": "hide"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a new branding policy to an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "brandingPolicies"
                ]
            }
        },
        "/organizations/{organizationId}/brandingPolicies/priorities": {
            "get": {
                "description": "Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).",
                "operationId": "getOrganizationBrandingPoliciesPriorities",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "brandingPolicyIds": [
                                    "123",
                                    "456",
                                    "789"
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).",
                "tags": [
                    "organizations",
                    "configure",
                    "brandingPolicies",
                    "priorities"
                ]
            },
            "put": {
                "description": "Update the priority ordering of an organization's branding policies.",
                "operationId": "updateOrganizationBrandingPoliciesPriorities",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationBrandingPoliciesPriorities",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "brandingPolicyIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of branding policy IDs arranged in ascending priority order (IDs later in the array have higher priority)."
                                }
                            },
                            "example": {
                                "brandingPolicyIds": [
                                    "123",
                                    "456",
                                    "789"
                                ]
                            },
                            "required": [
                                "brandingPolicyIds"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "brandingPolicyIds": [
                                    "123",
                                    "456",
                                    "789"
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the priority ordering of an organization's branding policies.",
                "tags": [
                    "organizations",
                    "configure",
                    "brandingPolicies",
                    "priorities"
                ]
            }
        },
        "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}": {
            "get": {
                "description": "Return a branding policy",
                "operationId": "getOrganizationBrandingPolicy",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "brandingPolicyId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "brandingPolicyId": "456",
                                "name": "My Branding Policy",
                                "enabled": true,
                                "adminSettings": {
                                    "appliesTo": "All admins of networks...",
                                    "values": [
                                        "N_1234",
                                        "L_5678"
                                    ]
                                },
                                "helpSettings": {
                                    "helpTab": "show",
                                    "getHelpSubtab": "default or inherit",
                                    "communitySubtab": "show",
                                    "casesSubtab": "hide",
                                    "dataProtectionRequestsSubtab": "default or inherit",
                                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                                    "universalSearchKnowledgeBaseSearch": "hide",
                                    "ciscoMerakiProductDocumentation": "show",
                                    "supportContactInfo": "show",
                                    "newFeaturesSubtab": "show",
                                    "firewallInfoSubtab": "hide",
                                    "apiDocsSubtab": "default or inherit",
                                    "hardwareReplacementsSubtab": "hide",
                                    "smForums": "hide"
                                }
                            }
                        }
                    }
                },
                "summary": "Return a branding policy",
                "tags": [
                    "organizations",
                    "configure",
                    "brandingPolicies"
                ]
            },
            "put": {
                "description": "Update a branding policy",
                "operationId": "updateOrganizationBrandingPolicy",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "brandingPolicyId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationBrandingPolicy",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the Dashboard branding policy."
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether this policy is enabled."
                                },
                                "adminSettings": {
                                    "type": "object",
                                    "properties": {
                                        "appliesTo": {
                                            "type": "string",
                                            "enum": [
                                                "All organization admins",
                                                "All enterprise admins",
                                                "All network admins",
                                                "All admins of networks...",
                                                "All admins of networks tagged...",
                                                "Specific admins...",
                                                "All admins",
                                                "All SAML admins"
                                            ],
                                            "description": "Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'."
                                        },
                                        "values": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "    If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of\n    entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of\n    networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',\n    specify an array of tag names.\n"
                                        }
                                    },
                                    "description": "Settings for describing which kinds of admins this policy applies to."
                                },
                                "helpSettings": {
                                    "type": "object",
                                    "properties": {
                                        "helpTab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding\n    customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "getHelpSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note\n    that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,\n    and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "communitySubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "casesSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one\n    of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "dataProtectionRequestsSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can\n    be audited. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "getHelpSubtabKnowledgeBaseSearch": {
                                            "type": "string",
                                            "description": "    The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                                        },
                                        "universalSearchKnowledgeBaseSearch": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures\n    whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "ciscoMerakiProductDocumentation": {
                                            "type": "string",
                                            "description": "    The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                                        },
                                        "supportContactInfo": {
                                            "type": "string",
                                            "description": "    The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                                        },
                                        "newFeaturesSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "firewallInfoSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are\n    listed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "apiDocsSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "hardwareReplacementsSubtab": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                                        },
                                        "smForums": {
                                            "type": "string",
                                            "enum": [
                                                "default or inherit",
                                                "hide",
                                                "show"
                                            ],
                                            "description": "    The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for\n    organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                                        }
                                    },
                                    "description": "    Settings for describing the modifications to various Help page features. Each property in this object accepts one of\n    'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show\n    the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on\n    Dashboard; see the documentation for each property to see the allowed values.\n"
                                }
                            },
                            "example": {
                                "brandingPolicyId": "456",
                                "name": "My Branding Policy",
                                "enabled": true,
                                "adminSettings": {
                                    "appliesTo": "All admins of networks...",
                                    "values": [
                                        "N_1234",
                                        "L_5678"
                                    ]
                                },
                                "helpSettings": {
                                    "helpTab": "show",
                                    "getHelpSubtab": "default or inherit",
                                    "communitySubtab": "show",
                                    "casesSubtab": "hide",
                                    "dataProtectionRequestsSubtab": "default or inherit",
                                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                                    "universalSearchKnowledgeBaseSearch": "hide",
                                    "ciscoMerakiProductDocumentation": "show",
                                    "supportContactInfo": "show",
                                    "newFeaturesSubtab": "show",
                                    "firewallInfoSubtab": "hide",
                                    "apiDocsSubtab": "default or inherit",
                                    "hardwareReplacementsSubtab": "hide",
                                    "smForums": "hide"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "brandingPolicyId": "456",
                                "name": "My Branding Policy",
                                "enabled": true,
                                "adminSettings": {
                                    "appliesTo": "All admins of networks...",
                                    "values": [
                                        "N_1234",
                                        "L_5678"
                                    ]
                                },
                                "helpSettings": {
                                    "helpTab": "show",
                                    "getHelpSubtab": "default or inherit",
                                    "communitySubtab": "show",
                                    "casesSubtab": "hide",
                                    "dataProtectionRequestsSubtab": "default or inherit",
                                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                                    "universalSearchKnowledgeBaseSearch": "hide",
                                    "ciscoMerakiProductDocumentation": "show",
                                    "supportContactInfo": "show",
                                    "newFeaturesSubtab": "show",
                                    "firewallInfoSubtab": "hide",
                                    "apiDocsSubtab": "default or inherit",
                                    "hardwareReplacementsSubtab": "hide",
                                    "smForums": "hide"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a branding policy",
                "tags": [
                    "organizations",
                    "configure",
                    "brandingPolicies"
                ]
            },
            "delete": {
                "description": "Delete a branding policy",
                "operationId": "deleteOrganizationBrandingPolicy",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "brandingPolicyId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a branding policy",
                "tags": [
                    "organizations",
                    "configure",
                    "brandingPolicies"
                ]
            }
        },
        "/organizations/{organizationId}/claim": {
            "post": {
                "description": "Claim a list of devices, licenses, and/or orders into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory.",
                "operationId": "claimOrganization",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "claimOrganization",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orders": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "The numbers of the orders that should be claimed"
                                },
                                "serials": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "The serials of the devices that should be claimed"
                                },
                                "licenses": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "description": "The key of the license"
                                            },
                                            "mode": {
                                                "type": "string",
                                                "enum": [
                                                    "addDevices",
                                                    "renew"
                                                ],
                                                "description": "Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. This parameter is legacy and only applies to coterm licensing; it should not be specified when claiming per-device licenses. Please see <a target='_blank' href='https://documentation.meraki.com/zGeneral_Administration/Licensing/Adding_an_Enterprise_license_to_an_existing_Dashboard_account'>this article</a> for more information."
                                            }
                                        },
                                        "required": [
                                            "key"
                                        ]
                                    },
                                    "description": "The licenses that should be claimed"
                                }
                            },
                            "example": {
                                "orders": [
                                    "4CXXXXXXX"
                                ],
                                "serials": [
                                    "Q234-ABCD-5678"
                                ],
                                "licenses": [
                                    {
                                        "key": "Z2XXXXXXXXXX",
                                        "mode": "addDevices"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "orders": [
                                    "4CXXXXXXX"
                                ],
                                "serials": [
                                    "Q234-ABCD-5678"
                                ],
                                "licenses": [
                                    {
                                        "key": "Z2XXXXXXXXXX",
                                        "mode": "addDevices"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Claim a list of devices, licenses, and/or orders into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory.",
                "tags": [
                    "organizations",
                    "configure",
                    "claim"
                ]
            }
        },
        "/organizations/{organizationId}/clone": {
            "post": {
                "description": "Create a new organization by cloning the addressed organization",
                "operationId": "cloneOrganization",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "cloneOrganization",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new organization"
                                }
                            },
                            "example": {
                                "name": "My organization"
                            },
                            "required": [
                                "name"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "2930418",
                                "name": "My organization",
                                "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"
                            }
                        }
                    }
                },
                "summary": "Create a new organization by cloning the addressed organization",
                "tags": [
                    "organizations",
                    "configure",
                    "clone"
                ]
            }
        },
        "/organizations/{organizationId}/configTemplates": {
            "get": {
                "description": "List the configuration templates for this organization",
                "operationId": "getOrganizationConfigTemplates",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "N_24329156",
                                    "name": "My config template",
                                    "productTypes": [
                                        "appliance",
                                        "switch",
                                        "wireless"
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "List the configuration templates for this organization",
                "tags": [
                    "organizations",
                    "configure",
                    "configTemplates"
                ]
            }
        },
        "/organizations/{organizationId}/configTemplates/{configTemplateId}": {
            "delete": {
                "description": "Remove a configuration template",
                "operationId": "deleteOrganizationConfigTemplate",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "configTemplateId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Remove a configuration template",
                "tags": [
                    "organizations",
                    "configure",
                    "configTemplates"
                ]
            }
        },
        "/organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles": {
            "get": {
                "description": "List the switch profiles for your switch template configuration",
                "operationId": "getOrganizationConfigTemplateSwitchProfiles",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "configTemplateId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "switchProfileId": "1234",
                                    "name": "A Simple Switch Profile",
                                    "model": "MS450-24"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the switch profiles for your switch template configuration",
                "tags": [
                    "organizations",
                    "configure",
                    "configTemplates",
                    "switchProfiles"
                ]
            }
        },
        "/organizations/{organizationId}/configurationChanges": {
            "get": {
                "description": "View the Change Log for your organization",
                "operationId": "getOrganizationConfigurationChanges",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "networkId",
                        "in": "query",
                        "description": "Filters on the given network"
                    },
                    {
                        "type": "string",
                        "name": "adminId",
                        "in": "query",
                        "description": "Filters on the given Admin"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "ts": "2018-02-11T00:00:00.090210Z",
                                    "adminName": "Miles Meraki",
                                    "adminEmail": "miles@meraki.com",
                                    "adminId": "212406",
                                    "page": "via API",
                                    "label": "PUT /api/v1/organizations/2930418",
                                    "oldValue": "{\"id\":\"2930418\",\"name\":\"My organization\",\"url\":\"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"}",
                                    "newValue": "{\"id\":\"2930418\",\"name\":\"My organization changed\",\"url\":\"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"}"
                                }
                            ]
                        }
                    }
                },
                "summary": "View the Change Log for your organization",
                "tags": [
                    "organizations",
                    "monitor",
                    "configurationChanges"
                ]
            }
        },
        "/organizations/{organizationId}/devices": {
            "get": {
                "description": "List the devices in an organization",
                "operationId": "getOrganizationDevices",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "configurationUpdatedAfter",
                        "in": "query",
                        "description": "Filter results by whether or not the device's configuration has been updated after the given timestamp"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "My AP",
                                    "lat": 37.4180951010362,
                                    "lng": -122.098531723022,
                                    "address": "1600 Pennsylvania Ave",
                                    "notes": "My AP's note",
                                    "tags": " recently-added ",
                                    "networkId": "N_24329156",
                                    "serial": "Q234-ABCD-5678",
                                    "model": "MR34",
                                    "mac": "00:11:22:33:44:55",
                                    "lanIp": "1.2.3.4",
                                    "firmware": "wireless-25-14"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the devices in an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "devices"
                ]
            }
        },
        "/organizations/{organizationId}/devices/statuses": {
            "get": {
                "description": "List the status of every Meraki device in the organization",
                "operationId": "getOrganizationDevicesStatuses",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "My AP",
                                    "serial": "Q234-ABCD-5678",
                                    "mac": "00:11:22:33:44:55",
                                    "status": "online",
                                    "lanIp": "1.2.3.4",
                                    "publicIp": "123.123.123.1",
                                    "networkId": "N_24329156"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the status of every Meraki device in the organization",
                "tags": [
                    "organizations",
                    "monitor",
                    "devices",
                    "statuses"
                ]
            }
        },
        "/organizations/{organizationId}/devices/uplinksLossAndLatency": {
            "get": {
                "description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
                "operationId": "getOrganizationDevicesUplinksLossAndLatency",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "wan1",
                            "wan2",
                            "cellular"
                        ],
                        "name": "uplink",
                        "in": "query",
                        "description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
                    },
                    {
                        "type": "string",
                        "name": "ip",
                        "in": "query",
                        "description": "Optional filter for a specific destination IP. Default will return all destination IPs."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "networkId": "N_12345",
                                    "serial": "Q2AB-CDEF-GHIJ",
                                    "uplink": "wan1",
                                    "ip": "8.8.8.8",
                                    "timeSeries": [
                                        {
                                            "ts": "2019-01-31T18:46:13Z",
                                            "lossPercent": 5.3,
                                            "latencyMs": 194.9
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
                "tags": [
                    "organizations",
                    "monitor",
                    "devices",
                    "uplinksLossAndLatency"
                ]
            }
        },
        "/organizations/{organizationId}/insight/monitoredMediaServers": {
            "get": {
                "description": "List the monitored media servers for this organization. Only valid for organizations with Meraki Insight.",
                "operationId": "getOrganizationInsightMonitoredMediaServers",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1284392014819",
                                    "name": "Sample VoIP Provider",
                                    "address": "123.123.123.1"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the monitored media servers for this organization. Only valid for organizations with Meraki Insight.",
                "tags": [
                    "insight",
                    "configure",
                    "monitoredMediaServers"
                ]
            },
            "post": {
                "description": "Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.",
                "operationId": "createOrganizationInsightMonitoredMediaServer",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationInsightMonitoredMediaServer",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the VoIP provider"
                                },
                                "address": {
                                    "type": "string",
                                    "description": "The IP address (IPv4 only) or hostname of the media server to monitor"
                                }
                            },
                            "example": {
                                "name": "Sample VoIP Provider",
                                "address": "123.123.123.1"
                            },
                            "required": [
                                "name",
                                "address"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "name": "Sample VoIP Provider",
                                "address": "123.123.123.1"
                            }
                        }
                    }
                },
                "summary": "Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.",
                "tags": [
                    "insight",
                    "configure",
                    "monitoredMediaServers"
                ]
            }
        },
        "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}": {
            "get": {
                "description": "Return a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
                "operationId": "getOrganizationInsightMonitoredMediaServer",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "monitoredMediaServerId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "name": "Sample VoIP Provider",
                                "address": "123.123.123.1"
                            }
                        }
                    }
                },
                "summary": "Return a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
                "tags": [
                    "insight",
                    "configure",
                    "monitoredMediaServers"
                ]
            },
            "put": {
                "description": "Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
                "operationId": "updateOrganizationInsightMonitoredMediaServer",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "monitoredMediaServerId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationInsightMonitoredMediaServer",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the VoIP provider"
                                },
                                "address": {
                                    "type": "string",
                                    "description": "The IP address (IPv4 only) or hostname of the media server to monitor"
                                }
                            },
                            "example": {
                                "name": "Sample VoIP Provider",
                                "address": "123.123.123.1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "name": "Sample VoIP Provider",
                                "address": "123.123.123.1"
                            }
                        }
                    }
                },
                "summary": "Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
                "tags": [
                    "insight",
                    "configure",
                    "monitoredMediaServers"
                ]
            },
            "delete": {
                "description": "Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.",
                "operationId": "deleteOrganizationInsightMonitoredMediaServer",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "monitoredMediaServerId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.",
                "tags": [
                    "insight",
                    "configure",
                    "monitoredMediaServers"
                ]
            }
        },
        "/organizations/{organizationId}/inventory": {
            "get": {
                "description": "Return the device inventory for an organization",
                "operationId": "getOrganizationInventory",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "mac": "00:11:22:33:44:55",
                                    "serial": "Q234-ABCD-5678",
                                    "name": "My AP",
                                    "model": "MR34",
                                    "networkId": "N_24329156",
                                    "orderNumber": "4C1234567",
                                    "claimedAt": "2018-02-11T00:00:00.090210Z",
                                    "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the device inventory for an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "inventory"
                ]
            }
        },
        "/organizations/{organizationId}/licenses": {
            "get": {
                "description": "List the licenses for an organization",
                "operationId": "getOrganizationLicenses",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "deviceSerial",
                        "in": "query",
                        "description": "Filter the licenses to those assigned to a particular device"
                    },
                    {
                        "type": "string",
                        "name": "networkId",
                        "in": "query",
                        "description": "Filter the licenses to those assigned in a particular network"
                    },
                    {
                        "type": "string",
                        "enum": [
                            "active",
                            "expired",
                            "expiring",
                            "unused",
                            "unusedActive",
                            "recentlyQueued"
                        ],
                        "name": "state",
                        "in": "query",
                        "description": "Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'unused', 'unusedActive' or 'recentlyQueued'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1234",
                                    "licenseType": "MX64-ENT",
                                    "licenseKey": "Z21234567890",
                                    "orderNumber": "4C1234567",
                                    "deviceSerial": "Q234-ABCD-5678",
                                    "networkId": "N_24329156",
                                    "state": "active",
                                    "seatCount": null,
                                    "totalDurationInDays": 425,
                                    "durationInDays": 365,
                                    "permanentlyQueuedLicenses": [
                                        {
                                            "id": "5678",
                                            "licenseType": "MX64-ENT",
                                            "licenseKey": "Z21234567890",
                                            "orderNumber": "4C1234567",
                                            "durationInDays": 60
                                        }
                                    ],
                                    "claimDate": "2019-08-29T12:40:10Z",
                                    "activationDate": "2019-09-01T15:01:46Z",
                                    "expirationDate": "2020-10-30T15:01:46Z"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the licenses for an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "licenses"
                ]
            }
        },
        "/organizations/{organizationId}/licenses/assignSeats": {
            "post": {
                "description": "Assign SM seats to a network. This will increase the managed SM device limit of the network",
                "operationId": "assignOrganizationLicensesSeats",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "assignOrganizationLicensesSeats",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "licenseId": {
                                    "type": "string",
                                    "description": "The ID of the SM license to assign seats from"
                                },
                                "networkId": {
                                    "type": "string",
                                    "description": "The ID of the SM network to assign the seats to"
                                },
                                "seatCount": {
                                    "type": "integer",
                                    "description": "The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license"
                                }
                            },
                            "example": {
                                "licenseId": "1234",
                                "networkId": "N_24329156",
                                "seatCount": 20
                            },
                            "required": [
                                "licenseId",
                                "networkId",
                                "seatCount"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "resultingLicenses": [
                                    {
                                        "id": "1234",
                                        "licenseType": "SME",
                                        "licenseKey": "Z21234567890",
                                        "orderNumber": "4C1234567",
                                        "deviceSerial": null,
                                        "networkId": "N_24329156",
                                        "state": "active",
                                        "seatCount": 25,
                                        "totalDurationInDays": 365,
                                        "durationInDays": 365,
                                        "permanentlyQueuedLicenses": [],
                                        "claimDate": "2019-08-29T12:40:10Z",
                                        "activationDate": "2019-09-01T15:01:46Z",
                                        "expirationDate": "2020-08-31T15:01:46Z"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Assign SM seats to a network. This will increase the managed SM device limit of the network",
                "tags": [
                    "organizations",
                    "configure",
                    "licenses",
                    "assignSeats"
                ]
            }
        },
        "/organizations/{organizationId}/licenses/move": {
            "post": {
                "description": "Move licenses to another organization. This will also move any devices that the licenses are assigned to",
                "operationId": "moveOrganizationLicenses",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "moveOrganizationLicenses",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "destOrganizationId": {
                                    "type": "string",
                                    "description": "The ID of the organization to move the licenses to"
                                },
                                "licenseIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of IDs of licenses to move to the new organization"
                                }
                            },
                            "example": {
                                "destOrganizationId": "2930418",
                                "licenseIds": [
                                    "123",
                                    "456"
                                ]
                            },
                            "required": [
                                "destOrganizationId",
                                "licenseIds"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "destOrganizationId": "2930418",
                                "licenseIds": [
                                    "123",
                                    "456"
                                ]
                            }
                        }
                    }
                },
                "summary": "Move licenses to another organization. This will also move any devices that the licenses are assigned to",
                "tags": [
                    "organizations",
                    "configure",
                    "licenses",
                    "move"
                ]
            }
        },
        "/organizations/{organizationId}/licenses/moveSeats": {
            "post": {
                "description": "Move SM seats to another organization",
                "operationId": "moveOrganizationLicensesSeats",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "moveOrganizationLicensesSeats",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "destOrganizationId": {
                                    "type": "string",
                                    "description": "The ID of the organization to move the SM seats to"
                                },
                                "licenseId": {
                                    "type": "string",
                                    "description": "The ID of the SM license to move the seats from"
                                },
                                "seatCount": {
                                    "type": "integer",
                                    "description": "The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license"
                                }
                            },
                            "example": {
                                "destOrganizationId": "2930418",
                                "licenseId": "1234",
                                "seatCount": 20
                            },
                            "required": [
                                "destOrganizationId",
                                "licenseId",
                                "seatCount"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "destOrganizationId": "2930418",
                                "licenseId": "1234",
                                "seatCount": 20
                            }
                        }
                    }
                },
                "summary": "Move SM seats to another organization",
                "tags": [
                    "organizations",
                    "configure",
                    "licenses",
                    "moveSeats"
                ]
            }
        },
        "/organizations/{organizationId}/licenses/overview": {
            "get": {
                "description": "Return an overview of the license state for an organization",
                "operationId": "getOrganizationLicensesOverview",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "status": "OK",
                                "expirationDate": "Feb 8, 2020 UTC",
                                "licensedDeviceCounts": {
                                    "MS": 100
                                }
                            }
                        }
                    }
                },
                "summary": "Return an overview of the license state for an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "licenses",
                    "overview"
                ]
            }
        },
        "/organizations/{organizationId}/licenses/renewSeats": {
            "post": {
                "description": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license",
                "operationId": "renewOrganizationLicensesSeats",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "renewOrganizationLicensesSeats",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "licenseIdToRenew": {
                                    "type": "string",
                                    "description": "The ID of the SM license to renew. This license must already be assigned to an SM network"
                                },
                                "unusedLicenseId": {
                                    "type": "string",
                                    "description": "The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'"
                                }
                            },
                            "example": {
                                "licenseIdToRenew": "123",
                                "unusedLicenseId": "1234"
                            },
                            "required": [
                                "licenseIdToRenew",
                                "unusedLicenseId"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "resultingLicenses": [
                                    {
                                        "id": "1234",
                                        "licenseType": "SME",
                                        "licenseKey": "Z21234567890",
                                        "orderNumber": "4C1234567",
                                        "deviceSerial": null,
                                        "networkId": "N_24329156",
                                        "state": "active",
                                        "seatCount": 25,
                                        "totalDurationInDays": 365,
                                        "durationInDays": 365,
                                        "permanentlyQueuedLicenses": [],
                                        "claimDate": "2019-08-29T12:40:10Z",
                                        "activationDate": "2019-09-01T15:01:46Z",
                                        "expirationDate": "2020-08-31T15:01:46Z"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license",
                "tags": [
                    "organizations",
                    "configure",
                    "licenses",
                    "renewSeats"
                ]
            }
        },
        "/organizations/{organizationId}/licenses/{licenseId}": {
            "get": {
                "description": "Display a license",
                "operationId": "getOrganizationLicense",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "licenseId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "licenseType": "MX64-ENT",
                                "licenseKey": "Z21234567890",
                                "orderNumber": "4C1234567",
                                "deviceSerial": "Q234-ABCD-5678",
                                "networkId": "N_24329156",
                                "state": "active",
                                "seatCount": null,
                                "totalDurationInDays": 425,
                                "durationInDays": 365,
                                "permanentlyQueuedLicenses": [
                                    {
                                        "id": "5678",
                                        "licenseType": "MX64-ENT",
                                        "licenseKey": "Z21234567890",
                                        "orderNumber": "4C1234567",
                                        "durationInDays": 60
                                    }
                                ],
                                "claimDate": "2019-08-29T12:40:10Z",
                                "activationDate": "2019-09-01T15:01:46Z",
                                "expirationDate": "2020-10-30T15:01:46Z"
                            }
                        }
                    }
                },
                "summary": "Display a license",
                "tags": [
                    "organizations",
                    "configure",
                    "licenses"
                ]
            },
            "put": {
                "description": "Update a license",
                "operationId": "updateOrganizationLicense",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "licenseId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationLicense",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "deviceSerial": {
                                    "type": "string",
                                    "description": "The serial number of the device to assign this license to. Set this to null to unassign the license. If a different license is already active on the device, this parameter will control queueing/dequeuing this license."
                                }
                            },
                            "example": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "licenseType": "MX64-ENT",
                                "licenseKey": "Z21234567890",
                                "orderNumber": "4C1234567",
                                "deviceSerial": "Q234-ABCD-5678",
                                "networkId": "N_24329156",
                                "state": "active",
                                "seatCount": null,
                                "totalDurationInDays": 425,
                                "durationInDays": 365,
                                "permanentlyQueuedLicenses": [
                                    {
                                        "id": "5678",
                                        "licenseType": "MX64-ENT",
                                        "licenseKey": "Z21234567890",
                                        "orderNumber": "4C1234567",
                                        "durationInDays": 60
                                    }
                                ],
                                "claimDate": "2019-08-29T12:40:10Z",
                                "activationDate": "2019-09-01T15:01:46Z",
                                "expirationDate": "2020-10-30T15:01:46Z"
                            }
                        }
                    }
                },
                "summary": "Update a license",
                "tags": [
                    "organizations",
                    "configure",
                    "licenses"
                ]
            }
        },
        "/organizations/{organizationId}/networks": {
            "get": {
                "description": "List the networks in an organization",
                "operationId": "getOrganizationNetworks",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "configTemplateId",
                        "in": "query",
                        "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "L_123456",
                                    "organizationId": "2930418",
                                    "name": "Long Island Office",
                                    "timeZone": "America/Los_Angeles",
                                    "tags": " tag1 tag2 ",
                                    "productTypes": [
                                        "appliance",
                                        "switch",
                                        "wireless"
                                    ],
                                    "enrollmentString": "long-island-office"
                                }
                            ]
                        }
                    }
                },
                "summary": "List the networks in an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "post": {
                "description": "Create a network",
                "operationId": "createOrganizationNetwork",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new network"
                                },
                                "productTypes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "wireless",
                                            "appliance",
                                            "switch",
                                            "systemsManager",
                                            "camera",
                                            "cellularGateway"
                                        ]
                                    },
                                    "description": "The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway. If more than one type is included, the network will be a combined network."
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "A space-separated list of tags to be applied to the network"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                },
                                "copyFromNetworkId": {
                                    "type": "string",
                                    "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": " tag1 tag2 ",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "camera"
                                ]
                            },
                            "required": [
                                "name",
                                "productTypes"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": " tag1 tag2 ",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Create a network",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            }
        },
        "/organizations/{organizationId}/networks/combine": {
            "post": {
                "description": "Combine multiple networks into a single network",
                "operationId": "combineOrganizationNetworks",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "combineOrganizationNetworks",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the combined network"
                                },
                                "networkIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network"
                                },
                                "enrollmentString": {
                                    "type": "string",
                                    "description": "A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "networkIds": [
                                    "N_1234",
                                    "N_5678"
                                ]
                            },
                            "required": [
                                "name",
                                "networkIds"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "resultingNetwork": {
                                    "id": "L_123456",
                                    "organizationId": "2930418",
                                    "name": "Long Island Office",
                                    "timeZone": "America/Los_Angeles",
                                    "tags": " tag1 tag2 ",
                                    "productTypes": [
                                        "appliance",
                                        "switch",
                                        "wireless"
                                    ],
                                    "enrollmentString": "long-island-office"
                                }
                            }
                        }
                    }
                },
                "summary": "Combine multiple networks into a single network",
                "tags": [
                    "organizations",
                    "configure",
                    "networks",
                    "combine"
                ]
            }
        },
        "/organizations/{organizationId}/openapiSpec": {
            "get": {
                "description": "Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON",
                "operationId": "getOrganizationOpenapiSpec",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "swagger": "2.0",
                                "info": {
                                    "version": "v0",
                                    "title": "Meraki Dashboard API",
                                    "description": "This collection of API calls provides an easy way to interact with a Cisco Meraki network"
                                },
                                "paths": {
                                    "/organizations": {
                                        "get": {
                                            "description": "List the organizations that the user has privileges on",
                                            "operationId": "getOrganizations",
                                            "responses": {
                                                "200": {
                                                    "description": "Successful operation",
                                                    "examples": {
                                                        "application/json": [
                                                            {
                                                                "id": "2930418",
                                                                "name": "My organization"
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON",
                "tags": [
                    "organizations",
                    "configure",
                    "openapiSpec"
                ]
            }
        },
        "/organizations/{organizationId}/samlRoles": {
            "get": {
                "description": "List the SAML roles for this organization",
                "operationId": "getOrganizationSamlRoles",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "TEdJIEN1c3RvbWVy",
                                    "role": "myrole",
                                    "orgAccess": "none",
                                    "networks": [
                                        {
                                            "id": "N_1234",
                                            "access": "full"
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "tag": "west",
                                            "access": "read-only"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "summary": "List the SAML roles for this organization",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "post": {
                "description": "Create a SAML role",
                "operationId": "createOrganizationSamlRole",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator"
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "description": "The privilege of the SAML administrator on the organization"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag"
                                            },
                                            "access": {
                                                "type": "string",
                                                "description": "The privilege of the SAML administrator on the tag"
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID"
                                            },
                                            "access": {
                                                "type": "string",
                                                "description": "The privilege of the SAML administrator on the network"
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {}
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [
                                    {
                                        "id": "N_1234",
                                        "access": "full"
                                    }
                                ],
                                "tags": [
                                    {
                                        "tag": "west",
                                        "access": "read-only"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Create a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            }
        },
        "/organizations/{organizationId}/samlRoles/{samlRoleId}": {
            "get": {
                "description": "Return a SAML role",
                "operationId": "getOrganizationSamlRole",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "samlRoleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [
                                    {
                                        "id": "N_1234",
                                        "access": "full"
                                    }
                                ],
                                "tags": [
                                    {
                                        "tag": "west",
                                        "access": "read-only"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "put": {
                "description": "Update a SAML role",
                "operationId": "updateOrganizationSamlRole",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "samlRoleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator"
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "description": "The privilege of the SAML administrator on the organization"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag"
                                            },
                                            "access": {
                                                "type": "string",
                                                "description": "The privilege of the SAML administrator on the tag"
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID"
                                            },
                                            "access": {
                                                "type": "string",
                                                "description": "The privilege of the SAML administrator on the network"
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [
                                    {
                                        "id": "N_1234",
                                        "access": "full"
                                    }
                                ],
                                "tags": [
                                    {
                                        "tag": "west",
                                        "access": "read-only"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "delete": {
                "description": "Remove a SAML role",
                "operationId": "deleteOrganizationSamlRole",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "samlRoleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Remove a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            }
        },
        "/organizations/{organizationId}/securityEvents": {
            "get": {
                "description": "List the security events for an organization",
                "operationId": "getOrganizationSecurityEvents",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "ts": "2018-02-11T00:00:00.090210Z",
                                    "deviceMac": "00:18:0a:01:02:03",
                                    "clientMac": "A1:B2:C3:D4:E5:F6",
                                    "srcIp": "1.2.3.4:34195",
                                    "destIp": "10.20.30.40:80",
                                    "protocol": "tcp/ip",
                                    "priority": "2",
                                    "classification": "4",
                                    "blocked": true,
                                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",
                                    "signature": "1:21516:9",
                                    "sigSource": ""
                                },
                                {
                                    "ts": "2018-02-11T00:00:00.090210Z",
                                    "deviceMac": "00:18:0a:01:02:03",
                                    "clientMac": "A1:B2:C3:D4:E5:F6",
                                    "srcIp": "1.2.3.4:56023",
                                    "destIp": "10.20.30.40:80",
                                    "protocol": "tcp/ip",
                                    "priority": "1",
                                    "classification": "33",
                                    "blocked": true,
                                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
                                    "signature": "1:25975:2",
                                    "sigSource": ""
                                }
                            ]
                        }
                    }
                },
                "summary": "List the security events for an organization",
                "tags": [
                    "organizations",
                    "monitor",
                    "securityEvents"
                ]
            }
        },
        "/organizations/{organizationId}/sm/apnsCert": {
            "get": {
                "description": "Get the organization's APNS certificate",
                "operationId": "getOrganizationSmApnsCert",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "certificate": "-----BEGIN CERTIFICATE-----\nMIIFdjCCBF6gAwIBAgIIM/hhf5ww8MwwDQYJKoZIhvcNAQELBQAwgYwxQDA+BgNV\nBAMMN0FwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIDIgQ2VydGlmaWNhdGlv\nbiBBdXRob3JpdHkxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9y\naXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yMDAyMjYx\nODIzNDJaFw0yMTAyMjUxODIzNDJaMIGPMUwwSgYKCZImiZPyLGQBAQw8Y29tLmFw\ncGxlLm1nbXQuRXh0ZXJuYWwuOTA3NDJhYmYtZDhhZC00MTc2LTllZmQtMGNiMzg1\nMTM1MGM0MTIwMAYDVQQDDClBUFNQOjkwNzQyYWJmLWQ4YWQtNDE3Ni05ZWZkLTBj\nYjM4NTEzNTBjNDELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDANdpo62hfxkP1IpMPXuO1+xKekUkY+iYae6cRaP886bodUaH1OwCj\nQd011u9Vng6m8I9rcLdIOS+IkFGKcTAHRYY3noqfEQUPyi5TN6yM1/mVYVoWZUnY\nTrNWqDN/HfRagdYfZyQ7kAtOY2K8TF78HLLqQm7ez2+r4qibumoSli9+qCzKwDW/\nhbx7JTeMlbYkhLTFgBkRxlp+usKymsLKm8D7kdbxtct4mx6p9z1FiNu4U1Hi/PgK\nI/V3zHD4Ww7SzTICiLdCPeAmt042JvXAMQi0qhzrEdDiapmWwUC9xiiORN0BTIRA\nT+DddTx8Xcly4wj9vQFdGUGLrJnzB3xZAgMBAAGjggHVMIIB0TAJBgNVHRMEAjAA\nMB8GA1UdIwQYMBaAFPe+fCFgkds9G3vYOjKBad+ebH+bMIIBHAYDVR0gBIIBEz..."
                            }
                        }
                    }
                },
                "summary": "Get the organization's APNS certificate",
                "tags": [
                    "sm",
                    "configure",
                    "apnsCert"
                ]
            }
        },
        "/organizations/{organizationId}/sm/vppAccounts": {
            "get": {
                "description": "List the VPP accounts in the organization",
                "operationId": "getOrganizationSmVppAccounts",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1284392014819",
                                    "vppServiceToken": "eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0="
                                }
                            ]
                        }
                    }
                },
                "summary": "List the VPP accounts in the organization",
                "tags": [
                    "sm",
                    "configure",
                    "vppAccounts"
                ]
            }
        },
        "/organizations/{organizationId}/sm/vppAccounts/{vppAccountId}": {
            "get": {
                "description": "Get a hash containing the unparsed token of the VPP account with the given ID",
                "operationId": "getOrganizationSmVppAccount",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "vppAccountId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "vppServiceToken": "eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0="
                            }
                        }
                    }
                },
                "summary": "Get a hash containing the unparsed token of the VPP account with the given ID",
                "tags": [
                    "sm",
                    "configure",
                    "vppAccounts"
                ]
            }
        },
        "/organizations/{organizationId}/snmp": {
            "get": {
                "description": "Return the SNMP settings for an organization",
                "operationId": "getOrganizationSnmp",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "v2cEnabled": false,
                                "v3Enabled": true,
                                "v3AuthMode": "SHA",
                                "v3PrivMode": "AES128",
                                "peerIps": "123.123.123.1",
                                "hostname": "n1.meraki.com",
                                "port": 443
                            }
                        }
                    }
                },
                "summary": "Return the SNMP settings for an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "snmp"
                ]
            },
            "put": {
                "description": "Update the SNMP settings for an organization",
                "operationId": "updateOrganizationSnmp",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationSnmp",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "v2cEnabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether SNMP version 2c is enabled for the organization."
                                },
                                "v3Enabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether SNMP version 3 is enabled for the organization."
                                },
                                "v3AuthMode": {
                                    "type": "string",
                                    "enum": [
                                        "MD5",
                                        "SHA"
                                    ],
                                    "description": "The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'."
                                },
                                "v3AuthPass": {
                                    "type": "string",
                                    "description": "The SNMP version 3 authentication password. Must be at least 8 characters if specified."
                                },
                                "v3PrivMode": {
                                    "type": "string",
                                    "enum": [
                                        "DES",
                                        "AES128"
                                    ],
                                    "description": "The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'."
                                },
                                "v3PrivPass": {
                                    "type": "string",
                                    "description": "The SNMP version 3 privacy password. Must be at least 8 characters if specified."
                                },
                                "peerIps": {
                                    "type": "string",
                                    "description": "The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. \"1.2.3.4;2.3.4.5\")."
                                }
                            },
                            "example": {
                                "v2cEnabled": false,
                                "v3Enabled": true,
                                "v3AuthMode": "SHA",
                                "v3PrivMode": "AES128",
                                "peerIps": "123.123.123.1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "v2cEnabled": false,
                                "v3Enabled": true,
                                "v3AuthMode": "SHA",
                                "v3PrivMode": "AES128",
                                "peerIps": "123.123.123.1",
                                "hostname": "n1.meraki.com",
                                "port": 443
                            }
                        }
                    }
                },
                "summary": "Update the SNMP settings for an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "snmp"
                ]
            }
        },
        "/organizations/{organizationId}/thirdPartyVPNPeers": {
            "get": {
                "description": "Return the third party VPN peers for an organization",
                "operationId": "getOrganizationThirdPartyVPNPeers",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "peers": [
                                    {
                                        "name": "My peer 1",
                                        "publicIp": "123.123.123.1",
                                        "privateSubnets": [
                                            "192.168.1.0/24",
                                            "192.168.128.0/24"
                                        ],
                                        "secret": "asdf1234",
                                        "ipsecPolicies": {
                                            "ikeCipherAlgo": [
                                                "tripledes"
                                            ],
                                            "ikeAuthAlgo": [
                                                "sha1"
                                            ],
                                            "ikeDiffieHellmanGroup": [
                                                "group2"
                                            ],
                                            "ikeLifetime": 28800,
                                            "childCipherAlgo": [
                                                "aes128"
                                            ],
                                            "childAuthAlgo": [
                                                "sha1"
                                            ],
                                            "childPfsGroup": [
                                                "disabled"
                                            ],
                                            "childLifetime": 28800
                                        }
                                    },
                                    {
                                        "name": "My peer 2",
                                        "publicIp": "123.123.123.2",
                                        "remoteId": "miles@meraki.com",
                                        "privateSubnets": [
                                            "192.168.2.0/24",
                                            "192.168.129.0/24"
                                        ],
                                        "secret": "asdf56785678567856785678",
                                        "ipsecPoliciesPreset": "default"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the third party VPN peers for an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "thirdPartyVPNPeers"
                ]
            },
            "put": {
                "description": "Update the third party VPN peers for an organization",
                "operationId": "updateOrganizationThirdPartyVPNPeers",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationThirdPartyVPNPeers",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "peers": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the VPN peer"
                                            },
                                            "publicIp": {
                                                "type": "string",
                                                "description": "The public IP of the VPN peer"
                                            },
                                            "remoteId": {
                                                "type": "string",
                                                "description": "[optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN."
                                            },
                                            "privateSubnets": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "The list of the private subnets of the VPN peer"
                                            },
                                            "ipsecPolicies": {
                                                "type": "object",
                                                "properties": {
                                                    "ikeCipherAlgo": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'"
                                                    },
                                                    "ikeAuthAlgo": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha1', 'md5'"
                                                    },
                                                    "ikeDiffieHellmanGroup": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group5', 'group2', 'group1'"
                                                    },
                                                    "ikeLifetime": {
                                                        "type": "integer",
                                                        "description": "The lifetime of the Phase 1 SA in seconds."
                                                    },
                                                    "childCipherAlgo": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'"
                                                    },
                                                    "childAuthAlgo": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha1', 'md5'"
                                                    },
                                                    "childPfsGroup": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled', 'group5', 'group2', 'group1'"
                                                    },
                                                    "childLifetime": {
                                                        "type": "integer",
                                                        "description": "The lifetime of the Phase 2 SA in seconds."
                                                    }
                                                },
                                                "description": "Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used."
                                            },
                                            "ipsecPoliciesPreset": {
                                                "type": "string",
                                                "description": "One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored."
                                            },
                                            "secret": {
                                                "type": "string",
                                                "description": "The shared secret with the VPN peer"
                                            },
                                            "networkTags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all']."
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "publicIp",
                                            "privateSubnets",
                                            "secret"
                                        ]
                                    },
                                    "description": "The list of VPN peers"
                                }
                            },
                            "example": {
                                "peers": [
                                    {
                                        "name": "My peer 1",
                                        "publicIp": "123.123.123.1",
                                        "privateSubnets": [
                                            "192.168.1.0/24",
                                            "192.168.128.0/24"
                                        ],
                                        "secret": "asdf1234",
                                        "ipsecPolicies": {
                                            "ikeCipherAlgo": [
                                                "tripledes"
                                            ],
                                            "ikeAuthAlgo": [
                                                "sha1"
                                            ],
                                            "ikeDiffieHellmanGroup": [
                                                "group2"
                                            ],
                                            "ikeLifetime": 28800,
                                            "childCipherAlgo": [
                                                "aes128"
                                            ],
                                            "childAuthAlgo": [
                                                "sha1"
                                            ],
                                            "childPfsGroup": [
                                                "disabled"
                                            ],
                                            "childLifetime": 28800
                                        }
                                    },
                                    {
                                        "name": "My peer 2",
                                        "publicIp": "123.123.123.2",
                                        "remoteId": "miles@meraki.com",
                                        "privateSubnets": [
                                            "192.168.2.0/24",
                                            "192.168.129.0/24"
                                        ],
                                        "secret": "asdf56785678567856785678",
                                        "ipsecPoliciesPreset": "default"
                                    }
                                ]
                            },
                            "required": [
                                "peers"
                            ]
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "peers": [
                                    {
                                        "name": "My peer 1",
                                        "publicIp": "123.123.123.1",
                                        "privateSubnets": [
                                            "192.168.1.0/24",
                                            "192.168.128.0/24"
                                        ],
                                        "secret": "asdf1234",
                                        "ipsecPolicies": {
                                            "ikeCipherAlgo": [
                                                "tripledes"
                                            ],
                                            "ikeAuthAlgo": [
                                                "sha1"
                                            ],
                                            "ikeDiffieHellmanGroup": [
                                                "group2"
                                            ],
                                            "ikeLifetime": 28800,
                                            "childCipherAlgo": [
                                                "aes128"
                                            ],
                                            "childAuthAlgo": [
                                                "sha1"
                                            ],
                                            "childPfsGroup": [
                                                "disabled"
                                            ],
                                            "childLifetime": 28800
                                        }
                                    },
                                    {
                                        "name": "My peer 2",
                                        "publicIp": "123.123.123.2",
                                        "remoteId": "miles@meraki.com",
                                        "privateSubnets": [
                                            "192.168.2.0/24",
                                            "192.168.129.0/24"
                                        ],
                                        "secret": "asdf56785678567856785678",
                                        "ipsecPoliciesPreset": "default"
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the third party VPN peers for an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "thirdPartyVPNPeers"
                ]
            }
        },
        "/organizations/{organizationId}/vpnFirewallRules": {
            "get": {
                "description": "Return the firewall rules for an organization's site-to-site VPN",
                "operationId": "getOrganizationVpnFirewallRules",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Return the firewall rules for an organization's site-to-site VPN",
                "tags": [
                    "organizations",
                    "configure",
                    "vpnFirewallRules"
                ]
            },
            "put": {
                "description": "Update the firewall rules of an organization's site-to-site VPN",
                "operationId": "updateOrganizationVpnFirewallRules",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationVpnFirewallRules",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "comment": {
                                                "type": "string",
                                                "description": "Description of the rule (optional)"
                                            },
                                            "policy": {
                                                "type": "string",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ],
                                                "description": "'allow' or 'deny' traffic specified by this rule"
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "enum": [
                                                    "tcp",
                                                    "udp",
                                                    "icmp",
                                                    "any"
                                                ],
                                                "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')"
                                            },
                                            "srcPort": {
                                                "type": "string",
                                                "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                                            },
                                            "srcCidr": {
                                                "type": "string",
                                                "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)"
                                            },
                                            "destPort": {
                                                "type": "string",
                                                "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                                            },
                                            "destCidr": {
                                                "type": "string",
                                                "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)"
                                            },
                                            "syslogEnabled": {
                                                "type": "boolean",
                                                "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)"
                                            }
                                        },
                                        "required": [
                                            "policy",
                                            "protocol",
                                            "srcCidr",
                                            "destCidr"
                                        ]
                                    },
                                    "description": "An ordered array of the firewall rules (not including the default rule)"
                                },
                                "syslogDefaultRule": {
                                    "type": "boolean",
                                    "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)"
                                }
                            },
                            "example": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "examples": {
                            "application/json": {
                                "rules": [
                                    {
                                        "comment": "Allow TCP traffic to subnet with HTTP servers.",
                                        "policy": "allow",
                                        "protocol": "tcp",
                                        "destPort": 443,
                                        "destCidr": "192.168.1.0/24",
                                        "srcPort": "Any",
                                        "srcCidr": "Any",
                                        "syslogEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Update the firewall rules of an organization's site-to-site VPN",
                "tags": [
                    "organizations",
                    "configure",
                    "vpnFirewallRules"
                ]
            }
        },
        "/organizations/{organizationId}/webhookLogs": {
            "get": {
                "description": "Return the log of webhook POSTs sent",
                "operationId": "getOrganizationWebhookLogs",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "t0",
                        "in": "query",
                        "description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
                    },
                    {
                        "type": "string",
                        "name": "t1",
                        "in": "query",
                        "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                    },
                    {
                        "type": "number",
                        "format": "float",
                        "name": "timespan",
                        "in": "query",
                        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "url",
                        "in": "query",
                        "description": "The URL the webhook was sent to"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "x-is-dynamic": true
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "organizationId": "33619",
                                    "networkId": "L_22742",
                                    "alertType": "Settings changed",
                                    "url": "https://www.example.com/path",
                                    "sentAt": "2019-01-01T13:37:28.123456Z",
                                    "loggedAt": "2019-01-01T13:37:28.423456Z",
                                    "responseCode": 200,
                                    "responseDuration": 244
                                }
                            ]
                        }
                    }
                },
                "summary": "Return the log of webhook POSTs sent",
                "tags": [
                    "organizations",
                    "monitor",
                    "webhookLogs"
                ]
            }
        }
    },
    "tags": [
        {
            "name": "API usage"
        },
        {
            "name": "Action batches"
        },
        {
            "name": "Admins"
        },
        {
            "name": "Alert settings"
        },
        {
            "name": "Bluetooth clients"
        },
        {
            "name": "Bluetooth settings"
        },
        {
            "name": "Camera quality retention profiles"
        },
        {
            "name": "Cameras"
        },
        {
            "name": "Change log"
        },
        {
            "name": "Clients"
        },
        {
            "name": "Config templates"
        },
        {
            "name": "Connectivity monitoring destinations"
        },
        {
            "name": "Content filtering categories"
        },
        {
            "name": "Content filtering rules"
        },
        {
            "name": "Dashboard branding policies"
        },
        {
            "name": "Devices"
        },
        {
            "name": "Events"
        },
        {
            "name": "Firewalled services"
        },
        {
            "name": "Floorplans"
        },
        {
            "name": "Group policies"
        },
        {
            "name": "HTTP servers"
        },
        {
            "name": "Intrusion settings"
        },
        {
            "name": "Licenses"
        },
        {
            "name": "Link aggregations"
        },
        {
            "name": "MG DHCP settings"
        },
        {
            "name": "MG LAN settings"
        },
        {
            "name": "MG connectivity monitoring destinations"
        },
        {
            "name": "MG port forwarding rules"
        },
        {
            "name": "MG subnet pool settings"
        },
        {
            "name": "MG uplink settings"
        },
        {
            "name": "MR L3 firewall"
        },
        {
            "name": "MV Sense"
        },
        {
            "name": "MX 1:1 NAT rules"
        },
        {
            "name": "MX 1:Many NAT rules"
        },
        {
            "name": "MX L3 firewall"
        },
        {
            "name": "MX L7 application categories"
        },
        {
            "name": "MX L7 firewall"
        },
        {
            "name": "MX VLAN ports"
        },
        {
            "name": "MX VLANs settings"
        },
        {
            "name": "MX VPN firewall"
        },
        {
            "name": "MX cellular firewall"
        },
        {
            "name": "MX inbound firewall"
        },
        {
            "name": "MX port forwarding rules"
        },
        {
            "name": "MX static routes"
        },
        {
            "name": "MX warm spare settings"
        },
        {
            "name": "Malware settings"
        },
        {
            "name": "Management interface settings"
        },
        {
            "name": "Meraki auth users"
        },
        {
            "name": "Monitored media servers"
        },
        {
            "name": "Named tag scope"
        },
        {
            "name": "NetFlow settings"
        },
        {
            "name": "Network settings"
        },
        {
            "name": "Networks"
        },
        {
            "name": "OpenAPI Spec"
        },
        {
            "name": "Organizations"
        },
        {
            "name": "PII"
        },
        {
            "name": "Radio settings"
        },
        {
            "name": "SAML roles"
        },
        {
            "name": "SM"
        },
        {
            "name": "SNMP settings"
        },
        {
            "name": "SSIDs"
        },
        {
            "name": "Security events"
        },
        {
            "name": "Splash login attempts"
        },
        {
            "name": "Splash settings"
        },
        {
            "name": "Switch ACLs"
        },
        {
            "name": "Switch port schedules"
        },
        {
            "name": "Switch ports"
        },
        {
            "name": "Switch profiles"
        },
        {
            "name": "Switch settings"
        },
        {
            "name": "Switch stacks"
        },
        {
            "name": "Syslog servers"
        },
        {
            "name": "Traffic analysis settings"
        },
        {
            "name": "Traffic shaping"
        },
        {
            "name": "Uplink settings"
        },
        {
            "name": "VLANs"
        },
        {
            "name": "Vpp accounts"
        },
        {
            "name": "Webhook logs"
        },
        {
            "name": "Wireless health"
        },
        {
            "name": "Wireless settings"
        }
    ],
    "x-batchable-actions": [
        {
            "group": "Bluetooth device setting",
            "summary": "Update the bluetooth settings for a wireless device",
            "resource": "/devices/{serial}/wireless/bluetooth/settings",
            "operation": "update"
        },
        {
            "group": "Cellular gateway connectivity monitoring destination",
            "summary": "Update the connectivity testing destinations for an MG network",
            "resource": "/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations",
            "operation": "update"
        },
        {
            "group": "Cellular gateway device lan",
            "summary": "Update the LAN Settings for a single MG.",
            "resource": "/devices/{serial}/cellularGateway/settings",
            "operation": "update"
        },
        {
            "group": "Cellular gateway dhcp setting",
            "summary": "Update common DHCP settings of MGs",
            "resource": "/networks/{networkId}/cellularGateway/settings/dhcp",
            "operation": "update"
        },
        {
            "group": "Cellular gateway port forwarding rules",
            "summary": "Updates the port forwarding rules for a single MG.",
            "resource": "/devices/{serial}/cellularGateway/settings/portForwardingRules",
            "operation": "update"
        },
        {
            "group": "Cellular gateway subnet pool",
            "summary": "Update the subnet pool and mask configuration for MGs in the network.",
            "resource": "/networks/{networkId}/cellularGateway/settings/subnetPool",
            "operation": "update"
        },
        {
            "group": "Cellular gateway uplink setting",
            "summary": "Updates the uplink settings for your MG network.",
            "resource": "/networks/{networkId}/cellularGateway/settings/uplink",
            "operation": "update"
        },
        {
            "group": "Device",
            "summary": "Claim devices into a network",
            "resource": "/networks/{networkId}/devices",
            "operation": "claim"
        },
        {
            "group": "Dhcp server policy",
            "summary": "Update the DHCP server policy",
            "resource": "/networks/{networkId}/switch/settings/dhcpServerPolicy",
            "operation": "update"
        },
        {
            "group": "Dscp cos mapping",
            "summary": "Update the DSCP to CoS mappings",
            "resource": "/networks/{networkId}/switch/settings/dscpToCosMappings",
            "operation": "update"
        },
        {
            "group": "Floor plan",
            "summary": "Destroy a floor plan",
            "resource": "/networks/{networkId}/floorPlans/{floorPlanId}",
            "operation": "destroy"
        },
        {
            "group": "Floor plan",
            "summary": "Update a floor plan's geolocation and other meta data",
            "resource": "/networks/{networkId}/floorPlans/{floorPlanId}",
            "operation": "update"
        },
        {
            "group": "Group policy",
            "summary": "Create a group policy",
            "resource": "/networks/{networkId}/groupPolicies",
            "operation": "create"
        },
        {
            "group": "Group policy",
            "summary": "Delete a group policy",
            "resource": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
            "operation": "destroy"
        },
        {
            "group": "Group policy",
            "summary": "Update a group policy",
            "resource": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
            "operation": "update"
        },
        {
            "group": "License",
            "summary": "Assign SM seats to a network. This will increase the managed SM device limit of the network",
            "resource": "/organizations/{organizationId}/licenses",
            "operation": "assignSeats"
        },
        {
            "group": "License",
            "summary": "Move licenses to another organization. This will also move any devices that the licenses are assigned to",
            "resource": "/organizations/{organizationId}/licenses",
            "operation": "move"
        },
        {
            "group": "License",
            "summary": "Move SM seats to another organization",
            "resource": "/organizations/{organizationId}/licenses",
            "operation": "moveSeats"
        },
        {
            "group": "License",
            "summary": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license",
            "resource": "/organizations/{organizationId}/licenses",
            "operation": "renewSeats"
        },
        {
            "group": "License",
            "summary": "Update a license",
            "resource": "/organizations/{organizationId}/licenses/{licenseId}",
            "operation": "update"
        },
        {
            "group": "Link aggregation",
            "summary": "Create a link aggregation group",
            "resource": "/networks/{networkId}/switch/linkAggregations",
            "operation": "create"
        },
        {
            "group": "Link aggregation",
            "summary": "Split a link aggregation group into separate ports",
            "resource": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
            "operation": "destroy"
        },
        {
            "group": "Link aggregation",
            "summary": "Update a link aggregation group",
            "resource": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
            "operation": "update"
        },
        {
            "group": "MTU configuration",
            "summary": "Update the MTU configuration",
            "resource": "/networks/{networkId}/switch/settings/mtu",
            "operation": "update"
        },
        {
            "group": "MX VLAN settings",
            "summary": "Enable/Disable VLANs for the given network",
            "resource": "/networks/{networkId}/appliance/vlans/settings",
            "operation": "update"
        },
        {
            "group": "MX connectivity monitoring destination",
            "summary": "Update the connectivity testing destinations for an MX network",
            "resource": "/networks/{networkId}/appliance/connectivityMonitoringDestinations",
            "operation": "update"
        },
        {
            "group": "MX l7 firewall",
            "summary": "Update the MX L7 firewall rules for an MX network",
            "resource": "/networks/{networkId}/l7FirewallRules",
            "operation": "update"
        },
        {
            "group": "MX port",
            "summary": "Update the per-port VLAN settings for a single MX port.",
            "resource": "/networks/{networkId}/appliance/ports/{portId}",
            "operation": "update"
        },
        {
            "group": "MX uplink setting",
            "summary": "Updates the uplink bandwidth settings for your MX network.",
            "resource": "/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth",
            "operation": "update"
        },
        {
            "group": "Management interface settings",
            "summary": "Update the management interface settings for a device",
            "resource": "/devices/{serial}/managementInterfaceSettings",
            "operation": "update"
        },
        {
            "group": "Monitored media server",
            "summary": "Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.",
            "resource": "/organizations/{organizationId}/insight/monitoredMediaServers",
            "operation": "create"
        },
        {
            "group": "Monitored media server",
            "summary": "Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.",
            "resource": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
            "operation": "destroy"
        },
        {
            "group": "Monitored media server",
            "summary": "Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
            "resource": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
            "operation": "update"
        },
        {
            "group": "Multicast",
            "summary": "Update multicast settings for a network",
            "resource": "/networks/{networkId}/switch/settings/multicast",
            "operation": "update"
        },
        {
            "group": "Network",
            "summary": "Delete a network",
            "resource": "/networks/{networkId}",
            "operation": "destroy"
        },
        {
            "group": "Network",
            "summary": "Create a network",
            "resource": "/organizations/{organizationId}/networks",
            "operation": "create"
        },
        {
            "group": "Network settings",
            "summary": "Update the settings for a network",
            "resource": "/networks/{networkId}/settings",
            "operation": "update"
        },
        {
            "group": "Qos rule",
            "summary": "Add a quality of service rule",
            "resource": "/networks/{networkId}/switch/settings/qosRules",
            "operation": "create"
        },
        {
            "group": "Qos rule",
            "summary": "Update the order in which the rules should be processed by the switch",
            "resource": "/networks/{networkId}/switch/settings/qosRules/order",
            "operation": "update_order"
        },
        {
            "group": "Qos rule",
            "summary": "Delete a quality of service rule",
            "resource": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
            "operation": "destroy"
        },
        {
            "group": "Qos rule",
            "summary": "Update a quality of service rule",
            "resource": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
            "operation": "update"
        },
        {
            "group": "Quality and retention setting",
            "summary": "Update quality and retention settings for the given camera",
            "resource": "/devices/{serial}/camera/qualityAndRetentionSettings",
            "operation": "update"
        },
        {
            "group": "RF profile",
            "summary": "Creates new RF profile for this network",
            "resource": "/networks/{networkId}/wireless/rfProfiles",
            "operation": "create"
        },
        {
            "group": "RF profile",
            "summary": "Delete a RF Profile",
            "resource": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
            "operation": "destroy"
        },
        {
            "group": "RF profile",
            "summary": "Updates specified RF profile for this network",
            "resource": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
            "operation": "update"
        },
        {
            "group": "Radio settings",
            "summary": "Update the radio settings of a device",
            "resource": "/devices/{serial}/wireless/radio/settings",
            "operation": "update"
        },
        {
            "group": "STP configuration",
            "summary": "Updates STP settings",
            "resource": "/networks/{networkId}/switch/stp",
            "operation": "update"
        },
        {
            "group": "Site to site vpn",
            "summary": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
            "resource": "/networks/{networkId}/siteToSiteVpn",
            "operation": "update"
        },
        {
            "group": "Ssid",
            "summary": "Update the attributes of an SSID",
            "resource": "/networks/{networkId}/wireless/ssids/{number}",
            "operation": "update"
        },
        {
            "group": "Storm control",
            "summary": "Update the storm control configuration for a switch network",
            "resource": "/networks/{networkId}/switch/settings/stormControl",
            "operation": "update"
        },
        {
            "group": "Switch port",
            "summary": "Cycle a set of switch ports",
            "resource": "/devices/{serial}/switch/ports",
            "operation": "cycle"
        },
        {
            "group": "Switch port",
            "summary": "Update a switch port",
            "resource": "/devices/{serial}/switch/ports/{portId}",
            "operation": "update"
        },
        {
            "group": "Switch port schedule",
            "summary": "Update a switch port schedule",
            "resource": "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
            "operation": "update"
        },
        {
            "group": "Traffic shaping settings",
            "summary": "Update the traffic shaping settings for an SSID on an MR network",
            "resource": "/networks/{networkId}/ssids/{number}/trafficShaping",
            "operation": "update"
        },
        {
            "group": "Traffic shaping settings",
            "summary": "Update the traffic shaping settings for an MX network",
            "resource": "/networks/{networkId}/trafficShaping",
            "operation": "update"
        },
        {
            "group": "VLAN",
            "summary": "Add a VLAN",
            "resource": "/networks/{networkId}/appliance/vlans",
            "operation": "create"
        },
        {
            "group": "VLAN",
            "summary": "Delete a VLAN from a network",
            "resource": "/networks/{networkId}/appliance/vlans/{vlanId}",
            "operation": "destroy"
        },
        {
            "group": "VLAN",
            "summary": "Update a VLAN",
            "resource": "/networks/{networkId}/appliance/vlans/{vlanId}",
            "operation": "update"
        },
        {
            "group": "Warm spare",
            "summary": "Swap MX primary and warm spare appliances",
            "resource": "/networks/{networkId}/swapWarmSpare",
            "operation": "swap"
        },
        {
            "group": "Warm spare",
            "summary": "Update MX warm spare settings",
            "resource": "/networks/{networkId}/warmSpareSettings",
            "operation": "update"
        },
        {
            "group": "Wireless settings",
            "summary": "Update the wireless settings for a network",
            "resource": "/networks/{networkId}/wireless/settings",
            "operation": "update"
        }
    ]
}